
RFreceiver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000005c  00800100  00001688  0000171c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001688  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000022  0080015c  0080015c  00001778  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001778  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000017d4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002e8  00000000  00000000  00001814  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005d82  00000000  00000000  00001afc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fca  00000000  00000000  0000787e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000019b3  00000000  00000000  00008848  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000a68  00000000  00000000  0000a1fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000154b  00000000  00000000  0000ac64  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000410c  00000000  00000000  0000c1af  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002c0  00000000  00000000  000102bb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 35 00 	jmp	0x6a	; 0x6a <__ctors_end>
       4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
       8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
       c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      38:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__vector_14>
      3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

00000068 <__ctors_start>:
      68:	52 02       	muls	r21, r18

0000006a <__ctors_end>:
      6a:	11 24       	eor	r1, r1
      6c:	1f be       	out	0x3f, r1	; 63
      6e:	cf ef       	ldi	r28, 0xFF	; 255
      70:	d8 e0       	ldi	r29, 0x08	; 8
      72:	de bf       	out	0x3e, r29	; 62
      74:	cd bf       	out	0x3d, r28	; 61

00000076 <__do_copy_data>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a0 e0       	ldi	r26, 0x00	; 0
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	e8 e8       	ldi	r30, 0x88	; 136
      7e:	f6 e1       	ldi	r31, 0x16	; 22
      80:	02 c0       	rjmp	.+4      	; 0x86 <__do_copy_data+0x10>
      82:	05 90       	lpm	r0, Z+
      84:	0d 92       	st	X+, r0
      86:	ac 35       	cpi	r26, 0x5C	; 92
      88:	b1 07       	cpc	r27, r17
      8a:	d9 f7       	brne	.-10     	; 0x82 <__do_copy_data+0xc>

0000008c <__do_clear_bss>:
      8c:	21 e0       	ldi	r18, 0x01	; 1
      8e:	ac e5       	ldi	r26, 0x5C	; 92
      90:	b1 e0       	ldi	r27, 0x01	; 1
      92:	01 c0       	rjmp	.+2      	; 0x96 <.do_clear_bss_start>

00000094 <.do_clear_bss_loop>:
      94:	1d 92       	st	X+, r1

00000096 <.do_clear_bss_start>:
      96:	ae 37       	cpi	r26, 0x7E	; 126
      98:	b2 07       	cpc	r27, r18
      9a:	e1 f7       	brne	.-8      	; 0x94 <.do_clear_bss_loop>

0000009c <__do_global_ctors>:
      9c:	10 e0       	ldi	r17, 0x00	; 0
      9e:	c5 e3       	ldi	r28, 0x35	; 53
      a0:	d0 e0       	ldi	r29, 0x00	; 0
      a2:	04 c0       	rjmp	.+8      	; 0xac <__do_global_ctors+0x10>
      a4:	21 97       	sbiw	r28, 0x01	; 1
      a6:	fe 01       	movw	r30, r28
      a8:	0e 94 55 08 	call	0x10aa	; 0x10aa <__tablejump2__>
      ac:	c4 33       	cpi	r28, 0x34	; 52
      ae:	d1 07       	cpc	r29, r17
      b0:	c9 f7       	brne	.-14     	; 0xa4 <__do_global_ctors+0x8>
      b2:	0e 94 f5 01 	call	0x3ea	; 0x3ea <main>
      b6:	0c 94 42 0b 	jmp	0x1684	; 0x1684 <_exit>

000000ba <__bad_interrupt>:
      ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <UART_Init>:
	 // turn on CTC mode
	 TCCR0A |= (1 << WGM01);
	 // Set CS01 and CS00 bits for 64 prescaler
	 TCCR0B |= (1 << CS01) | (1 << CS00);
	 // enable timer compare interrupt
	 TIMSK0 |= (1 << OCIE0A);
      be:	e1 ec       	ldi	r30, 0xC1	; 193
      c0:	f0 e0       	ldi	r31, 0x00	; 0
      c2:	10 82       	st	Z, r1
      c4:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
      c8:	a2 ec       	ldi	r26, 0xC2	; 194
      ca:	b0 e0       	ldi	r27, 0x00	; 0
      cc:	8c 91       	ld	r24, X
      ce:	8e 60       	ori	r24, 0x0E	; 14
      d0:	8c 93       	st	X, r24
      d2:	83 e3       	ldi	r24, 0x33	; 51
      d4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
      d8:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
      dc:	80 81       	ld	r24, Z
      de:	88 61       	ori	r24, 0x18	; 24
      e0:	80 83       	st	Z, r24
      e2:	08 95       	ret

000000e4 <UART_Transmit>:
      e4:	90 e4       	ldi	r25, 0x40	; 64
      e6:	90 93 c0 00 	sts	0x00C0, r25	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
      ea:	e0 ec       	ldi	r30, 0xC0	; 192
      ec:	f0 e0       	ldi	r31, 0x00	; 0
      ee:	90 81       	ld	r25, Z
      f0:	95 ff       	sbrs	r25, 5
      f2:	fd cf       	rjmp	.-6      	; 0xee <UART_Transmit+0xa>
      f4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
      f8:	e0 ec       	ldi	r30, 0xC0	; 192
      fa:	f0 e0       	ldi	r31, 0x00	; 0
      fc:	80 81       	ld	r24, Z
      fe:	86 ff       	sbrs	r24, 6
     100:	fd cf       	rjmp	.-6      	; 0xfc <UART_Transmit+0x18>
     102:	08 95       	ret

00000104 <UART_Printfln>:
     104:	0f 93       	push	r16
     106:	1f 93       	push	r17
     108:	cf 93       	push	r28
     10a:	8c 01       	movw	r16, r24
     10c:	fc 01       	movw	r30, r24
     10e:	80 81       	ld	r24, Z
     110:	88 23       	and	r24, r24
     112:	51 f0       	breq	.+20     	; 0x128 <UART_Printfln+0x24>
     114:	c0 e0       	ldi	r28, 0x00	; 0
     116:	0e 94 72 00 	call	0xe4	; 0xe4 <UART_Transmit>
     11a:	cf 5f       	subi	r28, 0xFF	; 255
     11c:	f8 01       	movw	r30, r16
     11e:	ec 0f       	add	r30, r28
     120:	f1 1d       	adc	r31, r1
     122:	80 81       	ld	r24, Z
     124:	81 11       	cpse	r24, r1
     126:	f7 cf       	rjmp	.-18     	; 0x116 <UART_Printfln+0x12>
     128:	8a e0       	ldi	r24, 0x0A	; 10
     12a:	0e 94 72 00 	call	0xe4	; 0xe4 <UART_Transmit>
     12e:	cf 91       	pop	r28
     130:	1f 91       	pop	r17
     132:	0f 91       	pop	r16
     134:	08 95       	ret

00000136 <UART_Printf>:
     136:	0f 93       	push	r16
     138:	1f 93       	push	r17
     13a:	cf 93       	push	r28
     13c:	fc 01       	movw	r30, r24
     13e:	80 81       	ld	r24, Z
     140:	88 23       	and	r24, r24
     142:	59 f0       	breq	.+22     	; 0x15a <UART_Printf+0x24>
     144:	8f 01       	movw	r16, r30
     146:	c0 e0       	ldi	r28, 0x00	; 0
     148:	0e 94 72 00 	call	0xe4	; 0xe4 <UART_Transmit>
     14c:	cf 5f       	subi	r28, 0xFF	; 255
     14e:	f8 01       	movw	r30, r16
     150:	ec 0f       	add	r30, r28
     152:	f1 1d       	adc	r31, r1
     154:	80 81       	ld	r24, Z
     156:	81 11       	cpse	r24, r1
     158:	f7 cf       	rjmp	.-18     	; 0x148 <UART_Printf+0x12>
     15a:	cf 91       	pop	r28
     15c:	1f 91       	pop	r17
     15e:	0f 91       	pop	r16
     160:	08 95       	ret

00000162 <UART_Print_Num>:
     162:	0f 93       	push	r16
     164:	1f 93       	push	r17
     166:	cf 93       	push	r28
     168:	df 93       	push	r29
     16a:	8c 01       	movw	r16, r24
     16c:	9c 01       	movw	r18, r24
     16e:	32 95       	swap	r19
     170:	22 95       	swap	r18
     172:	2f 70       	andi	r18, 0x0F	; 15
     174:	23 27       	eor	r18, r19
     176:	3f 70       	andi	r19, 0x0F	; 15
     178:	23 27       	eor	r18, r19
     17a:	a7 e4       	ldi	r26, 0x47	; 71
     17c:	b3 e0       	ldi	r27, 0x03	; 3
     17e:	0e 94 46 08 	call	0x108c	; 0x108c <__umulhisi3>
     182:	96 95       	lsr	r25
     184:	87 95       	ror	r24
     186:	96 95       	lsr	r25
     188:	87 95       	ror	r24
     18a:	96 95       	lsr	r25
     18c:	87 95       	ror	r24
     18e:	80 5d       	subi	r24, 0xD0	; 208
     190:	80 33       	cpi	r24, 0x30	; 48
     192:	11 f0       	breq	.+4      	; 0x198 <UART_Print_Num+0x36>
     194:	0e 94 72 00 	call	0xe4	; 0xe4 <UART_Transmit>
     198:	98 01       	movw	r18, r16
     19a:	32 95       	swap	r19
     19c:	22 95       	swap	r18
     19e:	2f 70       	andi	r18, 0x0F	; 15
     1a0:	23 27       	eor	r18, r19
     1a2:	3f 70       	andi	r19, 0x0F	; 15
     1a4:	23 27       	eor	r18, r19
     1a6:	a7 e4       	ldi	r26, 0x47	; 71
     1a8:	b3 e0       	ldi	r27, 0x03	; 3
     1aa:	0e 94 46 08 	call	0x108c	; 0x108c <__umulhisi3>
     1ae:	ec 01       	movw	r28, r24
     1b0:	d6 95       	lsr	r29
     1b2:	c7 95       	ror	r28
     1b4:	d6 95       	lsr	r29
     1b6:	c7 95       	ror	r28
     1b8:	d6 95       	lsr	r29
     1ba:	c7 95       	ror	r28
     1bc:	20 e1       	ldi	r18, 0x10	; 16
     1be:	37 e2       	ldi	r19, 0x27	; 39
     1c0:	c2 9f       	mul	r28, r18
     1c2:	c0 01       	movw	r24, r0
     1c4:	c3 9f       	mul	r28, r19
     1c6:	90 0d       	add	r25, r0
     1c8:	d2 9f       	mul	r29, r18
     1ca:	90 0d       	add	r25, r0
     1cc:	11 24       	eor	r1, r1
     1ce:	e8 01       	movw	r28, r16
     1d0:	c8 1b       	sub	r28, r24
     1d2:	d9 0b       	sbc	r29, r25
     1d4:	9e 01       	movw	r18, r28
     1d6:	36 95       	lsr	r19
     1d8:	27 95       	ror	r18
     1da:	36 95       	lsr	r19
     1dc:	27 95       	ror	r18
     1de:	36 95       	lsr	r19
     1e0:	27 95       	ror	r18
     1e2:	a5 ec       	ldi	r26, 0xC5	; 197
     1e4:	b0 e2       	ldi	r27, 0x20	; 32
     1e6:	0e 94 46 08 	call	0x108c	; 0x108c <__umulhisi3>
     1ea:	92 95       	swap	r25
     1ec:	82 95       	swap	r24
     1ee:	8f 70       	andi	r24, 0x0F	; 15
     1f0:	89 27       	eor	r24, r25
     1f2:	9f 70       	andi	r25, 0x0F	; 15
     1f4:	89 27       	eor	r24, r25
     1f6:	80 5d       	subi	r24, 0xD0	; 208
     1f8:	80 33       	cpi	r24, 0x30	; 48
     1fa:	11 f0       	breq	.+4      	; 0x200 <UART_Print_Num+0x9e>
     1fc:	0e 94 72 00 	call	0xe4	; 0xe4 <UART_Transmit>
     200:	9e 01       	movw	r18, r28
     202:	36 95       	lsr	r19
     204:	27 95       	ror	r18
     206:	36 95       	lsr	r19
     208:	27 95       	ror	r18
     20a:	36 95       	lsr	r19
     20c:	27 95       	ror	r18
     20e:	a5 ec       	ldi	r26, 0xC5	; 197
     210:	b0 e2       	ldi	r27, 0x20	; 32
     212:	0e 94 46 08 	call	0x108c	; 0x108c <__umulhisi3>
     216:	8c 01       	movw	r16, r24
     218:	12 95       	swap	r17
     21a:	02 95       	swap	r16
     21c:	0f 70       	andi	r16, 0x0F	; 15
     21e:	01 27       	eor	r16, r17
     220:	1f 70       	andi	r17, 0x0F	; 15
     222:	01 27       	eor	r16, r17
     224:	28 ee       	ldi	r18, 0xE8	; 232
     226:	33 e0       	ldi	r19, 0x03	; 3
     228:	02 9f       	mul	r16, r18
     22a:	c0 01       	movw	r24, r0
     22c:	03 9f       	mul	r16, r19
     22e:	90 0d       	add	r25, r0
     230:	12 9f       	mul	r17, r18
     232:	90 0d       	add	r25, r0
     234:	11 24       	eor	r1, r1
     236:	8e 01       	movw	r16, r28
     238:	08 1b       	sub	r16, r24
     23a:	19 0b       	sbc	r17, r25
     23c:	98 01       	movw	r18, r16
     23e:	36 95       	lsr	r19
     240:	27 95       	ror	r18
     242:	36 95       	lsr	r19
     244:	27 95       	ror	r18
     246:	ab e7       	ldi	r26, 0x7B	; 123
     248:	b4 e1       	ldi	r27, 0x14	; 20
     24a:	0e 94 46 08 	call	0x108c	; 0x108c <__umulhisi3>
     24e:	96 95       	lsr	r25
     250:	87 95       	ror	r24
     252:	80 5d       	subi	r24, 0xD0	; 208
     254:	80 33       	cpi	r24, 0x30	; 48
     256:	11 f0       	breq	.+4      	; 0x25c <UART_Print_Num+0xfa>
     258:	0e 94 72 00 	call	0xe4	; 0xe4 <UART_Transmit>
     25c:	98 01       	movw	r18, r16
     25e:	36 95       	lsr	r19
     260:	27 95       	ror	r18
     262:	36 95       	lsr	r19
     264:	27 95       	ror	r18
     266:	ab e7       	ldi	r26, 0x7B	; 123
     268:	b4 e1       	ldi	r27, 0x14	; 20
     26a:	0e 94 46 08 	call	0x108c	; 0x108c <__umulhisi3>
     26e:	ec 01       	movw	r28, r24
     270:	d6 95       	lsr	r29
     272:	c7 95       	ror	r28
     274:	24 e6       	ldi	r18, 0x64	; 100
     276:	2c 9f       	mul	r18, r28
     278:	c0 01       	movw	r24, r0
     27a:	2d 9f       	mul	r18, r29
     27c:	90 0d       	add	r25, r0
     27e:	11 24       	eor	r1, r1
     280:	e8 01       	movw	r28, r16
     282:	c8 1b       	sub	r28, r24
     284:	d9 0b       	sbc	r29, r25
     286:	9e 01       	movw	r18, r28
     288:	ad ec       	ldi	r26, 0xCD	; 205
     28a:	bc ec       	ldi	r27, 0xCC	; 204
     28c:	0e 94 46 08 	call	0x108c	; 0x108c <__umulhisi3>
     290:	96 95       	lsr	r25
     292:	87 95       	ror	r24
     294:	96 95       	lsr	r25
     296:	87 95       	ror	r24
     298:	96 95       	lsr	r25
     29a:	87 95       	ror	r24
     29c:	80 5d       	subi	r24, 0xD0	; 208
     29e:	80 33       	cpi	r24, 0x30	; 48
     2a0:	11 f0       	breq	.+4      	; 0x2a6 <UART_Print_Num+0x144>
     2a2:	0e 94 72 00 	call	0xe4	; 0xe4 <UART_Transmit>
     2a6:	9e 01       	movw	r18, r28
     2a8:	ad ec       	ldi	r26, 0xCD	; 205
     2aa:	bc ec       	ldi	r27, 0xCC	; 204
     2ac:	0e 94 46 08 	call	0x108c	; 0x108c <__umulhisi3>
     2b0:	96 95       	lsr	r25
     2b2:	87 95       	ror	r24
     2b4:	96 95       	lsr	r25
     2b6:	87 95       	ror	r24
     2b8:	96 95       	lsr	r25
     2ba:	87 95       	ror	r24
     2bc:	9c 01       	movw	r18, r24
     2be:	22 0f       	add	r18, r18
     2c0:	33 1f       	adc	r19, r19
     2c2:	88 0f       	add	r24, r24
     2c4:	99 1f       	adc	r25, r25
     2c6:	88 0f       	add	r24, r24
     2c8:	99 1f       	adc	r25, r25
     2ca:	88 0f       	add	r24, r24
     2cc:	99 1f       	adc	r25, r25
     2ce:	82 0f       	add	r24, r18
     2d0:	93 1f       	adc	r25, r19
     2d2:	9e 01       	movw	r18, r28
     2d4:	28 1b       	sub	r18, r24
     2d6:	39 0b       	sbc	r19, r25
     2d8:	c9 01       	movw	r24, r18
     2da:	80 5d       	subi	r24, 0xD0	; 208
     2dc:	0e 94 72 00 	call	0xe4	; 0xe4 <UART_Transmit>
     2e0:	8a e0       	ldi	r24, 0x0A	; 10
     2e2:	0e 94 72 00 	call	0xe4	; 0xe4 <UART_Transmit>
     2e6:	df 91       	pop	r29
     2e8:	cf 91       	pop	r28
     2ea:	1f 91       	pop	r17
     2ec:	0f 91       	pop	r16
     2ee:	08 95       	ret

000002f0 <Set_pin>:
     2f0:	61 30       	cpi	r22, 0x01	; 1
     2f2:	71 05       	cpc	r23, r1
     2f4:	f1 f4       	brne	.+60     	; 0x332 <Set_pin+0x42>
     2f6:	88 30       	cpi	r24, 0x08	; 8
     2f8:	91 05       	cpc	r25, r1
     2fa:	70 f0       	brcs	.+28     	; 0x318 <Set_pin+0x28>
     2fc:	44 b1       	in	r20, 0x04	; 4
     2fe:	08 97       	sbiw	r24, 0x08	; 8
     300:	21 e0       	ldi	r18, 0x01	; 1
     302:	30 e0       	ldi	r19, 0x00	; 0
     304:	b9 01       	movw	r22, r18
     306:	02 c0       	rjmp	.+4      	; 0x30c <Set_pin+0x1c>
     308:	66 0f       	add	r22, r22
     30a:	77 1f       	adc	r23, r23
     30c:	8a 95       	dec	r24
     30e:	e2 f7       	brpl	.-8      	; 0x308 <Set_pin+0x18>
     310:	cb 01       	movw	r24, r22
     312:	84 2b       	or	r24, r20
     314:	84 b9       	out	0x04, r24	; 4
     316:	08 95       	ret
     318:	4a b1       	in	r20, 0x0a	; 10
     31a:	21 e0       	ldi	r18, 0x01	; 1
     31c:	30 e0       	ldi	r19, 0x00	; 0
     31e:	b9 01       	movw	r22, r18
     320:	02 c0       	rjmp	.+4      	; 0x326 <Set_pin+0x36>
     322:	66 0f       	add	r22, r22
     324:	77 1f       	adc	r23, r23
     326:	8a 95       	dec	r24
     328:	e2 f7       	brpl	.-8      	; 0x322 <Set_pin+0x32>
     32a:	cb 01       	movw	r24, r22
     32c:	84 2b       	or	r24, r20
     32e:	8a b9       	out	0x0a, r24	; 10
     330:	08 95       	ret
     332:	08 97       	sbiw	r24, 0x08	; 8
     334:	18 f0       	brcs	.+6      	; 0x33c <Set_pin+0x4c>
     336:	84 b1       	in	r24, 0x04	; 4
     338:	84 b9       	out	0x04, r24	; 4
     33a:	08 95       	ret
     33c:	8a b1       	in	r24, 0x0a	; 10
     33e:	8a b9       	out	0x0a, r24	; 10
     340:	08 95       	ret

00000342 <Write_Digital>:
     342:	66 23       	and	r22, r22
     344:	d9 f0       	breq	.+54     	; 0x37c <Write_Digital+0x3a>
     346:	88 30       	cpi	r24, 0x08	; 8
     348:	91 05       	cpc	r25, r1
     34a:	58 f0       	brcs	.+22     	; 0x362 <Write_Digital+0x20>
     34c:	08 97       	sbiw	r24, 0x08	; 8
     34e:	21 e0       	ldi	r18, 0x01	; 1
     350:	30 e0       	ldi	r19, 0x00	; 0
     352:	a9 01       	movw	r20, r18
     354:	02 c0       	rjmp	.+4      	; 0x35a <Write_Digital+0x18>
     356:	44 0f       	add	r20, r20
     358:	55 1f       	adc	r21, r21
     35a:	8a 95       	dec	r24
     35c:	e2 f7       	brpl	.-8      	; 0x356 <Write_Digital+0x14>
     35e:	45 b9       	out	0x05, r20	; 5
     360:	08 95       	ret
     362:	4b b1       	in	r20, 0x0b	; 11
     364:	21 e0       	ldi	r18, 0x01	; 1
     366:	30 e0       	ldi	r19, 0x00	; 0
     368:	b9 01       	movw	r22, r18
     36a:	02 c0       	rjmp	.+4      	; 0x370 <Write_Digital+0x2e>
     36c:	66 0f       	add	r22, r22
     36e:	77 1f       	adc	r23, r23
     370:	8a 95       	dec	r24
     372:	e2 f7       	brpl	.-8      	; 0x36c <Write_Digital+0x2a>
     374:	cb 01       	movw	r24, r22
     376:	84 2b       	or	r24, r20
     378:	8b b9       	out	0x0b, r24	; 11
     37a:	08 95       	ret
     37c:	88 30       	cpi	r24, 0x08	; 8
     37e:	91 05       	cpc	r25, r1
     380:	78 f0       	brcs	.+30     	; 0x3a0 <Write_Digital+0x5e>
     382:	45 b1       	in	r20, 0x05	; 5
     384:	08 97       	sbiw	r24, 0x08	; 8
     386:	21 e0       	ldi	r18, 0x01	; 1
     388:	30 e0       	ldi	r19, 0x00	; 0
     38a:	b9 01       	movw	r22, r18
     38c:	02 c0       	rjmp	.+4      	; 0x392 <Write_Digital+0x50>
     38e:	66 0f       	add	r22, r22
     390:	77 1f       	adc	r23, r23
     392:	8a 95       	dec	r24
     394:	e2 f7       	brpl	.-8      	; 0x38e <Write_Digital+0x4c>
     396:	cb 01       	movw	r24, r22
     398:	80 95       	com	r24
     39a:	84 23       	and	r24, r20
     39c:	85 b9       	out	0x05, r24	; 5
     39e:	08 95       	ret
     3a0:	4b b1       	in	r20, 0x0b	; 11
     3a2:	21 e0       	ldi	r18, 0x01	; 1
     3a4:	30 e0       	ldi	r19, 0x00	; 0
     3a6:	b9 01       	movw	r22, r18
     3a8:	02 c0       	rjmp	.+4      	; 0x3ae <Write_Digital+0x6c>
     3aa:	66 0f       	add	r22, r22
     3ac:	77 1f       	adc	r23, r23
     3ae:	8a 95       	dec	r24
     3b0:	e2 f7       	brpl	.-8      	; 0x3aa <Write_Digital+0x68>
     3b2:	cb 01       	movw	r24, r22
     3b4:	80 95       	com	r24
     3b6:	84 23       	and	r24, r20
     3b8:	8b b9       	out	0x0b, r24	; 11
     3ba:	08 95       	ret

000003bc <__vector_14>:
}
// ISR for timer 0
ISR(TIMER0_COMPA_vect)
{
     3bc:	1f 92       	push	r1
     3be:	0f 92       	push	r0
     3c0:	0f b6       	in	r0, 0x3f	; 63
     3c2:	0f 92       	push	r0
     3c4:	11 24       	eor	r1, r1
     3c6:	8f 93       	push	r24
     3c8:	9f 93       	push	r25
	cnt++;
     3ca:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <__data_end>
     3ce:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <__data_end+0x1>
     3d2:	01 96       	adiw	r24, 0x01	; 1
     3d4:	90 93 5d 01 	sts	0x015D, r25	; 0x80015d <__data_end+0x1>
     3d8:	80 93 5c 01 	sts	0x015C, r24	; 0x80015c <__data_end>
}
     3dc:	9f 91       	pop	r25
     3de:	8f 91       	pop	r24
     3e0:	0f 90       	pop	r0
     3e2:	0f be       	out	0x3f, r0	; 63
     3e4:	0f 90       	pop	r0
     3e6:	1f 90       	pop	r1
     3e8:	18 95       	reti

000003ea <main>:
RF24 radio(9, 10); // CE, CSN
const byte address[6] = "00001";
unsigned char count=0;
unsigned char p=0;
int main(void)
{
     3ea:	cf 93       	push	r28
     3ec:	df 93       	push	r29
     3ee:	cd b7       	in	r28, 0x3d	; 61
     3f0:	de b7       	in	r29, 0x3e	; 62
     3f2:	a0 97       	sbiw	r28, 0x20	; 32
     3f4:	0f b6       	in	r0, 0x3f	; 63
     3f6:	f8 94       	cli
     3f8:	de bf       	out	0x3e, r29	; 62
     3fa:	0f be       	out	0x3f, r0	; 63
     3fc:	cd bf       	out	0x3d, r28	; 61
	UART_Init(9600);
     3fe:	60 e8       	ldi	r22, 0x80	; 128
     400:	75 e2       	ldi	r23, 0x25	; 37
     402:	80 e0       	ldi	r24, 0x00	; 0
     404:	90 e0       	ldi	r25, 0x00	; 0
     406:	0e 94 5f 00 	call	0xbe	; 0xbe <UART_Init>
	radio.begin();
     40a:	80 e6       	ldi	r24, 0x60	; 96
     40c:	91 e0       	ldi	r25, 0x01	; 1
     40e:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <_ZN4RF245beginEv>
	radio.openReadingPipe(0, address);
     412:	4b e1       	ldi	r20, 0x1B	; 27
     414:	51 e0       	ldi	r21, 0x01	; 1
     416:	60 e0       	ldi	r22, 0x00	; 0
     418:	80 e6       	ldi	r24, 0x60	; 96
     41a:	91 e0       	ldi	r25, 0x01	; 1
     41c:	0e 94 79 04 	call	0x8f2	; 0x8f2 <_ZN4RF2415openReadingPipeEhPKh>
	//radio.setPALevel(RF24_PA_MAX);// 0dBm power level
	//radio.setDataRate(RF24_250KBPS);
	radio.startListening();
     420:	80 e6       	ldi	r24, 0x60	; 96
     422:	91 e0       	ldi	r25, 0x01	; 1
     424:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <_ZN4RF2414startListeningEv>
	
	while (1)
	{   // UART_Printfln("JUST TESt");
		 if (radio.available())
		 {
			 char text[32] = "";
     428:	0f 2e       	mov	r0, r31
     42a:	fe e1       	ldi	r31, 0x1E	; 30
     42c:	ff 2e       	mov	r15, r31
     42e:	f0 2d       	mov	r31, r0
     430:	8e 01       	movw	r16, r28
     432:	0d 5f       	subi	r16, 0xFD	; 253
     434:	1f 4f       	sbci	r17, 0xFF	; 255
	//radio.setDataRate(RF24_250KBPS);
	radio.startListening();
	
	while (1)
	{   // UART_Printfln("JUST TESt");
		 if (radio.available())
     436:	80 e6       	ldi	r24, 0x60	; 96
     438:	91 e0       	ldi	r25, 0x01	; 1
     43a:	0e 94 67 04 	call	0x8ce	; 0x8ce <_ZN4RF249availableEv>
     43e:	88 23       	and	r24, r24
     440:	d1 f3       	breq	.-12     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
		 {
			 char text[32] = "";
     442:	1a 82       	std	Y+2, r1	; 0x02
     444:	19 82       	std	Y+1, r1	; 0x01
     446:	f8 01       	movw	r30, r16
     448:	8f 2d       	mov	r24, r15
     44a:	11 92       	st	Z+, r1
     44c:	8a 95       	dec	r24
     44e:	e9 f7       	brne	.-6      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
			 radio.read(&text, sizeof(text));
     450:	40 e2       	ldi	r20, 0x20	; 32
     452:	be 01       	movw	r22, r28
     454:	6f 5f       	subi	r22, 0xFF	; 255
     456:	7f 4f       	sbci	r23, 0xFF	; 255
     458:	80 e6       	ldi	r24, 0x60	; 96
     45a:	91 e0       	ldi	r25, 0x01	; 1
     45c:	0e 94 6c 04 	call	0x8d8	; 0x8d8 <_ZN4RF244readEPvh>
			 UART_Printfln(text);
     460:	ce 01       	movw	r24, r28
     462:	01 96       	adiw	r24, 0x01	; 1
     464:	0e 94 82 00 	call	0x104	; 0x104 <UART_Printfln>
			 UART_Printf("Packet count:");
     468:	80 e0       	ldi	r24, 0x00	; 0
     46a:	91 e0       	ldi	r25, 0x01	; 1
     46c:	0e 94 9b 00 	call	0x136	; 0x136 <UART_Printf>
			 UART_Print_Num(count);
     470:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <count>
     474:	90 e0       	ldi	r25, 0x00	; 0
     476:	0e 94 b1 00 	call	0x162	; 0x162 <UART_Print_Num>
			 count++;
     47a:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <count>
     47e:	8f 5f       	subi	r24, 0xFF	; 255
     480:	80 93 5f 01 	sts	0x015F, r24	; 0x80015f <count>
			 p=radio.getPALevel();
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	91 e0       	ldi	r25, 0x01	; 1
     488:	0e 94 38 05 	call	0xa70	; 0xa70 <_ZN4RF2410getPALevelEv>
     48c:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <p>
			 UART_Printf("Power Level:");
     490:	8e e0       	ldi	r24, 0x0E	; 14
     492:	91 e0       	ldi	r25, 0x01	; 1
     494:	0e 94 9b 00 	call	0x136	; 0x136 <UART_Printf>
			 UART_Print_Num(p);
     498:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <p>
     49c:	90 e0       	ldi	r25, 0x00	; 0
     49e:	0e 94 b1 00 	call	0x162	; 0x162 <UART_Print_Num>
     4a2:	c9 cf       	rjmp	.-110    	; 0x436 <__LOCK_REGION_LENGTH__+0x36>

000004a4 <_GLOBAL__sub_I_radio>:
 * Author : sachin mahadevjadhav
 */ 
#include <avr/io.h>
#include "RF24.h"

RF24 radio(9, 10); // CE, CSN
     4a4:	4a e0       	ldi	r20, 0x0A	; 10
     4a6:	50 e0       	ldi	r21, 0x00	; 0
     4a8:	69 e0       	ldi	r22, 0x09	; 9
     4aa:	70 e0       	ldi	r23, 0x00	; 0
     4ac:	80 e6       	ldi	r24, 0x60	; 96
     4ae:	91 e0       	ldi	r25, 0x01	; 1
     4b0:	0e 94 13 04 	call	0x826	; 0x826 <_ZN4RF24C1Ejj>
     4b4:	08 95       	ret

000004b6 <_ZN4RF243csnEb>:
	  level = (level << 1) + 1;	 		// Else set level as requested
  }


  write_register( RF_SETUP, setup |= level ) ;	// Write it to the chip
}
     4b6:	4f 92       	push	r4
     4b8:	5f 92       	push	r5
     4ba:	6f 92       	push	r6
     4bc:	7f 92       	push	r7
     4be:	8f 92       	push	r8
     4c0:	9f 92       	push	r9
     4c2:	af 92       	push	r10
     4c4:	bf 92       	push	r11
     4c6:	cf 92       	push	r12
     4c8:	df 92       	push	r13
     4ca:	ef 92       	push	r14
     4cc:	ff 92       	push	r15
     4ce:	1f 93       	push	r17
     4d0:	cf 93       	push	r28
     4d2:	df 93       	push	r29
     4d4:	ec 01       	movw	r28, r24
     4d6:	8c b5       	in	r24, 0x2c	; 44
     4d8:	8f 7d       	andi	r24, 0xDF	; 223
     4da:	8c bd       	out	0x2c, r24	; 44
     4dc:	8c b5       	in	r24, 0x2c	; 44
     4de:	83 7f       	andi	r24, 0xF3	; 243
     4e0:	8c bd       	out	0x2c, r24	; 44
     4e2:	8c b5       	in	r24, 0x2c	; 44
     4e4:	8c 7f       	andi	r24, 0xFC	; 252
     4e6:	8c bd       	out	0x2c, r24	; 44
     4e8:	8d b5       	in	r24, 0x2d	; 45
     4ea:	81 60       	ori	r24, 0x01	; 1
     4ec:	8d bd       	out	0x2d, r24	; 45
     4ee:	8a 81       	ldd	r24, Y+2	; 0x02
     4f0:	9b 81       	ldd	r25, Y+3	; 0x03
     4f2:	0e 94 a1 01 	call	0x342	; 0x342 <Write_Digital>
     4f6:	6c 89       	ldd	r22, Y+20	; 0x14
     4f8:	7d 89       	ldd	r23, Y+21	; 0x15
     4fa:	8e 89       	ldd	r24, Y+22	; 0x16
     4fc:	9f 89       	ldd	r25, Y+23	; 0x17
     4fe:	0e 94 22 07 	call	0xe44	; 0xe44 <__floatunsisf>
     502:	6b 01       	movw	r12, r22
     504:	7c 01       	movw	r14, r24
     506:	2b ea       	ldi	r18, 0xAB	; 171
     508:	3a ea       	ldi	r19, 0xAA	; 170
     50a:	4a e2       	ldi	r20, 0x2A	; 42
     50c:	50 e4       	ldi	r21, 0x40	; 64
     50e:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <__mulsf3>
     512:	4b 01       	movw	r8, r22
     514:	5c 01       	movw	r10, r24
     516:	20 e0       	ldi	r18, 0x00	; 0
     518:	30 e0       	ldi	r19, 0x00	; 0
     51a:	40 e8       	ldi	r20, 0x80	; 128
     51c:	5f e3       	ldi	r21, 0x3F	; 63
     51e:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <__cmpsf2>
     522:	88 23       	and	r24, r24
     524:	0c f4       	brge	.+2      	; 0x528 <_ZN4RF243csnEb+0x72>
     526:	6e c0       	rjmp	.+220    	; 0x604 <_ZN4RF243csnEb+0x14e>
     528:	a7 01       	movw	r20, r14
     52a:	96 01       	movw	r18, r12
     52c:	c7 01       	movw	r24, r14
     52e:	b6 01       	movw	r22, r12
     530:	0e 94 10 06 	call	0xc20	; 0xc20 <__addsf3>
     534:	2b 01       	movw	r4, r22
     536:	3c 01       	movw	r6, r24
     538:	20 e0       	ldi	r18, 0x00	; 0
     53a:	3f ef       	ldi	r19, 0xFF	; 255
     53c:	4f e7       	ldi	r20, 0x7F	; 127
     53e:	57 e4       	ldi	r21, 0x47	; 71
     540:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <__gesf2>
     544:	18 16       	cp	r1, r24
     546:	0c f0       	brlt	.+2      	; 0x54a <_ZN4RF243csnEb+0x94>
     548:	45 c0       	rjmp	.+138    	; 0x5d4 <_ZN4RF243csnEb+0x11e>
     54a:	20 e0       	ldi	r18, 0x00	; 0
     54c:	30 e0       	ldi	r19, 0x00	; 0
     54e:	4a e7       	ldi	r20, 0x7A	; 122
     550:	54 e4       	ldi	r21, 0x44	; 68
     552:	c7 01       	movw	r24, r14
     554:	b6 01       	movw	r22, r12
     556:	0e 94 81 06 	call	0xd02	; 0xd02 <__divsf3>
     55a:	4b 01       	movw	r8, r22
     55c:	5c 01       	movw	r10, r24
     55e:	20 e0       	ldi	r18, 0x00	; 0
     560:	30 e0       	ldi	r19, 0x00	; 0
     562:	4a ef       	ldi	r20, 0xFA	; 250
     564:	54 e4       	ldi	r21, 0x44	; 68
     566:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <__mulsf3>
     56a:	6b 01       	movw	r12, r22
     56c:	7c 01       	movw	r14, r24
     56e:	20 e0       	ldi	r18, 0x00	; 0
     570:	30 e0       	ldi	r19, 0x00	; 0
     572:	40 e8       	ldi	r20, 0x80	; 128
     574:	5f e3       	ldi	r21, 0x3F	; 63
     576:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <__cmpsf2>
     57a:	88 23       	and	r24, r24
     57c:	2c f1       	brlt	.+74     	; 0x5c8 <_ZN4RF243csnEb+0x112>
     57e:	20 e0       	ldi	r18, 0x00	; 0
     580:	3f ef       	ldi	r19, 0xFF	; 255
     582:	4f e7       	ldi	r20, 0x7F	; 127
     584:	57 e4       	ldi	r21, 0x47	; 71
     586:	c7 01       	movw	r24, r14
     588:	b6 01       	movw	r22, r12
     58a:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <__gesf2>
     58e:	18 16       	cp	r1, r24
     590:	b4 f4       	brge	.+44     	; 0x5be <_ZN4RF243csnEb+0x108>
     592:	20 e0       	ldi	r18, 0x00	; 0
     594:	30 e0       	ldi	r19, 0x00	; 0
     596:	40 e2       	ldi	r20, 0x20	; 32
     598:	51 e4       	ldi	r21, 0x41	; 65
     59a:	c5 01       	movw	r24, r10
     59c:	b4 01       	movw	r22, r8
     59e:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <__mulsf3>
     5a2:	0e 94 f3 06 	call	0xde6	; 0xde6 <__fixunssfsi>
     5a6:	61 15       	cp	r22, r1
     5a8:	71 05       	cpc	r23, r1
     5aa:	69 f1       	breq	.+90     	; 0x606 <_ZN4RF243csnEb+0x150>
     5ac:	28 ec       	ldi	r18, 0xC8	; 200
     5ae:	30 e0       	ldi	r19, 0x00	; 0
     5b0:	c9 01       	movw	r24, r18
     5b2:	01 97       	sbiw	r24, 0x01	; 1
     5b4:	f1 f7       	brne	.-4      	; 0x5b2 <_ZN4RF243csnEb+0xfc>
     5b6:	61 50       	subi	r22, 0x01	; 1
     5b8:	71 09       	sbc	r23, r1
     5ba:	d1 f7       	brne	.-12     	; 0x5b0 <_ZN4RF243csnEb+0xfa>
     5bc:	24 c0       	rjmp	.+72     	; 0x606 <_ZN4RF243csnEb+0x150>
     5be:	c7 01       	movw	r24, r14
     5c0:	b6 01       	movw	r22, r12
     5c2:	0e 94 f3 06 	call	0xde6	; 0xde6 <__fixunssfsi>
     5c6:	02 c0       	rjmp	.+4      	; 0x5cc <_ZN4RF243csnEb+0x116>
     5c8:	61 e0       	ldi	r22, 0x01	; 1
     5ca:	70 e0       	ldi	r23, 0x00	; 0
     5cc:	cb 01       	movw	r24, r22
     5ce:	01 97       	sbiw	r24, 0x01	; 1
     5d0:	f1 f7       	brne	.-4      	; 0x5ce <_ZN4RF243csnEb+0x118>
     5d2:	19 c0       	rjmp	.+50     	; 0x606 <_ZN4RF243csnEb+0x150>
     5d4:	20 e0       	ldi	r18, 0x00	; 0
     5d6:	30 e0       	ldi	r19, 0x00	; 0
     5d8:	4f e7       	ldi	r20, 0x7F	; 127
     5da:	53 e4       	ldi	r21, 0x43	; 67
     5dc:	c5 01       	movw	r24, r10
     5de:	b4 01       	movw	r22, r8
     5e0:	0e 94 d4 07 	call	0xfa8	; 0xfa8 <__gesf2>
     5e4:	18 16       	cp	r1, r24
     5e6:	44 f4       	brge	.+16     	; 0x5f8 <_ZN4RF243csnEb+0x142>
     5e8:	c3 01       	movw	r24, r6
     5ea:	b2 01       	movw	r22, r4
     5ec:	0e 94 f3 06 	call	0xde6	; 0xde6 <__fixunssfsi>
     5f0:	cb 01       	movw	r24, r22
     5f2:	01 97       	sbiw	r24, 0x01	; 1
     5f4:	f1 f7       	brne	.-4      	; 0x5f2 <_ZN4RF243csnEb+0x13c>
     5f6:	09 c0       	rjmp	.+18     	; 0x60a <_ZN4RF243csnEb+0x154>
     5f8:	c5 01       	movw	r24, r10
     5fa:	b4 01       	movw	r22, r8
     5fc:	0e 94 f3 06 	call	0xde6	; 0xde6 <__fixunssfsi>
     600:	16 2f       	mov	r17, r22
     602:	01 c0       	rjmp	.+2      	; 0x606 <_ZN4RF243csnEb+0x150>
     604:	11 e0       	ldi	r17, 0x01	; 1
     606:	1a 95       	dec	r17
     608:	f1 f7       	brne	.-4      	; 0x606 <_ZN4RF243csnEb+0x150>
     60a:	df 91       	pop	r29
     60c:	cf 91       	pop	r28
     60e:	1f 91       	pop	r17
     610:	ff 90       	pop	r15
     612:	ef 90       	pop	r14
     614:	df 90       	pop	r13
     616:	cf 90       	pop	r12
     618:	bf 90       	pop	r11
     61a:	af 90       	pop	r10
     61c:	9f 90       	pop	r9
     61e:	8f 90       	pop	r8
     620:	7f 90       	pop	r7
     622:	6f 90       	pop	r6
     624:	5f 90       	pop	r5
     626:	4f 90       	pop	r4
     628:	08 95       	ret

0000062a <_ZN4RF242ceEb>:
     62a:	fc 01       	movw	r30, r24
     62c:	80 81       	ld	r24, Z
     62e:	91 81       	ldd	r25, Z+1	; 0x01
     630:	22 81       	ldd	r18, Z+2	; 0x02
     632:	33 81       	ldd	r19, Z+3	; 0x03
     634:	82 17       	cp	r24, r18
     636:	93 07       	cpc	r25, r19
     638:	11 f0       	breq	.+4      	; 0x63e <_ZN4RF242ceEb+0x14>
     63a:	0e 94 a1 01 	call	0x342	; 0x342 <Write_Digital>
     63e:	08 95       	ret

00000640 <_ZN4RF2413read_registerEh>:
     640:	0f 93       	push	r16
     642:	1f 93       	push	r17
     644:	cf 93       	push	r28
     646:	8c 01       	movw	r16, r24
     648:	c6 2f       	mov	r28, r22
     64a:	60 e0       	ldi	r22, 0x00	; 0
     64c:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <_ZN4RF243csnEb>
     650:	cf 71       	andi	r28, 0x1F	; 31
     652:	ce bd       	out	0x2e, r28	; 46
     654:	00 00       	nop
     656:	0d b4       	in	r0, 0x2d	; 45
     658:	07 fe       	sbrs	r0, 7
     65a:	fd cf       	rjmp	.-6      	; 0x656 <_ZN4RF2413read_registerEh+0x16>
     65c:	8e b5       	in	r24, 0x2e	; 46
     65e:	8f ef       	ldi	r24, 0xFF	; 255
     660:	8e bd       	out	0x2e, r24	; 46
     662:	00 00       	nop
     664:	0d b4       	in	r0, 0x2d	; 45
     666:	07 fe       	sbrs	r0, 7
     668:	fd cf       	rjmp	.-6      	; 0x664 <_ZN4RF2413read_registerEh+0x24>
     66a:	ce b5       	in	r28, 0x2e	; 46
     66c:	61 e0       	ldi	r22, 0x01	; 1
     66e:	c8 01       	movw	r24, r16
     670:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <_ZN4RF243csnEb>
     674:	8c 2f       	mov	r24, r28
     676:	cf 91       	pop	r28
     678:	1f 91       	pop	r17
     67a:	0f 91       	pop	r16
     67c:	08 95       	ret

0000067e <_ZN4RF2414write_registerEhPKhh>:
     67e:	ef 92       	push	r14
     680:	ff 92       	push	r15
     682:	0f 93       	push	r16
     684:	1f 93       	push	r17
     686:	cf 93       	push	r28
     688:	df 93       	push	r29
     68a:	8c 01       	movw	r16, r24
     68c:	c6 2f       	mov	r28, r22
     68e:	e4 2e       	mov	r14, r20
     690:	f5 2e       	mov	r15, r21
     692:	d2 2f       	mov	r29, r18
     694:	60 e0       	ldi	r22, 0x00	; 0
     696:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <_ZN4RF243csnEb>
     69a:	cf 71       	andi	r28, 0x1F	; 31
     69c:	c0 62       	ori	r28, 0x20	; 32
     69e:	ce bd       	out	0x2e, r28	; 46
     6a0:	00 00       	nop
     6a2:	0d b4       	in	r0, 0x2d	; 45
     6a4:	07 fe       	sbrs	r0, 7
     6a6:	fd cf       	rjmp	.-6      	; 0x6a2 <_ZN4RF2414write_registerEhPKhh+0x24>
     6a8:	ce b5       	in	r28, 0x2e	; 46
     6aa:	8f ef       	ldi	r24, 0xFF	; 255
     6ac:	8d 0f       	add	r24, r29
     6ae:	dd 23       	and	r29, r29
     6b0:	59 f0       	breq	.+22     	; 0x6c8 <_ZN4RF2414write_registerEhPKhh+0x4a>
     6b2:	ee 2d       	mov	r30, r14
     6b4:	ff 2d       	mov	r31, r15
     6b6:	91 91       	ld	r25, Z+
     6b8:	9e bd       	out	0x2e, r25	; 46
     6ba:	00 00       	nop
     6bc:	0d b4       	in	r0, 0x2d	; 45
     6be:	07 fe       	sbrs	r0, 7
     6c0:	fd cf       	rjmp	.-6      	; 0x6bc <_ZN4RF2414write_registerEhPKhh+0x3e>
     6c2:	9e b5       	in	r25, 0x2e	; 46
     6c4:	81 50       	subi	r24, 0x01	; 1
     6c6:	b8 f7       	brcc	.-18     	; 0x6b6 <_ZN4RF2414write_registerEhPKhh+0x38>
     6c8:	61 e0       	ldi	r22, 0x01	; 1
     6ca:	c8 01       	movw	r24, r16
     6cc:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <_ZN4RF243csnEb>
     6d0:	8c 2f       	mov	r24, r28
     6d2:	df 91       	pop	r29
     6d4:	cf 91       	pop	r28
     6d6:	1f 91       	pop	r17
     6d8:	0f 91       	pop	r16
     6da:	ff 90       	pop	r15
     6dc:	ef 90       	pop	r14
     6de:	08 95       	ret

000006e0 <_ZN4RF2414write_registerEhh>:
     6e0:	0f 93       	push	r16
     6e2:	1f 93       	push	r17
     6e4:	cf 93       	push	r28
     6e6:	df 93       	push	r29
     6e8:	8c 01       	movw	r16, r24
     6ea:	c6 2f       	mov	r28, r22
     6ec:	d4 2f       	mov	r29, r20
     6ee:	1f 92       	push	r1
     6f0:	4f 93       	push	r20
     6f2:	1f 92       	push	r1
     6f4:	6f 93       	push	r22
     6f6:	81 e2       	ldi	r24, 0x21	; 33
     6f8:	91 e0       	ldi	r25, 0x01	; 1
     6fa:	9f 93       	push	r25
     6fc:	8f 93       	push	r24
     6fe:	0e 94 64 08 	call	0x10c8	; 0x10c8 <printf>
     702:	60 e0       	ldi	r22, 0x00	; 0
     704:	c8 01       	movw	r24, r16
     706:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <_ZN4RF243csnEb>
     70a:	cf 71       	andi	r28, 0x1F	; 31
     70c:	c0 62       	ori	r28, 0x20	; 32
     70e:	ce bd       	out	0x2e, r28	; 46
     710:	00 00       	nop
     712:	0f 90       	pop	r0
     714:	0f 90       	pop	r0
     716:	0f 90       	pop	r0
     718:	0f 90       	pop	r0
     71a:	0f 90       	pop	r0
     71c:	0f 90       	pop	r0
     71e:	0d b4       	in	r0, 0x2d	; 45
     720:	07 fe       	sbrs	r0, 7
     722:	fd cf       	rjmp	.-6      	; 0x71e <_ZN4RF2414write_registerEhh+0x3e>
     724:	ce b5       	in	r28, 0x2e	; 46
     726:	de bd       	out	0x2e, r29	; 46
     728:	00 00       	nop
     72a:	0d b4       	in	r0, 0x2d	; 45
     72c:	07 fe       	sbrs	r0, 7
     72e:	fd cf       	rjmp	.-6      	; 0x72a <_ZN4RF2414write_registerEhh+0x4a>
     730:	8e b5       	in	r24, 0x2e	; 46
     732:	61 e0       	ldi	r22, 0x01	; 1
     734:	c8 01       	movw	r24, r16
     736:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <_ZN4RF243csnEb>
     73a:	8c 2f       	mov	r24, r28
     73c:	df 91       	pop	r29
     73e:	cf 91       	pop	r28
     740:	1f 91       	pop	r17
     742:	0f 91       	pop	r16
     744:	08 95       	ret

00000746 <_ZN4RF2412read_payloadEPvh>:
     746:	df 92       	push	r13
     748:	ef 92       	push	r14
     74a:	ff 92       	push	r15
     74c:	0f 93       	push	r16
     74e:	1f 93       	push	r17
     750:	cf 93       	push	r28
     752:	df 93       	push	r29
     754:	ec 01       	movw	r28, r24
     756:	d6 2e       	mov	r13, r22
     758:	e7 2e       	mov	r14, r23
     75a:	8f 81       	ldd	r24, Y+7	; 0x07
     75c:	08 2f       	mov	r16, r24
     75e:	48 17       	cp	r20, r24
     760:	08 f4       	brcc	.+2      	; 0x764 <_ZN4RF2412read_payloadEPvh+0x1e>
     762:	04 2f       	mov	r16, r20
     764:	98 85       	ldd	r25, Y+8	; 0x08
     766:	91 11       	cpse	r25, r1
     768:	03 c0       	rjmp	.+6      	; 0x770 <_ZN4RF2412read_payloadEPvh+0x2a>
     76a:	18 2f       	mov	r17, r24
     76c:	10 1b       	sub	r17, r16
     76e:	01 c0       	rjmp	.+2      	; 0x772 <_ZN4RF2412read_payloadEPvh+0x2c>
     770:	10 e0       	ldi	r17, 0x00	; 0
     772:	60 e0       	ldi	r22, 0x00	; 0
     774:	ce 01       	movw	r24, r28
     776:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <_ZN4RF243csnEb>
     77a:	81 e6       	ldi	r24, 0x61	; 97
     77c:	8e bd       	out	0x2e, r24	; 46
     77e:	00 00       	nop
     780:	0d b4       	in	r0, 0x2d	; 45
     782:	07 fe       	sbrs	r0, 7
     784:	fd cf       	rjmp	.-6      	; 0x780 <_ZN4RF2412read_payloadEPvh+0x3a>
     786:	fe b4       	in	r15, 0x2e	; 46
     788:	8f ef       	ldi	r24, 0xFF	; 255
     78a:	80 0f       	add	r24, r16
     78c:	01 11       	cpse	r16, r1
     78e:	05 c0       	rjmp	.+10     	; 0x79a <_ZN4RF2412read_payloadEPvh+0x54>
     790:	8f ef       	ldi	r24, 0xFF	; 255
     792:	81 0f       	add	r24, r17
     794:	11 11       	cpse	r17, r1
     796:	0e c0       	rjmp	.+28     	; 0x7b4 <_ZN4RF2412read_payloadEPvh+0x6e>
     798:	16 c0       	rjmp	.+44     	; 0x7c6 <_ZN4RF2412read_payloadEPvh+0x80>
     79a:	ed 2d       	mov	r30, r13
     79c:	fe 2d       	mov	r31, r14
     79e:	2f ef       	ldi	r18, 0xFF	; 255
     7a0:	2e bd       	out	0x2e, r18	; 46
     7a2:	00 00       	nop
     7a4:	0d b4       	in	r0, 0x2d	; 45
     7a6:	07 fe       	sbrs	r0, 7
     7a8:	fd cf       	rjmp	.-6      	; 0x7a4 <_ZN4RF2412read_payloadEPvh+0x5e>
     7aa:	9e b5       	in	r25, 0x2e	; 46
     7ac:	91 93       	st	Z+, r25
     7ae:	81 50       	subi	r24, 0x01	; 1
     7b0:	b8 f7       	brcc	.-18     	; 0x7a0 <_ZN4RF2412read_payloadEPvh+0x5a>
     7b2:	ee cf       	rjmp	.-36     	; 0x790 <_ZN4RF2412read_payloadEPvh+0x4a>
     7b4:	9f ef       	ldi	r25, 0xFF	; 255
     7b6:	9e bd       	out	0x2e, r25	; 46
     7b8:	00 00       	nop
     7ba:	0d b4       	in	r0, 0x2d	; 45
     7bc:	07 fe       	sbrs	r0, 7
     7be:	fd cf       	rjmp	.-6      	; 0x7ba <_ZN4RF2412read_payloadEPvh+0x74>
     7c0:	2e b5       	in	r18, 0x2e	; 46
     7c2:	81 50       	subi	r24, 0x01	; 1
     7c4:	c0 f7       	brcc	.-16     	; 0x7b6 <_ZN4RF2412read_payloadEPvh+0x70>
     7c6:	61 e0       	ldi	r22, 0x01	; 1
     7c8:	ce 01       	movw	r24, r28
     7ca:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <_ZN4RF243csnEb>
     7ce:	8f 2d       	mov	r24, r15
     7d0:	df 91       	pop	r29
     7d2:	cf 91       	pop	r28
     7d4:	1f 91       	pop	r17
     7d6:	0f 91       	pop	r16
     7d8:	ff 90       	pop	r15
     7da:	ef 90       	pop	r14
     7dc:	df 90       	pop	r13
     7de:	08 95       	ret

000007e0 <_ZN4RF248spiTransEh>:
     7e0:	1f 93       	push	r17
     7e2:	cf 93       	push	r28
     7e4:	df 93       	push	r29
     7e6:	ec 01       	movw	r28, r24
     7e8:	16 2f       	mov	r17, r22
     7ea:	60 e0       	ldi	r22, 0x00	; 0
     7ec:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <_ZN4RF243csnEb>
     7f0:	1e bd       	out	0x2e, r17	; 46
     7f2:	00 00       	nop
     7f4:	0d b4       	in	r0, 0x2d	; 45
     7f6:	07 fe       	sbrs	r0, 7
     7f8:	fd cf       	rjmp	.-6      	; 0x7f4 <_ZN4RF248spiTransEh+0x14>
     7fa:	1e b5       	in	r17, 0x2e	; 46
     7fc:	61 e0       	ldi	r22, 0x01	; 1
     7fe:	ce 01       	movw	r24, r28
     800:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <_ZN4RF243csnEb>
     804:	81 2f       	mov	r24, r17
     806:	df 91       	pop	r29
     808:	cf 91       	pop	r28
     80a:	1f 91       	pop	r17
     80c:	08 95       	ret

0000080e <_ZN4RF248flush_rxEv>:
     80e:	62 ee       	ldi	r22, 0xE2	; 226
     810:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <_ZN4RF248spiTransEh>
     814:	08 95       	ret

00000816 <_ZN4RF248flush_txEv>:
     816:	61 ee       	ldi	r22, 0xE1	; 225
     818:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <_ZN4RF248spiTransEh>
     81c:	08 95       	ret

0000081e <_ZN4RF2410get_statusEv>:
     81e:	6f ef       	ldi	r22, 0xFF	; 255
     820:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <_ZN4RF248spiTransEh>
     824:	08 95       	ret

00000826 <_ZN4RF24C1Ejj>:
     826:	fc 01       	movw	r30, r24
     828:	71 83       	std	Z+1, r23	; 0x01
     82a:	60 83       	st	Z, r22
     82c:	53 83       	std	Z+3, r21	; 0x03
     82e:	42 83       	std	Z+2, r20	; 0x02
     830:	16 82       	std	Z+6, r1	; 0x06
     832:	80 e2       	ldi	r24, 0x20	; 32
     834:	87 83       	std	Z+7, r24	; 0x07
     836:	10 86       	std	Z+8, r1	; 0x08
     838:	85 e0       	ldi	r24, 0x05	; 5
     83a:	86 87       	std	Z+14, r24	; 0x0e
     83c:	85 e0       	ldi	r24, 0x05	; 5
     83e:	90 e0       	ldi	r25, 0x00	; 0
     840:	a0 e0       	ldi	r26, 0x00	; 0
     842:	b0 e0       	ldi	r27, 0x00	; 0
     844:	84 8b       	std	Z+20, r24	; 0x14
     846:	95 8b       	std	Z+21, r25	; 0x15
     848:	a6 8b       	std	Z+22, r26	; 0x16
     84a:	b7 8b       	std	Z+23, r27	; 0x17
     84c:	11 86       	std	Z+9, r1	; 0x09
     84e:	08 95       	ret

00000850 <_ZN4RF2410setChannelEh>:
     850:	6d 37       	cpi	r22, 0x7D	; 125
     852:	10 f4       	brcc	.+4      	; 0x858 <_ZN4RF2410setChannelEh+0x8>
     854:	46 2f       	mov	r20, r22
     856:	01 c0       	rjmp	.+2      	; 0x85a <_ZN4RF2410setChannelEh+0xa>
     858:	4d e7       	ldi	r20, 0x7D	; 125
     85a:	65 e0       	ldi	r22, 0x05	; 5
     85c:	0e 94 70 03 	call	0x6e0	; 0x6e0 <_ZN4RF2414write_registerEhh>
     860:	08 95       	ret

00000862 <_ZN4RF247powerUpEv>:
     862:	cf 93       	push	r28
     864:	df 93       	push	r29
     866:	ec 01       	movw	r28, r24
     868:	60 e0       	ldi	r22, 0x00	; 0
     86a:	0e 94 20 03 	call	0x640	; 0x640 <_ZN4RF2413read_registerEh>
     86e:	81 fd       	sbrc	r24, 1
     870:	0a c0       	rjmp	.+20     	; 0x886 <_ZN4RF247powerUpEv+0x24>
     872:	48 2f       	mov	r20, r24
     874:	42 60       	ori	r20, 0x02	; 2
     876:	60 e0       	ldi	r22, 0x00	; 0
     878:	ce 01       	movw	r24, r28
     87a:	0e 94 70 03 	call	0x6e0	; 0x6e0 <_ZN4RF2414write_registerEhh>
     87e:	80 e1       	ldi	r24, 0x10	; 16
     880:	97 e2       	ldi	r25, 0x27	; 39
     882:	01 97       	sbiw	r24, 0x01	; 1
     884:	f1 f7       	brne	.-4      	; 0x882 <_ZN4RF247powerUpEv+0x20>
     886:	df 91       	pop	r29
     888:	cf 91       	pop	r28
     88a:	08 95       	ret

0000088c <_ZN4RF249availableEPh>:
     88c:	0f 93       	push	r16
     88e:	1f 93       	push	r17
     890:	cf 93       	push	r28
     892:	df 93       	push	r29
     894:	ec 01       	movw	r28, r24
     896:	8b 01       	movw	r16, r22
     898:	67 e1       	ldi	r22, 0x17	; 23
     89a:	0e 94 20 03 	call	0x640	; 0x640 <_ZN4RF2413read_registerEh>
     89e:	80 fd       	sbrc	r24, 0
     8a0:	0e c0       	rjmp	.+28     	; 0x8be <_ZN4RF249availableEPh+0x32>
     8a2:	01 15       	cp	r16, r1
     8a4:	11 05       	cpc	r17, r1
     8a6:	69 f0       	breq	.+26     	; 0x8c2 <_ZN4RF249availableEPh+0x36>
     8a8:	ce 01       	movw	r24, r28
     8aa:	0e 94 0f 04 	call	0x81e	; 0x81e <_ZN4RF2410get_statusEv>
     8ae:	90 e0       	ldi	r25, 0x00	; 0
     8b0:	95 95       	asr	r25
     8b2:	87 95       	ror	r24
     8b4:	87 70       	andi	r24, 0x07	; 7
     8b6:	f8 01       	movw	r30, r16
     8b8:	80 83       	st	Z, r24
     8ba:	81 e0       	ldi	r24, 0x01	; 1
     8bc:	03 c0       	rjmp	.+6      	; 0x8c4 <_ZN4RF249availableEPh+0x38>
     8be:	80 e0       	ldi	r24, 0x00	; 0
     8c0:	01 c0       	rjmp	.+2      	; 0x8c4 <_ZN4RF249availableEPh+0x38>
     8c2:	81 e0       	ldi	r24, 0x01	; 1
     8c4:	df 91       	pop	r29
     8c6:	cf 91       	pop	r28
     8c8:	1f 91       	pop	r17
     8ca:	0f 91       	pop	r16
     8cc:	08 95       	ret

000008ce <_ZN4RF249availableEv>:
     8ce:	60 e0       	ldi	r22, 0x00	; 0
     8d0:	70 e0       	ldi	r23, 0x00	; 0
     8d2:	0e 94 46 04 	call	0x88c	; 0x88c <_ZN4RF249availableEPh>
     8d6:	08 95       	ret

000008d8 <_ZN4RF244readEPvh>:
     8d8:	cf 93       	push	r28
     8da:	df 93       	push	r29
     8dc:	ec 01       	movw	r28, r24
     8de:	0e 94 a3 03 	call	0x746	; 0x746 <_ZN4RF2412read_payloadEPvh>
     8e2:	40 e7       	ldi	r20, 0x70	; 112
     8e4:	67 e0       	ldi	r22, 0x07	; 7
     8e6:	ce 01       	movw	r24, r28
     8e8:	0e 94 70 03 	call	0x6e0	; 0x6e0 <_ZN4RF2414write_registerEhh>
     8ec:	df 91       	pop	r29
     8ee:	cf 91       	pop	r28
     8f0:	08 95       	ret

000008f2 <_ZN4RF2415openReadingPipeEhPKh>:
     8f2:	ef 92       	push	r14
     8f4:	ff 92       	push	r15
     8f6:	0f 93       	push	r16
     8f8:	1f 93       	push	r17
     8fa:	cf 93       	push	r28
     8fc:	df 93       	push	r29
     8fe:	8c 01       	movw	r16, r24
     900:	c6 2f       	mov	r28, r22
     902:	7a 01       	movw	r14, r20
     904:	61 11       	cpse	r22, r1
     906:	08 c0       	rjmp	.+16     	; 0x918 <__stack+0x19>
     908:	fc 01       	movw	r30, r24
     90a:	46 85       	ldd	r20, Z+14	; 0x0e
     90c:	50 e0       	ldi	r21, 0x00	; 0
     90e:	b7 01       	movw	r22, r14
     910:	09 96       	adiw	r24, 0x09	; 9
     912:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <memcpy>
     916:	05 c0       	rjmp	.+10     	; 0x922 <__stack+0x23>
     918:	67 30       	cpi	r22, 0x07	; 7
     91a:	08 f0       	brcs	.+2      	; 0x91e <__stack+0x1f>
     91c:	34 c0       	rjmp	.+104    	; 0x986 <__stack+0x87>
     91e:	62 30       	cpi	r22, 0x02	; 2
     920:	60 f4       	brcc	.+24     	; 0x93a <__stack+0x3b>
     922:	ec 2f       	mov	r30, r28
     924:	f0 e0       	ldi	r31, 0x00	; 0
     926:	e0 5b       	subi	r30, 0xB0	; 176
     928:	fe 4f       	sbci	r31, 0xFE	; 254
     92a:	64 91       	lpm	r22, Z
     92c:	f8 01       	movw	r30, r16
     92e:	26 85       	ldd	r18, Z+14	; 0x0e
     930:	a7 01       	movw	r20, r14
     932:	c8 01       	movw	r24, r16
     934:	0e 94 3f 03 	call	0x67e	; 0x67e <_ZN4RF2414write_registerEhPKhh>
     938:	08 c0       	rjmp	.+16     	; 0x94a <__stack+0x4b>
     93a:	e6 2f       	mov	r30, r22
     93c:	f0 e0       	ldi	r31, 0x00	; 0
     93e:	e0 5b       	subi	r30, 0xB0	; 176
     940:	fe 4f       	sbci	r31, 0xFE	; 254
     942:	64 91       	lpm	r22, Z
     944:	21 e0       	ldi	r18, 0x01	; 1
     946:	0e 94 3f 03 	call	0x67e	; 0x67e <_ZN4RF2414write_registerEhPKhh>
     94a:	d0 e0       	ldi	r29, 0x00	; 0
     94c:	fe 01       	movw	r30, r28
     94e:	e6 5b       	subi	r30, 0xB6	; 182
     950:	fe 4f       	sbci	r31, 0xFE	; 254
     952:	64 91       	lpm	r22, Z
     954:	f8 01       	movw	r30, r16
     956:	47 81       	ldd	r20, Z+7	; 0x07
     958:	c8 01       	movw	r24, r16
     95a:	0e 94 70 03 	call	0x6e0	; 0x6e0 <_ZN4RF2414write_registerEhh>
     95e:	62 e0       	ldi	r22, 0x02	; 2
     960:	c8 01       	movw	r24, r16
     962:	0e 94 20 03 	call	0x640	; 0x640 <_ZN4RF2413read_registerEh>
     966:	fe 01       	movw	r30, r28
     968:	ea 5a       	subi	r30, 0xAA	; 170
     96a:	fe 4f       	sbci	r31, 0xFE	; 254
     96c:	e4 91       	lpm	r30, Z
     96e:	41 e0       	ldi	r20, 0x01	; 1
     970:	50 e0       	ldi	r21, 0x00	; 0
     972:	02 c0       	rjmp	.+4      	; 0x978 <__stack+0x79>
     974:	44 0f       	add	r20, r20
     976:	55 1f       	adc	r21, r21
     978:	ea 95       	dec	r30
     97a:	e2 f7       	brpl	.-8      	; 0x974 <__stack+0x75>
     97c:	48 2b       	or	r20, r24
     97e:	62 e0       	ldi	r22, 0x02	; 2
     980:	c8 01       	movw	r24, r16
     982:	0e 94 70 03 	call	0x6e0	; 0x6e0 <_ZN4RF2414write_registerEhh>
     986:	df 91       	pop	r29
     988:	cf 91       	pop	r28
     98a:	1f 91       	pop	r17
     98c:	0f 91       	pop	r16
     98e:	ff 90       	pop	r15
     990:	ef 90       	pop	r14
     992:	08 95       	ret

00000994 <_ZN4RF2416closeReadingPipeEh>:
     994:	0f 93       	push	r16
     996:	1f 93       	push	r17
     998:	cf 93       	push	r28
     99a:	8c 01       	movw	r16, r24
     99c:	c6 2f       	mov	r28, r22
     99e:	62 e0       	ldi	r22, 0x02	; 2
     9a0:	0e 94 20 03 	call	0x640	; 0x640 <_ZN4RF2413read_registerEh>
     9a4:	ec 2f       	mov	r30, r28
     9a6:	f0 e0       	ldi	r31, 0x00	; 0
     9a8:	ea 5a       	subi	r30, 0xAA	; 170
     9aa:	fe 4f       	sbci	r31, 0xFE	; 254
     9ac:	e4 91       	lpm	r30, Z
     9ae:	21 e0       	ldi	r18, 0x01	; 1
     9b0:	30 e0       	ldi	r19, 0x00	; 0
     9b2:	02 c0       	rjmp	.+4      	; 0x9b8 <_ZN4RF2416closeReadingPipeEh+0x24>
     9b4:	22 0f       	add	r18, r18
     9b6:	33 1f       	adc	r19, r19
     9b8:	ea 95       	dec	r30
     9ba:	e2 f7       	brpl	.-8      	; 0x9b4 <_ZN4RF2416closeReadingPipeEh+0x20>
     9bc:	20 95       	com	r18
     9be:	42 2f       	mov	r20, r18
     9c0:	48 23       	and	r20, r24
     9c2:	62 e0       	ldi	r22, 0x02	; 2
     9c4:	c8 01       	movw	r24, r16
     9c6:	0e 94 70 03 	call	0x6e0	; 0x6e0 <_ZN4RF2414write_registerEhh>
     9ca:	cf 91       	pop	r28
     9cc:	1f 91       	pop	r17
     9ce:	0f 91       	pop	r16
     9d0:	08 95       	ret

000009d2 <_ZN4RF2414startListeningEv>:
     9d2:	cf 93       	push	r28
     9d4:	df 93       	push	r29
     9d6:	ec 01       	movw	r28, r24
     9d8:	0e 94 31 04 	call	0x862	; 0x862 <_ZN4RF247powerUpEv>
     9dc:	60 e0       	ldi	r22, 0x00	; 0
     9de:	ce 01       	movw	r24, r28
     9e0:	0e 94 20 03 	call	0x640	; 0x640 <_ZN4RF2413read_registerEh>
     9e4:	48 2f       	mov	r20, r24
     9e6:	41 60       	ori	r20, 0x01	; 1
     9e8:	60 e0       	ldi	r22, 0x00	; 0
     9ea:	ce 01       	movw	r24, r28
     9ec:	0e 94 70 03 	call	0x6e0	; 0x6e0 <_ZN4RF2414write_registerEhh>
     9f0:	40 e7       	ldi	r20, 0x70	; 112
     9f2:	67 e0       	ldi	r22, 0x07	; 7
     9f4:	ce 01       	movw	r24, r28
     9f6:	0e 94 70 03 	call	0x6e0	; 0x6e0 <_ZN4RF2414write_registerEhh>
     9fa:	61 e0       	ldi	r22, 0x01	; 1
     9fc:	ce 01       	movw	r24, r28
     9fe:	0e 94 15 03 	call	0x62a	; 0x62a <_ZN4RF242ceEb>
     a02:	89 85       	ldd	r24, Y+9	; 0x09
     a04:	88 23       	and	r24, r24
     a06:	49 f0       	breq	.+18     	; 0xa1a <_ZN4RF2414startListeningEv+0x48>
     a08:	2e 85       	ldd	r18, Y+14	; 0x0e
     a0a:	ae 01       	movw	r20, r28
     a0c:	47 5f       	subi	r20, 0xF7	; 247
     a0e:	5f 4f       	sbci	r21, 0xFF	; 255
     a10:	6a e0       	ldi	r22, 0x0A	; 10
     a12:	ce 01       	movw	r24, r28
     a14:	0e 94 3f 03 	call	0x67e	; 0x67e <_ZN4RF2414write_registerEhPKhh>
     a18:	04 c0       	rjmp	.+8      	; 0xa22 <_ZN4RF2414startListeningEv+0x50>
     a1a:	60 e0       	ldi	r22, 0x00	; 0
     a1c:	ce 01       	movw	r24, r28
     a1e:	0e 94 ca 04 	call	0x994	; 0x994 <_ZN4RF2416closeReadingPipeEh>
     a22:	6d e1       	ldi	r22, 0x1D	; 29
     a24:	ce 01       	movw	r24, r28
     a26:	0e 94 20 03 	call	0x640	; 0x640 <_ZN4RF2413read_registerEh>
     a2a:	81 ff       	sbrs	r24, 1
     a2c:	03 c0       	rjmp	.+6      	; 0xa34 <_ZN4RF2414startListeningEv+0x62>
     a2e:	ce 01       	movw	r24, r28
     a30:	0e 94 0b 04 	call	0x816	; 0x816 <_ZN4RF248flush_txEv>
     a34:	df 91       	pop	r29
     a36:	cf 91       	pop	r28
     a38:	08 95       	ret

00000a3a <_ZN4RF2415toggle_featuresEv>:
     a3a:	cf 93       	push	r28
     a3c:	df 93       	push	r29
     a3e:	ec 01       	movw	r28, r24
     a40:	60 e0       	ldi	r22, 0x00	; 0
     a42:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <_ZN4RF243csnEb>
     a46:	80 e5       	ldi	r24, 0x50	; 80
     a48:	8e bd       	out	0x2e, r24	; 46
     a4a:	00 00       	nop
     a4c:	0d b4       	in	r0, 0x2d	; 45
     a4e:	07 fe       	sbrs	r0, 7
     a50:	fd cf       	rjmp	.-6      	; 0xa4c <_ZN4RF2415toggle_featuresEv+0x12>
     a52:	8e b5       	in	r24, 0x2e	; 46
     a54:	83 e7       	ldi	r24, 0x73	; 115
     a56:	8e bd       	out	0x2e, r24	; 46
     a58:	00 00       	nop
     a5a:	0d b4       	in	r0, 0x2d	; 45
     a5c:	07 fe       	sbrs	r0, 7
     a5e:	fd cf       	rjmp	.-6      	; 0xa5a <_ZN4RF2415toggle_featuresEv+0x20>
     a60:	8e b5       	in	r24, 0x2e	; 46
     a62:	61 e0       	ldi	r22, 0x01	; 1
     a64:	ce 01       	movw	r24, r28
     a66:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <_ZN4RF243csnEb>
     a6a:	df 91       	pop	r29
     a6c:	cf 91       	pop	r28
     a6e:	08 95       	ret

00000a70 <_ZN4RF2410getPALevelEv>:
/****************************************************************************/

uint8_t RF24::getPALevel(void)
{

  return (read_register(RF_SETUP) & (_BV(RF_PWR_LOW) | _BV(RF_PWR_HIGH))) >> 1 ;
     a70:	66 e0       	ldi	r22, 0x06	; 6
     a72:	0e 94 20 03 	call	0x640	; 0x640 <_ZN4RF2413read_registerEh>
     a76:	86 70       	andi	r24, 0x06	; 6
}
     a78:	86 95       	lsr	r24
     a7a:	08 95       	ret

00000a7c <_ZN4RF2411setDataRateE15rf24_datarate_e>:

/****************************************************************************/

bool RF24::setDataRate(rf24_datarate_e speed)
{
     a7c:	0f 93       	push	r16
     a7e:	1f 93       	push	r17
     a80:	cf 93       	push	r28
     a82:	df 93       	push	r29
     a84:	ec 01       	movw	r28, r24
     a86:	06 2f       	mov	r16, r22
  bool result = false;
  uint8_t setup = read_register(RF_SETUP) ;
     a88:	66 e0       	ldi	r22, 0x06	; 6
     a8a:	0e 94 20 03 	call	0x640	; 0x640 <_ZN4RF2413read_registerEh>

  // HIGH and LOW '00' is 1Mbs - our default
  setup &= ~(_BV(RF_DR_LOW) | _BV(RF_DR_HIGH)) ;
     a8e:	18 2f       	mov	r17, r24
     a90:	17 7d       	andi	r17, 0xD7	; 215
  #if defined(__arm__) || defined (RF24_LINUX) || defined (__ARDUINO_X86__)
    txDelay=250;
 */ //#else //16Mhz Arduino
    txDelay=85;
  //#endif
  if( speed == RF24_250KBPS )
     a92:	02 30       	cpi	r16, 0x02	; 2
     a94:	51 f4       	brne	.+20     	; 0xaaa <_ZN4RF2411setDataRateE15rf24_datarate_e+0x2e>
  {
    // Must set the RF_DR_LOW to 1; RF_DR_HIGH (used to be RF_DR) is already 0
    // Making it '10'.
    setup |= _BV( RF_DR_LOW ) ;
     a96:	10 62       	ori	r17, 0x20	; 32
 /* #if defined(__arm__) || defined (RF24_LINUX) || defined (__ARDUINO_X86__)
    txDelay=450;
  #else //16Mhz Arduino*/
	txDelay=155;
     a98:	8b e9       	ldi	r24, 0x9B	; 155
     a9a:	90 e0       	ldi	r25, 0x00	; 0
     a9c:	a0 e0       	ldi	r26, 0x00	; 0
     a9e:	b0 e0       	ldi	r27, 0x00	; 0
     aa0:	88 8b       	std	Y+16, r24	; 0x10
     aa2:	99 8b       	std	Y+17, r25	; 0x11
     aa4:	aa 8b       	std	Y+18, r26	; 0x12
     aa6:	bb 8b       	std	Y+19, r27	; 0x13
     aa8:	14 c0       	rjmp	.+40     	; 0xad2 <_ZN4RF2411setDataRateE15rf24_datarate_e+0x56>
  }
  else
  {
    // Set 2Mbs, RF_DR (RF_DR_HIGH) is set 1
    // Making it '01'
    if ( speed == RF24_2MBPS )
     aaa:	01 30       	cpi	r16, 0x01	; 1
     aac:	49 f0       	breq	.+18     	; 0xac0 <_ZN4RF2411setDataRateE15rf24_datarate_e+0x44>
  setup &= ~(_BV(RF_DR_LOW) | _BV(RF_DR_HIGH)) ;
/*  
  #if defined(__arm__) || defined (RF24_LINUX) || defined (__ARDUINO_X86__)
    txDelay=250;
 */ //#else //16Mhz Arduino
    txDelay=85;
     aae:	85 e5       	ldi	r24, 0x55	; 85
     ab0:	90 e0       	ldi	r25, 0x00	; 0
     ab2:	a0 e0       	ldi	r26, 0x00	; 0
     ab4:	b0 e0       	ldi	r27, 0x00	; 0
     ab6:	88 8b       	std	Y+16, r24	; 0x10
     ab8:	99 8b       	std	Y+17, r25	; 0x11
     aba:	aa 8b       	std	Y+18, r26	; 0x12
     abc:	bb 8b       	std	Y+19, r27	; 0x13
     abe:	09 c0       	rjmp	.+18     	; 0xad2 <_ZN4RF2411setDataRateE15rf24_datarate_e+0x56>
  {
    // Set 2Mbs, RF_DR (RF_DR_HIGH) is set 1
    // Making it '01'
    if ( speed == RF24_2MBPS )
    {
      setup |= _BV(RF_DR_HIGH);
     ac0:	18 60       	ori	r17, 0x08	; 8
     /* #if defined(__arm__) || defined (RF24_LINUX) || defined (__ARDUINO_X86__)
      txDelay=190;
      #else //16Mhz Arduino	*/  
	 txDelay=65;
     ac2:	81 e4       	ldi	r24, 0x41	; 65
     ac4:	90 e0       	ldi	r25, 0x00	; 0
     ac6:	a0 e0       	ldi	r26, 0x00	; 0
     ac8:	b0 e0       	ldi	r27, 0x00	; 0
     aca:	88 8b       	std	Y+16, r24	; 0x10
     acc:	99 8b       	std	Y+17, r25	; 0x11
     ace:	aa 8b       	std	Y+18, r26	; 0x12
     ad0:	bb 8b       	std	Y+19, r27	; 0x13
	  //#endif
    }
  }
  write_register(RF_SETUP,setup);
     ad2:	41 2f       	mov	r20, r17
     ad4:	66 e0       	ldi	r22, 0x06	; 6
     ad6:	ce 01       	movw	r24, r28
     ad8:	0e 94 70 03 	call	0x6e0	; 0x6e0 <_ZN4RF2414write_registerEhh>

  // Verify our result
  if ( read_register(RF_SETUP) == setup )
     adc:	66 e0       	ldi	r22, 0x06	; 6
     ade:	ce 01       	movw	r24, r28
     ae0:	0e 94 20 03 	call	0x640	; 0x640 <_ZN4RF2413read_registerEh>
  {
    result = true;
  }
  return result;
     ae4:	91 e0       	ldi	r25, 0x01	; 1
     ae6:	18 13       	cpse	r17, r24
     ae8:	90 e0       	ldi	r25, 0x00	; 0
}
     aea:	89 2f       	mov	r24, r25
     aec:	df 91       	pop	r29
     aee:	cf 91       	pop	r28
     af0:	1f 91       	pop	r17
     af2:	0f 91       	pop	r16
     af4:	08 95       	ret

00000af6 <_ZN4RF245beginEv>:
}

/****************************************************************************/

bool RF24::begin(void)
{
     af6:	1f 93       	push	r17
     af8:	cf 93       	push	r28
     afa:	df 93       	push	r29
     afc:	ec 01       	movw	r28, r24
  uint8_t setup=0;

    if (ce_pin != csn_pin) Set_pin(ce_pin,OUT);  
     afe:	88 81       	ld	r24, Y
     b00:	99 81       	ldd	r25, Y+1	; 0x01
     b02:	2a 81       	ldd	r18, Y+2	; 0x02
     b04:	3b 81       	ldd	r19, Y+3	; 0x03
     b06:	82 17       	cp	r24, r18
     b08:	93 07       	cpc	r25, r19
     b0a:	79 f0       	breq	.+30     	; 0xb2a <_ZN4RF245beginEv+0x34>
     b0c:	61 e0       	ldi	r22, 0x01	; 1
     b0e:	70 e0       	ldi	r23, 0x00	; 0
     b10:	0e 94 78 01 	call	0x2f0	; 0x2f0 <Set_pin>
    #if ! defined(LITTLEWIRE)
      if (ce_pin != csn_pin)
     b14:	8a 81       	ldd	r24, Y+2	; 0x02
     b16:	9b 81       	ldd	r25, Y+3	; 0x03
     b18:	28 81       	ld	r18, Y
     b1a:	39 81       	ldd	r19, Y+1	; 0x01
     b1c:	28 17       	cp	r18, r24
     b1e:	39 07       	cpc	r19, r25
     b20:	21 f0       	breq	.+8      	; 0xb2a <_ZN4RF245beginEv+0x34>
    #endif
        Set_pin(csn_pin,OUT);
     b22:	61 e0       	ldi	r22, 0x01	; 1
     b24:	70 e0       	ldi	r23, 0x00	; 0
     b26:	0e 94 78 01 	call	0x2f0	; 0x2f0 <Set_pin>
    _SPI.begin();
     b2a:	0e 94 f5 05 	call	0xbea	; 0xbea <_ZN8SPIClass5beginEv>
    ce(low);
     b2e:	60 e0       	ldi	r22, 0x00	; 0
     b30:	ce 01       	movw	r24, r28
     b32:	0e 94 15 03 	call	0x62a	; 0x62a <_ZN4RF242ceEb>
  	csn(high);
     b36:	61 e0       	ldi	r22, 0x01	; 1
     b38:	ce 01       	movw	r24, r28
     b3a:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <_ZN4RF243csnEb>
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
     b3e:	80 e1       	ldi	r24, 0x10	; 16
     b40:	97 e2       	ldi	r25, 0x27	; 39
     b42:	01 97       	sbiw	r24, 0x01	; 1
     b44:	f1 f7       	brne	.-4      	; 0xb42 <_ZN4RF245beginEv+0x4c>
  // Technically we require 4.5ms + 14us as a worst case. We'll just call it 5ms for good measure.
  // WARNING: _delay_ms is based on P-variant whereby non-P *may* require different timing.
  _delay_ms( 5 ) ;

  // Reset NRF_CONFIG and enable 16-bit CRC.
  write_register( NRF_CONFIG, 0x0C ) ;
     b46:	4c e0       	ldi	r20, 0x0C	; 12
     b48:	60 e0       	ldi	r22, 0x00	; 0
     b4a:	ce 01       	movw	r24, r28
     b4c:	0e 94 70 03 	call	0x6e0	; 0x6e0 <_ZN4RF2414write_registerEhh>
}

/****************************************************************************/
void RF24::setRetries(uint8_t delay, uint8_t count)
{
 write_register(SETUP_RETR,(delay&0xf)<<ARD | (count&0xf)<<ARC);
     b50:	4f e5       	ldi	r20, 0x5F	; 95
     b52:	64 e0       	ldi	r22, 0x04	; 4
     b54:	ce 01       	movw	r24, r28
     b56:	0e 94 70 03 	call	0x6e0	; 0x6e0 <_ZN4RF2414write_registerEhh>
  // Reset value is MAX
  //setPALevel( RF24_PA_MAX ) ;

  // check for connected module and if this is a p nRF24l01 variant
  //
  if( setDataRate( RF24_250KBPS ) )
     b5a:	62 e0       	ldi	r22, 0x02	; 2
     b5c:	ce 01       	movw	r24, r28
     b5e:	0e 94 3e 05 	call	0xa7c	; 0xa7c <_ZN4RF2411setDataRateE15rf24_datarate_e>
     b62:	88 23       	and	r24, r24
     b64:	11 f0       	breq	.+4      	; 0xb6a <_ZN4RF245beginEv+0x74>
  {
    p_variant = true ;
     b66:	81 e0       	ldi	r24, 0x01	; 1
     b68:	8e 83       	std	Y+6, r24	; 0x06
  }
  setup = read_register(RF_SETUP);
     b6a:	66 e0       	ldi	r22, 0x06	; 6
     b6c:	ce 01       	movw	r24, r28
     b6e:	0e 94 20 03 	call	0x640	; 0x640 <_ZN4RF2413read_registerEh>
     b72:	18 2f       	mov	r17, r24
  if( setup == 0b00001110 )     // register default for nRF24L01P
     b74:	8e 30       	cpi	r24, 0x0E	; 14
     b76:	11 f4       	brne	.+4      	; 0xb7c <_ZN4RF245beginEv+0x86>
  {
    p_variant = true ;
     b78:	81 e0       	ldi	r24, 0x01	; 1
     b7a:	8e 83       	std	Y+6, r24	; 0x06
  }
  
  // Then set the data rate to the slowest (and most reliable) speed supported by all
  // hardware.
  setDataRate( RF24_1MBPS ) ;
     b7c:	60 e0       	ldi	r22, 0x00	; 0
     b7e:	ce 01       	movw	r24, r28
     b80:	0e 94 3e 05 	call	0xa7c	; 0xa7c <_ZN4RF2411setDataRateE15rf24_datarate_e>

  // Initialize CRC and request 2-byte (16bit) CRC
  //setCRCLength( RF24_CRC_16 ) ;

  // Disable dynamic payloads, to match dynamic_payloads_enabled setting - Reset value is 0
  toggle_features();
     b84:	ce 01       	movw	r24, r28
     b86:	0e 94 1d 05 	call	0xa3a	; 0xa3a <_ZN4RF2415toggle_featuresEv>
  write_register(FEATURE,0 );
     b8a:	40 e0       	ldi	r20, 0x00	; 0
     b8c:	6d e1       	ldi	r22, 0x1D	; 29
     b8e:	ce 01       	movw	r24, r28
     b90:	0e 94 70 03 	call	0x6e0	; 0x6e0 <_ZN4RF2414write_registerEhh>
  write_register(DYNPD,0);
     b94:	40 e0       	ldi	r20, 0x00	; 0
     b96:	6c e1       	ldi	r22, 0x1C	; 28
     b98:	ce 01       	movw	r24, r28
     b9a:	0e 94 70 03 	call	0x6e0	; 0x6e0 <_ZN4RF2414write_registerEhh>
  dynamic_payloads_enabled = false;
     b9e:	18 86       	std	Y+8, r1	; 0x08

  // Reset current status
  // Notice reset and flush is the last thing we do
  write_register(NRF_STATUS,_BV(RX_DR) | _BV(TX_DS) | _BV(MAX_RT) );
     ba0:	40 e7       	ldi	r20, 0x70	; 112
     ba2:	67 e0       	ldi	r22, 0x07	; 7
     ba4:	ce 01       	movw	r24, r28
     ba6:	0e 94 70 03 	call	0x6e0	; 0x6e0 <_ZN4RF2414write_registerEhh>

  // Set up default configuration.  Callers can always change it later.
  // This channel should be universally safe and not bleed over into adjacent
  // spectrum.
  setChannel(76);
     baa:	6c e4       	ldi	r22, 0x4C	; 76
     bac:	ce 01       	movw	r24, r28
     bae:	0e 94 28 04 	call	0x850	; 0x850 <_ZN4RF2410setChannelEh>

  // Flush buffers
  flush_rx();
     bb2:	ce 01       	movw	r24, r28
     bb4:	0e 94 07 04 	call	0x80e	; 0x80e <_ZN4RF248flush_rxEv>
  flush_tx();
     bb8:	ce 01       	movw	r24, r28
     bba:	0e 94 0b 04 	call	0x816	; 0x816 <_ZN4RF248flush_txEv>

  powerUp(); //Power up by default when begin() is called
     bbe:	ce 01       	movw	r24, r28
     bc0:	0e 94 31 04 	call	0x862	; 0x862 <_ZN4RF247powerUpEv>

  // Enable PTX, do not write CE high so radio will remain in standby I mode ( 130us max to transition to RX or TX instead of 1500us from powerUp )
  // PTX should use only 22uA of power
  write_register(NRF_CONFIG, ( read_register(NRF_CONFIG) ) & ~_BV(PRIM_RX) );
     bc4:	60 e0       	ldi	r22, 0x00	; 0
     bc6:	ce 01       	movw	r24, r28
     bc8:	0e 94 20 03 	call	0x640	; 0x640 <_ZN4RF2413read_registerEh>
     bcc:	48 2f       	mov	r20, r24
     bce:	4e 7f       	andi	r20, 0xFE	; 254
     bd0:	60 e0       	ldi	r22, 0x00	; 0
     bd2:	ce 01       	movw	r24, r28
     bd4:	0e 94 70 03 	call	0x6e0	; 0x6e0 <_ZN4RF2414write_registerEhh>

  // if setup is 0 or ff then there was no response from module
  return ( setup != 0 && setup != 0xff );
     bd8:	11 50       	subi	r17, 0x01	; 1
     bda:	81 e0       	ldi	r24, 0x01	; 1
     bdc:	1e 3f       	cpi	r17, 0xFE	; 254
     bde:	08 f0       	brcs	.+2      	; 0xbe2 <_ZN4RF245beginEv+0xec>
     be0:	80 e0       	ldi	r24, 0x00	; 0
}
     be2:	df 91       	pop	r29
     be4:	cf 91       	pop	r28
     be6:	1f 91       	pop	r17
     be8:	08 95       	ret

00000bea <_ZN8SPIClass5beginEv>:
#include <stdint-gcc.h>

SPIClass SPI;
void SPIClass::begin()
{
   cli();//noInterrupts(); // Protect from a scheduler and prevent transactionBegin
     bea:	f8 94       	cli
 
    
    Set_pin(SS, OUT);
     bec:	61 e0       	ldi	r22, 0x01	; 1
     bee:	70 e0       	ldi	r23, 0x00	; 0
     bf0:	8a e0       	ldi	r24, 0x0A	; 10
     bf2:	90 e0       	ldi	r25, 0x00	; 0
     bf4:	0e 94 78 01 	call	0x2f0	; 0x2f0 <Set_pin>

    // Warning: if the SS pin ever becomes a LOW INPUT then SPI
    // automatically switches to Slave, so the data direction of
    // the SS pin MUST be kept as OUT.
    SPCR |= _BV(MSTR);
     bf8:	8c b5       	in	r24, 0x2c	; 44
     bfa:	80 61       	ori	r24, 0x10	; 16
     bfc:	8c bd       	out	0x2c, r24	; 44
    SPCR |= _BV(SPE);
     bfe:	8c b5       	in	r24, 0x2c	; 44
     c00:	80 64       	ori	r24, 0x40	; 64
     c02:	8c bd       	out	0x2c, r24	; 44
    // MISO pin automatically overrides to INPUT.
    // By doing this AFTER enabling SPI, we avoid accidentally
    // clocking in a single bit since the lines go directly
    // from "input" to SPI control.
    // http://code.google.com/p/arduino/issues/detail?id=888
    Set_pin(SCK, OUT);
     c04:	61 e0       	ldi	r22, 0x01	; 1
     c06:	70 e0       	ldi	r23, 0x00	; 0
     c08:	8d e0       	ldi	r24, 0x0D	; 13
     c0a:	90 e0       	ldi	r25, 0x00	; 0
     c0c:	0e 94 78 01 	call	0x2f0	; 0x2f0 <Set_pin>
    Set_pin(MOSI, OUT);
     c10:	61 e0       	ldi	r22, 0x01	; 1
     c12:	70 e0       	ldi	r23, 0x00	; 0
     c14:	8b e0       	ldi	r24, 0x0B	; 11
     c16:	90 e0       	ldi	r25, 0x00	; 0
     c18:	0e 94 78 01 	call	0x2f0	; 0x2f0 <Set_pin>
     c1c:	08 95       	ret

00000c1e <__subsf3>:
     c1e:	50 58       	subi	r21, 0x80	; 128

00000c20 <__addsf3>:
     c20:	bb 27       	eor	r27, r27
     c22:	aa 27       	eor	r26, r26
     c24:	0e 94 27 06 	call	0xc4e	; 0xc4e <__addsf3x>
     c28:	0c 94 9a 07 	jmp	0xf34	; 0xf34 <__fp_round>
     c2c:	0e 94 8c 07 	call	0xf18	; 0xf18 <__fp_pscA>
     c30:	38 f0       	brcs	.+14     	; 0xc40 <__addsf3+0x20>
     c32:	0e 94 93 07 	call	0xf26	; 0xf26 <__fp_pscB>
     c36:	20 f0       	brcs	.+8      	; 0xc40 <__addsf3+0x20>
     c38:	39 f4       	brne	.+14     	; 0xc48 <__addsf3+0x28>
     c3a:	9f 3f       	cpi	r25, 0xFF	; 255
     c3c:	19 f4       	brne	.+6      	; 0xc44 <__addsf3+0x24>
     c3e:	26 f4       	brtc	.+8      	; 0xc48 <__addsf3+0x28>
     c40:	0c 94 89 07 	jmp	0xf12	; 0xf12 <__fp_nan>
     c44:	0e f4       	brtc	.+2      	; 0xc48 <__addsf3+0x28>
     c46:	e0 95       	com	r30
     c48:	e7 fb       	bst	r30, 7
     c4a:	0c 94 83 07 	jmp	0xf06	; 0xf06 <__fp_inf>

00000c4e <__addsf3x>:
     c4e:	e9 2f       	mov	r30, r25
     c50:	0e 94 ab 07 	call	0xf56	; 0xf56 <__fp_split3>
     c54:	58 f3       	brcs	.-42     	; 0xc2c <__addsf3+0xc>
     c56:	ba 17       	cp	r27, r26
     c58:	62 07       	cpc	r22, r18
     c5a:	73 07       	cpc	r23, r19
     c5c:	84 07       	cpc	r24, r20
     c5e:	95 07       	cpc	r25, r21
     c60:	20 f0       	brcs	.+8      	; 0xc6a <__addsf3x+0x1c>
     c62:	79 f4       	brne	.+30     	; 0xc82 <__addsf3x+0x34>
     c64:	a6 f5       	brtc	.+104    	; 0xcce <__addsf3x+0x80>
     c66:	0c 94 cd 07 	jmp	0xf9a	; 0xf9a <__fp_zero>
     c6a:	0e f4       	brtc	.+2      	; 0xc6e <__addsf3x+0x20>
     c6c:	e0 95       	com	r30
     c6e:	0b 2e       	mov	r0, r27
     c70:	ba 2f       	mov	r27, r26
     c72:	a0 2d       	mov	r26, r0
     c74:	0b 01       	movw	r0, r22
     c76:	b9 01       	movw	r22, r18
     c78:	90 01       	movw	r18, r0
     c7a:	0c 01       	movw	r0, r24
     c7c:	ca 01       	movw	r24, r20
     c7e:	a0 01       	movw	r20, r0
     c80:	11 24       	eor	r1, r1
     c82:	ff 27       	eor	r31, r31
     c84:	59 1b       	sub	r21, r25
     c86:	99 f0       	breq	.+38     	; 0xcae <__addsf3x+0x60>
     c88:	59 3f       	cpi	r21, 0xF9	; 249
     c8a:	50 f4       	brcc	.+20     	; 0xca0 <__addsf3x+0x52>
     c8c:	50 3e       	cpi	r21, 0xE0	; 224
     c8e:	68 f1       	brcs	.+90     	; 0xcea <__addsf3x+0x9c>
     c90:	1a 16       	cp	r1, r26
     c92:	f0 40       	sbci	r31, 0x00	; 0
     c94:	a2 2f       	mov	r26, r18
     c96:	23 2f       	mov	r18, r19
     c98:	34 2f       	mov	r19, r20
     c9a:	44 27       	eor	r20, r20
     c9c:	58 5f       	subi	r21, 0xF8	; 248
     c9e:	f3 cf       	rjmp	.-26     	; 0xc86 <__addsf3x+0x38>
     ca0:	46 95       	lsr	r20
     ca2:	37 95       	ror	r19
     ca4:	27 95       	ror	r18
     ca6:	a7 95       	ror	r26
     ca8:	f0 40       	sbci	r31, 0x00	; 0
     caa:	53 95       	inc	r21
     cac:	c9 f7       	brne	.-14     	; 0xca0 <__addsf3x+0x52>
     cae:	7e f4       	brtc	.+30     	; 0xcce <__addsf3x+0x80>
     cb0:	1f 16       	cp	r1, r31
     cb2:	ba 0b       	sbc	r27, r26
     cb4:	62 0b       	sbc	r22, r18
     cb6:	73 0b       	sbc	r23, r19
     cb8:	84 0b       	sbc	r24, r20
     cba:	ba f0       	brmi	.+46     	; 0xcea <__addsf3x+0x9c>
     cbc:	91 50       	subi	r25, 0x01	; 1
     cbe:	a1 f0       	breq	.+40     	; 0xce8 <__addsf3x+0x9a>
     cc0:	ff 0f       	add	r31, r31
     cc2:	bb 1f       	adc	r27, r27
     cc4:	66 1f       	adc	r22, r22
     cc6:	77 1f       	adc	r23, r23
     cc8:	88 1f       	adc	r24, r24
     cca:	c2 f7       	brpl	.-16     	; 0xcbc <__addsf3x+0x6e>
     ccc:	0e c0       	rjmp	.+28     	; 0xcea <__addsf3x+0x9c>
     cce:	ba 0f       	add	r27, r26
     cd0:	62 1f       	adc	r22, r18
     cd2:	73 1f       	adc	r23, r19
     cd4:	84 1f       	adc	r24, r20
     cd6:	48 f4       	brcc	.+18     	; 0xcea <__addsf3x+0x9c>
     cd8:	87 95       	ror	r24
     cda:	77 95       	ror	r23
     cdc:	67 95       	ror	r22
     cde:	b7 95       	ror	r27
     ce0:	f7 95       	ror	r31
     ce2:	9e 3f       	cpi	r25, 0xFE	; 254
     ce4:	08 f0       	brcs	.+2      	; 0xce8 <__addsf3x+0x9a>
     ce6:	b0 cf       	rjmp	.-160    	; 0xc48 <__addsf3+0x28>
     ce8:	93 95       	inc	r25
     cea:	88 0f       	add	r24, r24
     cec:	08 f0       	brcs	.+2      	; 0xcf0 <__addsf3x+0xa2>
     cee:	99 27       	eor	r25, r25
     cf0:	ee 0f       	add	r30, r30
     cf2:	97 95       	ror	r25
     cf4:	87 95       	ror	r24
     cf6:	08 95       	ret

00000cf8 <__cmpsf2>:
     cf8:	0e 94 5f 07 	call	0xebe	; 0xebe <__fp_cmp>
     cfc:	08 f4       	brcc	.+2      	; 0xd00 <__cmpsf2+0x8>
     cfe:	81 e0       	ldi	r24, 0x01	; 1
     d00:	08 95       	ret

00000d02 <__divsf3>:
     d02:	0e 94 95 06 	call	0xd2a	; 0xd2a <__divsf3x>
     d06:	0c 94 9a 07 	jmp	0xf34	; 0xf34 <__fp_round>
     d0a:	0e 94 93 07 	call	0xf26	; 0xf26 <__fp_pscB>
     d0e:	58 f0       	brcs	.+22     	; 0xd26 <__divsf3+0x24>
     d10:	0e 94 8c 07 	call	0xf18	; 0xf18 <__fp_pscA>
     d14:	40 f0       	brcs	.+16     	; 0xd26 <__divsf3+0x24>
     d16:	29 f4       	brne	.+10     	; 0xd22 <__divsf3+0x20>
     d18:	5f 3f       	cpi	r21, 0xFF	; 255
     d1a:	29 f0       	breq	.+10     	; 0xd26 <__divsf3+0x24>
     d1c:	0c 94 83 07 	jmp	0xf06	; 0xf06 <__fp_inf>
     d20:	51 11       	cpse	r21, r1
     d22:	0c 94 ce 07 	jmp	0xf9c	; 0xf9c <__fp_szero>
     d26:	0c 94 89 07 	jmp	0xf12	; 0xf12 <__fp_nan>

00000d2a <__divsf3x>:
     d2a:	0e 94 ab 07 	call	0xf56	; 0xf56 <__fp_split3>
     d2e:	68 f3       	brcs	.-38     	; 0xd0a <__divsf3+0x8>

00000d30 <__divsf3_pse>:
     d30:	99 23       	and	r25, r25
     d32:	b1 f3       	breq	.-20     	; 0xd20 <__divsf3+0x1e>
     d34:	55 23       	and	r21, r21
     d36:	91 f3       	breq	.-28     	; 0xd1c <__divsf3+0x1a>
     d38:	95 1b       	sub	r25, r21
     d3a:	55 0b       	sbc	r21, r21
     d3c:	bb 27       	eor	r27, r27
     d3e:	aa 27       	eor	r26, r26
     d40:	62 17       	cp	r22, r18
     d42:	73 07       	cpc	r23, r19
     d44:	84 07       	cpc	r24, r20
     d46:	38 f0       	brcs	.+14     	; 0xd56 <__divsf3_pse+0x26>
     d48:	9f 5f       	subi	r25, 0xFF	; 255
     d4a:	5f 4f       	sbci	r21, 0xFF	; 255
     d4c:	22 0f       	add	r18, r18
     d4e:	33 1f       	adc	r19, r19
     d50:	44 1f       	adc	r20, r20
     d52:	aa 1f       	adc	r26, r26
     d54:	a9 f3       	breq	.-22     	; 0xd40 <__divsf3_pse+0x10>
     d56:	35 d0       	rcall	.+106    	; 0xdc2 <__divsf3_pse+0x92>
     d58:	0e 2e       	mov	r0, r30
     d5a:	3a f0       	brmi	.+14     	; 0xd6a <__divsf3_pse+0x3a>
     d5c:	e0 e8       	ldi	r30, 0x80	; 128
     d5e:	32 d0       	rcall	.+100    	; 0xdc4 <__divsf3_pse+0x94>
     d60:	91 50       	subi	r25, 0x01	; 1
     d62:	50 40       	sbci	r21, 0x00	; 0
     d64:	e6 95       	lsr	r30
     d66:	00 1c       	adc	r0, r0
     d68:	ca f7       	brpl	.-14     	; 0xd5c <__divsf3_pse+0x2c>
     d6a:	2b d0       	rcall	.+86     	; 0xdc2 <__divsf3_pse+0x92>
     d6c:	fe 2f       	mov	r31, r30
     d6e:	29 d0       	rcall	.+82     	; 0xdc2 <__divsf3_pse+0x92>
     d70:	66 0f       	add	r22, r22
     d72:	77 1f       	adc	r23, r23
     d74:	88 1f       	adc	r24, r24
     d76:	bb 1f       	adc	r27, r27
     d78:	26 17       	cp	r18, r22
     d7a:	37 07       	cpc	r19, r23
     d7c:	48 07       	cpc	r20, r24
     d7e:	ab 07       	cpc	r26, r27
     d80:	b0 e8       	ldi	r27, 0x80	; 128
     d82:	09 f0       	breq	.+2      	; 0xd86 <__divsf3_pse+0x56>
     d84:	bb 0b       	sbc	r27, r27
     d86:	80 2d       	mov	r24, r0
     d88:	bf 01       	movw	r22, r30
     d8a:	ff 27       	eor	r31, r31
     d8c:	93 58       	subi	r25, 0x83	; 131
     d8e:	5f 4f       	sbci	r21, 0xFF	; 255
     d90:	3a f0       	brmi	.+14     	; 0xda0 <__divsf3_pse+0x70>
     d92:	9e 3f       	cpi	r25, 0xFE	; 254
     d94:	51 05       	cpc	r21, r1
     d96:	78 f0       	brcs	.+30     	; 0xdb6 <__divsf3_pse+0x86>
     d98:	0c 94 83 07 	jmp	0xf06	; 0xf06 <__fp_inf>
     d9c:	0c 94 ce 07 	jmp	0xf9c	; 0xf9c <__fp_szero>
     da0:	5f 3f       	cpi	r21, 0xFF	; 255
     da2:	e4 f3       	brlt	.-8      	; 0xd9c <__divsf3_pse+0x6c>
     da4:	98 3e       	cpi	r25, 0xE8	; 232
     da6:	d4 f3       	brlt	.-12     	; 0xd9c <__divsf3_pse+0x6c>
     da8:	86 95       	lsr	r24
     daa:	77 95       	ror	r23
     dac:	67 95       	ror	r22
     dae:	b7 95       	ror	r27
     db0:	f7 95       	ror	r31
     db2:	9f 5f       	subi	r25, 0xFF	; 255
     db4:	c9 f7       	brne	.-14     	; 0xda8 <__divsf3_pse+0x78>
     db6:	88 0f       	add	r24, r24
     db8:	91 1d       	adc	r25, r1
     dba:	96 95       	lsr	r25
     dbc:	87 95       	ror	r24
     dbe:	97 f9       	bld	r25, 7
     dc0:	08 95       	ret
     dc2:	e1 e0       	ldi	r30, 0x01	; 1
     dc4:	66 0f       	add	r22, r22
     dc6:	77 1f       	adc	r23, r23
     dc8:	88 1f       	adc	r24, r24
     dca:	bb 1f       	adc	r27, r27
     dcc:	62 17       	cp	r22, r18
     dce:	73 07       	cpc	r23, r19
     dd0:	84 07       	cpc	r24, r20
     dd2:	ba 07       	cpc	r27, r26
     dd4:	20 f0       	brcs	.+8      	; 0xdde <__divsf3_pse+0xae>
     dd6:	62 1b       	sub	r22, r18
     dd8:	73 0b       	sbc	r23, r19
     dda:	84 0b       	sbc	r24, r20
     ddc:	ba 0b       	sbc	r27, r26
     dde:	ee 1f       	adc	r30, r30
     de0:	88 f7       	brcc	.-30     	; 0xdc4 <__divsf3_pse+0x94>
     de2:	e0 95       	com	r30
     de4:	08 95       	ret

00000de6 <__fixunssfsi>:
     de6:	0e 94 b3 07 	call	0xf66	; 0xf66 <__fp_splitA>
     dea:	88 f0       	brcs	.+34     	; 0xe0e <__fixunssfsi+0x28>
     dec:	9f 57       	subi	r25, 0x7F	; 127
     dee:	98 f0       	brcs	.+38     	; 0xe16 <__fixunssfsi+0x30>
     df0:	b9 2f       	mov	r27, r25
     df2:	99 27       	eor	r25, r25
     df4:	b7 51       	subi	r27, 0x17	; 23
     df6:	b0 f0       	brcs	.+44     	; 0xe24 <__fixunssfsi+0x3e>
     df8:	e1 f0       	breq	.+56     	; 0xe32 <__fixunssfsi+0x4c>
     dfa:	66 0f       	add	r22, r22
     dfc:	77 1f       	adc	r23, r23
     dfe:	88 1f       	adc	r24, r24
     e00:	99 1f       	adc	r25, r25
     e02:	1a f0       	brmi	.+6      	; 0xe0a <__fixunssfsi+0x24>
     e04:	ba 95       	dec	r27
     e06:	c9 f7       	brne	.-14     	; 0xdfa <__fixunssfsi+0x14>
     e08:	14 c0       	rjmp	.+40     	; 0xe32 <__fixunssfsi+0x4c>
     e0a:	b1 30       	cpi	r27, 0x01	; 1
     e0c:	91 f0       	breq	.+36     	; 0xe32 <__fixunssfsi+0x4c>
     e0e:	0e 94 cd 07 	call	0xf9a	; 0xf9a <__fp_zero>
     e12:	b1 e0       	ldi	r27, 0x01	; 1
     e14:	08 95       	ret
     e16:	0c 94 cd 07 	jmp	0xf9a	; 0xf9a <__fp_zero>
     e1a:	67 2f       	mov	r22, r23
     e1c:	78 2f       	mov	r23, r24
     e1e:	88 27       	eor	r24, r24
     e20:	b8 5f       	subi	r27, 0xF8	; 248
     e22:	39 f0       	breq	.+14     	; 0xe32 <__fixunssfsi+0x4c>
     e24:	b9 3f       	cpi	r27, 0xF9	; 249
     e26:	cc f3       	brlt	.-14     	; 0xe1a <__fixunssfsi+0x34>
     e28:	86 95       	lsr	r24
     e2a:	77 95       	ror	r23
     e2c:	67 95       	ror	r22
     e2e:	b3 95       	inc	r27
     e30:	d9 f7       	brne	.-10     	; 0xe28 <__fixunssfsi+0x42>
     e32:	3e f4       	brtc	.+14     	; 0xe42 <__fixunssfsi+0x5c>
     e34:	90 95       	com	r25
     e36:	80 95       	com	r24
     e38:	70 95       	com	r23
     e3a:	61 95       	neg	r22
     e3c:	7f 4f       	sbci	r23, 0xFF	; 255
     e3e:	8f 4f       	sbci	r24, 0xFF	; 255
     e40:	9f 4f       	sbci	r25, 0xFF	; 255
     e42:	08 95       	ret

00000e44 <__floatunsisf>:
     e44:	e8 94       	clt
     e46:	09 c0       	rjmp	.+18     	; 0xe5a <__floatsisf+0x12>

00000e48 <__floatsisf>:
     e48:	97 fb       	bst	r25, 7
     e4a:	3e f4       	brtc	.+14     	; 0xe5a <__floatsisf+0x12>
     e4c:	90 95       	com	r25
     e4e:	80 95       	com	r24
     e50:	70 95       	com	r23
     e52:	61 95       	neg	r22
     e54:	7f 4f       	sbci	r23, 0xFF	; 255
     e56:	8f 4f       	sbci	r24, 0xFF	; 255
     e58:	9f 4f       	sbci	r25, 0xFF	; 255
     e5a:	99 23       	and	r25, r25
     e5c:	a9 f0       	breq	.+42     	; 0xe88 <__floatsisf+0x40>
     e5e:	f9 2f       	mov	r31, r25
     e60:	96 e9       	ldi	r25, 0x96	; 150
     e62:	bb 27       	eor	r27, r27
     e64:	93 95       	inc	r25
     e66:	f6 95       	lsr	r31
     e68:	87 95       	ror	r24
     e6a:	77 95       	ror	r23
     e6c:	67 95       	ror	r22
     e6e:	b7 95       	ror	r27
     e70:	f1 11       	cpse	r31, r1
     e72:	f8 cf       	rjmp	.-16     	; 0xe64 <__floatsisf+0x1c>
     e74:	fa f4       	brpl	.+62     	; 0xeb4 <__floatsisf+0x6c>
     e76:	bb 0f       	add	r27, r27
     e78:	11 f4       	brne	.+4      	; 0xe7e <__floatsisf+0x36>
     e7a:	60 ff       	sbrs	r22, 0
     e7c:	1b c0       	rjmp	.+54     	; 0xeb4 <__floatsisf+0x6c>
     e7e:	6f 5f       	subi	r22, 0xFF	; 255
     e80:	7f 4f       	sbci	r23, 0xFF	; 255
     e82:	8f 4f       	sbci	r24, 0xFF	; 255
     e84:	9f 4f       	sbci	r25, 0xFF	; 255
     e86:	16 c0       	rjmp	.+44     	; 0xeb4 <__floatsisf+0x6c>
     e88:	88 23       	and	r24, r24
     e8a:	11 f0       	breq	.+4      	; 0xe90 <__floatsisf+0x48>
     e8c:	96 e9       	ldi	r25, 0x96	; 150
     e8e:	11 c0       	rjmp	.+34     	; 0xeb2 <__floatsisf+0x6a>
     e90:	77 23       	and	r23, r23
     e92:	21 f0       	breq	.+8      	; 0xe9c <__floatsisf+0x54>
     e94:	9e e8       	ldi	r25, 0x8E	; 142
     e96:	87 2f       	mov	r24, r23
     e98:	76 2f       	mov	r23, r22
     e9a:	05 c0       	rjmp	.+10     	; 0xea6 <__floatsisf+0x5e>
     e9c:	66 23       	and	r22, r22
     e9e:	71 f0       	breq	.+28     	; 0xebc <__floatsisf+0x74>
     ea0:	96 e8       	ldi	r25, 0x86	; 134
     ea2:	86 2f       	mov	r24, r22
     ea4:	70 e0       	ldi	r23, 0x00	; 0
     ea6:	60 e0       	ldi	r22, 0x00	; 0
     ea8:	2a f0       	brmi	.+10     	; 0xeb4 <__floatsisf+0x6c>
     eaa:	9a 95       	dec	r25
     eac:	66 0f       	add	r22, r22
     eae:	77 1f       	adc	r23, r23
     eb0:	88 1f       	adc	r24, r24
     eb2:	da f7       	brpl	.-10     	; 0xeaa <__floatsisf+0x62>
     eb4:	88 0f       	add	r24, r24
     eb6:	96 95       	lsr	r25
     eb8:	87 95       	ror	r24
     eba:	97 f9       	bld	r25, 7
     ebc:	08 95       	ret

00000ebe <__fp_cmp>:
     ebe:	99 0f       	add	r25, r25
     ec0:	00 08       	sbc	r0, r0
     ec2:	55 0f       	add	r21, r21
     ec4:	aa 0b       	sbc	r26, r26
     ec6:	e0 e8       	ldi	r30, 0x80	; 128
     ec8:	fe ef       	ldi	r31, 0xFE	; 254
     eca:	16 16       	cp	r1, r22
     ecc:	17 06       	cpc	r1, r23
     ece:	e8 07       	cpc	r30, r24
     ed0:	f9 07       	cpc	r31, r25
     ed2:	c0 f0       	brcs	.+48     	; 0xf04 <__fp_cmp+0x46>
     ed4:	12 16       	cp	r1, r18
     ed6:	13 06       	cpc	r1, r19
     ed8:	e4 07       	cpc	r30, r20
     eda:	f5 07       	cpc	r31, r21
     edc:	98 f0       	brcs	.+38     	; 0xf04 <__fp_cmp+0x46>
     ede:	62 1b       	sub	r22, r18
     ee0:	73 0b       	sbc	r23, r19
     ee2:	84 0b       	sbc	r24, r20
     ee4:	95 0b       	sbc	r25, r21
     ee6:	39 f4       	brne	.+14     	; 0xef6 <__fp_cmp+0x38>
     ee8:	0a 26       	eor	r0, r26
     eea:	61 f0       	breq	.+24     	; 0xf04 <__fp_cmp+0x46>
     eec:	23 2b       	or	r18, r19
     eee:	24 2b       	or	r18, r20
     ef0:	25 2b       	or	r18, r21
     ef2:	21 f4       	brne	.+8      	; 0xefc <__fp_cmp+0x3e>
     ef4:	08 95       	ret
     ef6:	0a 26       	eor	r0, r26
     ef8:	09 f4       	brne	.+2      	; 0xefc <__fp_cmp+0x3e>
     efa:	a1 40       	sbci	r26, 0x01	; 1
     efc:	a6 95       	lsr	r26
     efe:	8f ef       	ldi	r24, 0xFF	; 255
     f00:	81 1d       	adc	r24, r1
     f02:	81 1d       	adc	r24, r1
     f04:	08 95       	ret

00000f06 <__fp_inf>:
     f06:	97 f9       	bld	r25, 7
     f08:	9f 67       	ori	r25, 0x7F	; 127
     f0a:	80 e8       	ldi	r24, 0x80	; 128
     f0c:	70 e0       	ldi	r23, 0x00	; 0
     f0e:	60 e0       	ldi	r22, 0x00	; 0
     f10:	08 95       	ret

00000f12 <__fp_nan>:
     f12:	9f ef       	ldi	r25, 0xFF	; 255
     f14:	80 ec       	ldi	r24, 0xC0	; 192
     f16:	08 95       	ret

00000f18 <__fp_pscA>:
     f18:	00 24       	eor	r0, r0
     f1a:	0a 94       	dec	r0
     f1c:	16 16       	cp	r1, r22
     f1e:	17 06       	cpc	r1, r23
     f20:	18 06       	cpc	r1, r24
     f22:	09 06       	cpc	r0, r25
     f24:	08 95       	ret

00000f26 <__fp_pscB>:
     f26:	00 24       	eor	r0, r0
     f28:	0a 94       	dec	r0
     f2a:	12 16       	cp	r1, r18
     f2c:	13 06       	cpc	r1, r19
     f2e:	14 06       	cpc	r1, r20
     f30:	05 06       	cpc	r0, r21
     f32:	08 95       	ret

00000f34 <__fp_round>:
     f34:	09 2e       	mov	r0, r25
     f36:	03 94       	inc	r0
     f38:	00 0c       	add	r0, r0
     f3a:	11 f4       	brne	.+4      	; 0xf40 <__fp_round+0xc>
     f3c:	88 23       	and	r24, r24
     f3e:	52 f0       	brmi	.+20     	; 0xf54 <__fp_round+0x20>
     f40:	bb 0f       	add	r27, r27
     f42:	40 f4       	brcc	.+16     	; 0xf54 <__fp_round+0x20>
     f44:	bf 2b       	or	r27, r31
     f46:	11 f4       	brne	.+4      	; 0xf4c <__fp_round+0x18>
     f48:	60 ff       	sbrs	r22, 0
     f4a:	04 c0       	rjmp	.+8      	; 0xf54 <__fp_round+0x20>
     f4c:	6f 5f       	subi	r22, 0xFF	; 255
     f4e:	7f 4f       	sbci	r23, 0xFF	; 255
     f50:	8f 4f       	sbci	r24, 0xFF	; 255
     f52:	9f 4f       	sbci	r25, 0xFF	; 255
     f54:	08 95       	ret

00000f56 <__fp_split3>:
     f56:	57 fd       	sbrc	r21, 7
     f58:	90 58       	subi	r25, 0x80	; 128
     f5a:	44 0f       	add	r20, r20
     f5c:	55 1f       	adc	r21, r21
     f5e:	59 f0       	breq	.+22     	; 0xf76 <__fp_splitA+0x10>
     f60:	5f 3f       	cpi	r21, 0xFF	; 255
     f62:	71 f0       	breq	.+28     	; 0xf80 <__fp_splitA+0x1a>
     f64:	47 95       	ror	r20

00000f66 <__fp_splitA>:
     f66:	88 0f       	add	r24, r24
     f68:	97 fb       	bst	r25, 7
     f6a:	99 1f       	adc	r25, r25
     f6c:	61 f0       	breq	.+24     	; 0xf86 <__fp_splitA+0x20>
     f6e:	9f 3f       	cpi	r25, 0xFF	; 255
     f70:	79 f0       	breq	.+30     	; 0xf90 <__fp_splitA+0x2a>
     f72:	87 95       	ror	r24
     f74:	08 95       	ret
     f76:	12 16       	cp	r1, r18
     f78:	13 06       	cpc	r1, r19
     f7a:	14 06       	cpc	r1, r20
     f7c:	55 1f       	adc	r21, r21
     f7e:	f2 cf       	rjmp	.-28     	; 0xf64 <__fp_split3+0xe>
     f80:	46 95       	lsr	r20
     f82:	f1 df       	rcall	.-30     	; 0xf66 <__fp_splitA>
     f84:	08 c0       	rjmp	.+16     	; 0xf96 <__fp_splitA+0x30>
     f86:	16 16       	cp	r1, r22
     f88:	17 06       	cpc	r1, r23
     f8a:	18 06       	cpc	r1, r24
     f8c:	99 1f       	adc	r25, r25
     f8e:	f1 cf       	rjmp	.-30     	; 0xf72 <__fp_splitA+0xc>
     f90:	86 95       	lsr	r24
     f92:	71 05       	cpc	r23, r1
     f94:	61 05       	cpc	r22, r1
     f96:	08 94       	sec
     f98:	08 95       	ret

00000f9a <__fp_zero>:
     f9a:	e8 94       	clt

00000f9c <__fp_szero>:
     f9c:	bb 27       	eor	r27, r27
     f9e:	66 27       	eor	r22, r22
     fa0:	77 27       	eor	r23, r23
     fa2:	cb 01       	movw	r24, r22
     fa4:	97 f9       	bld	r25, 7
     fa6:	08 95       	ret

00000fa8 <__gesf2>:
     fa8:	0e 94 5f 07 	call	0xebe	; 0xebe <__fp_cmp>
     fac:	08 f4       	brcc	.+2      	; 0xfb0 <__gesf2+0x8>
     fae:	8f ef       	ldi	r24, 0xFF	; 255
     fb0:	08 95       	ret

00000fb2 <__mulsf3>:
     fb2:	0e 94 ec 07 	call	0xfd8	; 0xfd8 <__mulsf3x>
     fb6:	0c 94 9a 07 	jmp	0xf34	; 0xf34 <__fp_round>
     fba:	0e 94 8c 07 	call	0xf18	; 0xf18 <__fp_pscA>
     fbe:	38 f0       	brcs	.+14     	; 0xfce <__mulsf3+0x1c>
     fc0:	0e 94 93 07 	call	0xf26	; 0xf26 <__fp_pscB>
     fc4:	20 f0       	brcs	.+8      	; 0xfce <__mulsf3+0x1c>
     fc6:	95 23       	and	r25, r21
     fc8:	11 f0       	breq	.+4      	; 0xfce <__mulsf3+0x1c>
     fca:	0c 94 83 07 	jmp	0xf06	; 0xf06 <__fp_inf>
     fce:	0c 94 89 07 	jmp	0xf12	; 0xf12 <__fp_nan>
     fd2:	11 24       	eor	r1, r1
     fd4:	0c 94 ce 07 	jmp	0xf9c	; 0xf9c <__fp_szero>

00000fd8 <__mulsf3x>:
     fd8:	0e 94 ab 07 	call	0xf56	; 0xf56 <__fp_split3>
     fdc:	70 f3       	brcs	.-36     	; 0xfba <__mulsf3+0x8>

00000fde <__mulsf3_pse>:
     fde:	95 9f       	mul	r25, r21
     fe0:	c1 f3       	breq	.-16     	; 0xfd2 <__mulsf3+0x20>
     fe2:	95 0f       	add	r25, r21
     fe4:	50 e0       	ldi	r21, 0x00	; 0
     fe6:	55 1f       	adc	r21, r21
     fe8:	62 9f       	mul	r22, r18
     fea:	f0 01       	movw	r30, r0
     fec:	72 9f       	mul	r23, r18
     fee:	bb 27       	eor	r27, r27
     ff0:	f0 0d       	add	r31, r0
     ff2:	b1 1d       	adc	r27, r1
     ff4:	63 9f       	mul	r22, r19
     ff6:	aa 27       	eor	r26, r26
     ff8:	f0 0d       	add	r31, r0
     ffa:	b1 1d       	adc	r27, r1
     ffc:	aa 1f       	adc	r26, r26
     ffe:	64 9f       	mul	r22, r20
    1000:	66 27       	eor	r22, r22
    1002:	b0 0d       	add	r27, r0
    1004:	a1 1d       	adc	r26, r1
    1006:	66 1f       	adc	r22, r22
    1008:	82 9f       	mul	r24, r18
    100a:	22 27       	eor	r18, r18
    100c:	b0 0d       	add	r27, r0
    100e:	a1 1d       	adc	r26, r1
    1010:	62 1f       	adc	r22, r18
    1012:	73 9f       	mul	r23, r19
    1014:	b0 0d       	add	r27, r0
    1016:	a1 1d       	adc	r26, r1
    1018:	62 1f       	adc	r22, r18
    101a:	83 9f       	mul	r24, r19
    101c:	a0 0d       	add	r26, r0
    101e:	61 1d       	adc	r22, r1
    1020:	22 1f       	adc	r18, r18
    1022:	74 9f       	mul	r23, r20
    1024:	33 27       	eor	r19, r19
    1026:	a0 0d       	add	r26, r0
    1028:	61 1d       	adc	r22, r1
    102a:	23 1f       	adc	r18, r19
    102c:	84 9f       	mul	r24, r20
    102e:	60 0d       	add	r22, r0
    1030:	21 1d       	adc	r18, r1
    1032:	82 2f       	mov	r24, r18
    1034:	76 2f       	mov	r23, r22
    1036:	6a 2f       	mov	r22, r26
    1038:	11 24       	eor	r1, r1
    103a:	9f 57       	subi	r25, 0x7F	; 127
    103c:	50 40       	sbci	r21, 0x00	; 0
    103e:	9a f0       	brmi	.+38     	; 0x1066 <__mulsf3_pse+0x88>
    1040:	f1 f0       	breq	.+60     	; 0x107e <__mulsf3_pse+0xa0>
    1042:	88 23       	and	r24, r24
    1044:	4a f0       	brmi	.+18     	; 0x1058 <__mulsf3_pse+0x7a>
    1046:	ee 0f       	add	r30, r30
    1048:	ff 1f       	adc	r31, r31
    104a:	bb 1f       	adc	r27, r27
    104c:	66 1f       	adc	r22, r22
    104e:	77 1f       	adc	r23, r23
    1050:	88 1f       	adc	r24, r24
    1052:	91 50       	subi	r25, 0x01	; 1
    1054:	50 40       	sbci	r21, 0x00	; 0
    1056:	a9 f7       	brne	.-22     	; 0x1042 <__mulsf3_pse+0x64>
    1058:	9e 3f       	cpi	r25, 0xFE	; 254
    105a:	51 05       	cpc	r21, r1
    105c:	80 f0       	brcs	.+32     	; 0x107e <__mulsf3_pse+0xa0>
    105e:	0c 94 83 07 	jmp	0xf06	; 0xf06 <__fp_inf>
    1062:	0c 94 ce 07 	jmp	0xf9c	; 0xf9c <__fp_szero>
    1066:	5f 3f       	cpi	r21, 0xFF	; 255
    1068:	e4 f3       	brlt	.-8      	; 0x1062 <__mulsf3_pse+0x84>
    106a:	98 3e       	cpi	r25, 0xE8	; 232
    106c:	d4 f3       	brlt	.-12     	; 0x1062 <__mulsf3_pse+0x84>
    106e:	86 95       	lsr	r24
    1070:	77 95       	ror	r23
    1072:	67 95       	ror	r22
    1074:	b7 95       	ror	r27
    1076:	f7 95       	ror	r31
    1078:	e7 95       	ror	r30
    107a:	9f 5f       	subi	r25, 0xFF	; 255
    107c:	c1 f7       	brne	.-16     	; 0x106e <__mulsf3_pse+0x90>
    107e:	fe 2b       	or	r31, r30
    1080:	88 0f       	add	r24, r24
    1082:	91 1d       	adc	r25, r1
    1084:	96 95       	lsr	r25
    1086:	87 95       	ror	r24
    1088:	97 f9       	bld	r25, 7
    108a:	08 95       	ret

0000108c <__umulhisi3>:
    108c:	a2 9f       	mul	r26, r18
    108e:	b0 01       	movw	r22, r0
    1090:	b3 9f       	mul	r27, r19
    1092:	c0 01       	movw	r24, r0
    1094:	a3 9f       	mul	r26, r19
    1096:	70 0d       	add	r23, r0
    1098:	81 1d       	adc	r24, r1
    109a:	11 24       	eor	r1, r1
    109c:	91 1d       	adc	r25, r1
    109e:	b2 9f       	mul	r27, r18
    10a0:	70 0d       	add	r23, r0
    10a2:	81 1d       	adc	r24, r1
    10a4:	11 24       	eor	r1, r1
    10a6:	91 1d       	adc	r25, r1
    10a8:	08 95       	ret

000010aa <__tablejump2__>:
    10aa:	ee 0f       	add	r30, r30
    10ac:	ff 1f       	adc	r31, r31
    10ae:	05 90       	lpm	r0, Z+
    10b0:	f4 91       	lpm	r31, Z
    10b2:	e0 2d       	mov	r30, r0
    10b4:	09 94       	ijmp

000010b6 <memcpy>:
    10b6:	fb 01       	movw	r30, r22
    10b8:	dc 01       	movw	r26, r24
    10ba:	02 c0       	rjmp	.+4      	; 0x10c0 <memcpy+0xa>
    10bc:	01 90       	ld	r0, Z+
    10be:	0d 92       	st	X+, r0
    10c0:	41 50       	subi	r20, 0x01	; 1
    10c2:	50 40       	sbci	r21, 0x00	; 0
    10c4:	d8 f7       	brcc	.-10     	; 0x10bc <memcpy+0x6>
    10c6:	08 95       	ret

000010c8 <printf>:
    10c8:	a0 e0       	ldi	r26, 0x00	; 0
    10ca:	b0 e0       	ldi	r27, 0x00	; 0
    10cc:	ea e6       	ldi	r30, 0x6A	; 106
    10ce:	f8 e0       	ldi	r31, 0x08	; 8
    10d0:	0c 94 1b 0b 	jmp	0x1636	; 0x1636 <__prologue_saves__+0x20>
    10d4:	ae 01       	movw	r20, r28
    10d6:	4b 5f       	subi	r20, 0xFB	; 251
    10d8:	5f 4f       	sbci	r21, 0xFF	; 255
    10da:	fa 01       	movw	r30, r20
    10dc:	61 91       	ld	r22, Z+
    10de:	71 91       	ld	r23, Z+
    10e0:	af 01       	movw	r20, r30
    10e2:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <__iob+0x2>
    10e6:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <__iob+0x3>
    10ea:	0e 94 7a 08 	call	0x10f4	; 0x10f4 <vfprintf>
    10ee:	e2 e0       	ldi	r30, 0x02	; 2
    10f0:	0c 94 37 0b 	jmp	0x166e	; 0x166e <__epilogue_restores__+0x20>

000010f4 <vfprintf>:
    10f4:	ab e0       	ldi	r26, 0x0B	; 11
    10f6:	b0 e0       	ldi	r27, 0x00	; 0
    10f8:	e0 e8       	ldi	r30, 0x80	; 128
    10fa:	f8 e0       	ldi	r31, 0x08	; 8
    10fc:	0c 94 0b 0b 	jmp	0x1616	; 0x1616 <__prologue_saves__>
    1100:	6c 01       	movw	r12, r24
    1102:	7b 01       	movw	r14, r22
    1104:	8a 01       	movw	r16, r20
    1106:	fc 01       	movw	r30, r24
    1108:	17 82       	std	Z+7, r1	; 0x07
    110a:	16 82       	std	Z+6, r1	; 0x06
    110c:	83 81       	ldd	r24, Z+3	; 0x03
    110e:	81 ff       	sbrs	r24, 1
    1110:	cc c1       	rjmp	.+920    	; 0x14aa <vfprintf+0x3b6>
    1112:	ce 01       	movw	r24, r28
    1114:	01 96       	adiw	r24, 0x01	; 1
    1116:	3c 01       	movw	r6, r24
    1118:	f6 01       	movw	r30, r12
    111a:	93 81       	ldd	r25, Z+3	; 0x03
    111c:	f7 01       	movw	r30, r14
    111e:	93 fd       	sbrc	r25, 3
    1120:	85 91       	lpm	r24, Z+
    1122:	93 ff       	sbrs	r25, 3
    1124:	81 91       	ld	r24, Z+
    1126:	7f 01       	movw	r14, r30
    1128:	88 23       	and	r24, r24
    112a:	09 f4       	brne	.+2      	; 0x112e <vfprintf+0x3a>
    112c:	ba c1       	rjmp	.+884    	; 0x14a2 <vfprintf+0x3ae>
    112e:	85 32       	cpi	r24, 0x25	; 37
    1130:	39 f4       	brne	.+14     	; 0x1140 <vfprintf+0x4c>
    1132:	93 fd       	sbrc	r25, 3
    1134:	85 91       	lpm	r24, Z+
    1136:	93 ff       	sbrs	r25, 3
    1138:	81 91       	ld	r24, Z+
    113a:	7f 01       	movw	r14, r30
    113c:	85 32       	cpi	r24, 0x25	; 37
    113e:	29 f4       	brne	.+10     	; 0x114a <vfprintf+0x56>
    1140:	b6 01       	movw	r22, r12
    1142:	90 e0       	ldi	r25, 0x00	; 0
    1144:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <fputc>
    1148:	e7 cf       	rjmp	.-50     	; 0x1118 <vfprintf+0x24>
    114a:	91 2c       	mov	r9, r1
    114c:	21 2c       	mov	r2, r1
    114e:	31 2c       	mov	r3, r1
    1150:	ff e1       	ldi	r31, 0x1F	; 31
    1152:	f3 15       	cp	r31, r3
    1154:	d8 f0       	brcs	.+54     	; 0x118c <vfprintf+0x98>
    1156:	8b 32       	cpi	r24, 0x2B	; 43
    1158:	79 f0       	breq	.+30     	; 0x1178 <vfprintf+0x84>
    115a:	38 f4       	brcc	.+14     	; 0x116a <vfprintf+0x76>
    115c:	80 32       	cpi	r24, 0x20	; 32
    115e:	79 f0       	breq	.+30     	; 0x117e <vfprintf+0x8a>
    1160:	83 32       	cpi	r24, 0x23	; 35
    1162:	a1 f4       	brne	.+40     	; 0x118c <vfprintf+0x98>
    1164:	23 2d       	mov	r18, r3
    1166:	20 61       	ori	r18, 0x10	; 16
    1168:	1d c0       	rjmp	.+58     	; 0x11a4 <vfprintf+0xb0>
    116a:	8d 32       	cpi	r24, 0x2D	; 45
    116c:	61 f0       	breq	.+24     	; 0x1186 <vfprintf+0x92>
    116e:	80 33       	cpi	r24, 0x30	; 48
    1170:	69 f4       	brne	.+26     	; 0x118c <vfprintf+0x98>
    1172:	23 2d       	mov	r18, r3
    1174:	21 60       	ori	r18, 0x01	; 1
    1176:	16 c0       	rjmp	.+44     	; 0x11a4 <vfprintf+0xb0>
    1178:	83 2d       	mov	r24, r3
    117a:	82 60       	ori	r24, 0x02	; 2
    117c:	38 2e       	mov	r3, r24
    117e:	e3 2d       	mov	r30, r3
    1180:	e4 60       	ori	r30, 0x04	; 4
    1182:	3e 2e       	mov	r3, r30
    1184:	2a c0       	rjmp	.+84     	; 0x11da <vfprintf+0xe6>
    1186:	f3 2d       	mov	r31, r3
    1188:	f8 60       	ori	r31, 0x08	; 8
    118a:	1d c0       	rjmp	.+58     	; 0x11c6 <vfprintf+0xd2>
    118c:	37 fc       	sbrc	r3, 7
    118e:	2d c0       	rjmp	.+90     	; 0x11ea <vfprintf+0xf6>
    1190:	20 ed       	ldi	r18, 0xD0	; 208
    1192:	28 0f       	add	r18, r24
    1194:	2a 30       	cpi	r18, 0x0A	; 10
    1196:	40 f0       	brcs	.+16     	; 0x11a8 <vfprintf+0xb4>
    1198:	8e 32       	cpi	r24, 0x2E	; 46
    119a:	b9 f4       	brne	.+46     	; 0x11ca <vfprintf+0xd6>
    119c:	36 fc       	sbrc	r3, 6
    119e:	81 c1       	rjmp	.+770    	; 0x14a2 <vfprintf+0x3ae>
    11a0:	23 2d       	mov	r18, r3
    11a2:	20 64       	ori	r18, 0x40	; 64
    11a4:	32 2e       	mov	r3, r18
    11a6:	19 c0       	rjmp	.+50     	; 0x11da <vfprintf+0xe6>
    11a8:	36 fe       	sbrs	r3, 6
    11aa:	06 c0       	rjmp	.+12     	; 0x11b8 <vfprintf+0xc4>
    11ac:	8a e0       	ldi	r24, 0x0A	; 10
    11ae:	98 9e       	mul	r9, r24
    11b0:	20 0d       	add	r18, r0
    11b2:	11 24       	eor	r1, r1
    11b4:	92 2e       	mov	r9, r18
    11b6:	11 c0       	rjmp	.+34     	; 0x11da <vfprintf+0xe6>
    11b8:	ea e0       	ldi	r30, 0x0A	; 10
    11ba:	2e 9e       	mul	r2, r30
    11bc:	20 0d       	add	r18, r0
    11be:	11 24       	eor	r1, r1
    11c0:	22 2e       	mov	r2, r18
    11c2:	f3 2d       	mov	r31, r3
    11c4:	f0 62       	ori	r31, 0x20	; 32
    11c6:	3f 2e       	mov	r3, r31
    11c8:	08 c0       	rjmp	.+16     	; 0x11da <vfprintf+0xe6>
    11ca:	8c 36       	cpi	r24, 0x6C	; 108
    11cc:	21 f4       	brne	.+8      	; 0x11d6 <vfprintf+0xe2>
    11ce:	83 2d       	mov	r24, r3
    11d0:	80 68       	ori	r24, 0x80	; 128
    11d2:	38 2e       	mov	r3, r24
    11d4:	02 c0       	rjmp	.+4      	; 0x11da <vfprintf+0xe6>
    11d6:	88 36       	cpi	r24, 0x68	; 104
    11d8:	41 f4       	brne	.+16     	; 0x11ea <vfprintf+0xf6>
    11da:	f7 01       	movw	r30, r14
    11dc:	93 fd       	sbrc	r25, 3
    11de:	85 91       	lpm	r24, Z+
    11e0:	93 ff       	sbrs	r25, 3
    11e2:	81 91       	ld	r24, Z+
    11e4:	7f 01       	movw	r14, r30
    11e6:	81 11       	cpse	r24, r1
    11e8:	b3 cf       	rjmp	.-154    	; 0x1150 <vfprintf+0x5c>
    11ea:	98 2f       	mov	r25, r24
    11ec:	9f 7d       	andi	r25, 0xDF	; 223
    11ee:	95 54       	subi	r25, 0x45	; 69
    11f0:	93 30       	cpi	r25, 0x03	; 3
    11f2:	28 f4       	brcc	.+10     	; 0x11fe <vfprintf+0x10a>
    11f4:	0c 5f       	subi	r16, 0xFC	; 252
    11f6:	1f 4f       	sbci	r17, 0xFF	; 255
    11f8:	9f e3       	ldi	r25, 0x3F	; 63
    11fa:	99 83       	std	Y+1, r25	; 0x01
    11fc:	0d c0       	rjmp	.+26     	; 0x1218 <vfprintf+0x124>
    11fe:	83 36       	cpi	r24, 0x63	; 99
    1200:	31 f0       	breq	.+12     	; 0x120e <vfprintf+0x11a>
    1202:	83 37       	cpi	r24, 0x73	; 115
    1204:	71 f0       	breq	.+28     	; 0x1222 <vfprintf+0x12e>
    1206:	83 35       	cpi	r24, 0x53	; 83
    1208:	09 f0       	breq	.+2      	; 0x120c <vfprintf+0x118>
    120a:	59 c0       	rjmp	.+178    	; 0x12be <vfprintf+0x1ca>
    120c:	21 c0       	rjmp	.+66     	; 0x1250 <vfprintf+0x15c>
    120e:	f8 01       	movw	r30, r16
    1210:	80 81       	ld	r24, Z
    1212:	89 83       	std	Y+1, r24	; 0x01
    1214:	0e 5f       	subi	r16, 0xFE	; 254
    1216:	1f 4f       	sbci	r17, 0xFF	; 255
    1218:	88 24       	eor	r8, r8
    121a:	83 94       	inc	r8
    121c:	91 2c       	mov	r9, r1
    121e:	53 01       	movw	r10, r6
    1220:	13 c0       	rjmp	.+38     	; 0x1248 <vfprintf+0x154>
    1222:	28 01       	movw	r4, r16
    1224:	f2 e0       	ldi	r31, 0x02	; 2
    1226:	4f 0e       	add	r4, r31
    1228:	51 1c       	adc	r5, r1
    122a:	f8 01       	movw	r30, r16
    122c:	a0 80       	ld	r10, Z
    122e:	b1 80       	ldd	r11, Z+1	; 0x01
    1230:	36 fe       	sbrs	r3, 6
    1232:	03 c0       	rjmp	.+6      	; 0x123a <vfprintf+0x146>
    1234:	69 2d       	mov	r22, r9
    1236:	70 e0       	ldi	r23, 0x00	; 0
    1238:	02 c0       	rjmp	.+4      	; 0x123e <vfprintf+0x14a>
    123a:	6f ef       	ldi	r22, 0xFF	; 255
    123c:	7f ef       	ldi	r23, 0xFF	; 255
    123e:	c5 01       	movw	r24, r10
    1240:	0e 94 66 0a 	call	0x14cc	; 0x14cc <strnlen>
    1244:	4c 01       	movw	r8, r24
    1246:	82 01       	movw	r16, r4
    1248:	f3 2d       	mov	r31, r3
    124a:	ff 77       	andi	r31, 0x7F	; 127
    124c:	3f 2e       	mov	r3, r31
    124e:	16 c0       	rjmp	.+44     	; 0x127c <vfprintf+0x188>
    1250:	28 01       	movw	r4, r16
    1252:	22 e0       	ldi	r18, 0x02	; 2
    1254:	42 0e       	add	r4, r18
    1256:	51 1c       	adc	r5, r1
    1258:	f8 01       	movw	r30, r16
    125a:	a0 80       	ld	r10, Z
    125c:	b1 80       	ldd	r11, Z+1	; 0x01
    125e:	36 fe       	sbrs	r3, 6
    1260:	03 c0       	rjmp	.+6      	; 0x1268 <vfprintf+0x174>
    1262:	69 2d       	mov	r22, r9
    1264:	70 e0       	ldi	r23, 0x00	; 0
    1266:	02 c0       	rjmp	.+4      	; 0x126c <vfprintf+0x178>
    1268:	6f ef       	ldi	r22, 0xFF	; 255
    126a:	7f ef       	ldi	r23, 0xFF	; 255
    126c:	c5 01       	movw	r24, r10
    126e:	0e 94 5b 0a 	call	0x14b6	; 0x14b6 <strnlen_P>
    1272:	4c 01       	movw	r8, r24
    1274:	f3 2d       	mov	r31, r3
    1276:	f0 68       	ori	r31, 0x80	; 128
    1278:	3f 2e       	mov	r3, r31
    127a:	82 01       	movw	r16, r4
    127c:	33 fc       	sbrc	r3, 3
    127e:	1b c0       	rjmp	.+54     	; 0x12b6 <vfprintf+0x1c2>
    1280:	82 2d       	mov	r24, r2
    1282:	90 e0       	ldi	r25, 0x00	; 0
    1284:	88 16       	cp	r8, r24
    1286:	99 06       	cpc	r9, r25
    1288:	b0 f4       	brcc	.+44     	; 0x12b6 <vfprintf+0x1c2>
    128a:	b6 01       	movw	r22, r12
    128c:	80 e2       	ldi	r24, 0x20	; 32
    128e:	90 e0       	ldi	r25, 0x00	; 0
    1290:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <fputc>
    1294:	2a 94       	dec	r2
    1296:	f4 cf       	rjmp	.-24     	; 0x1280 <vfprintf+0x18c>
    1298:	f5 01       	movw	r30, r10
    129a:	37 fc       	sbrc	r3, 7
    129c:	85 91       	lpm	r24, Z+
    129e:	37 fe       	sbrs	r3, 7
    12a0:	81 91       	ld	r24, Z+
    12a2:	5f 01       	movw	r10, r30
    12a4:	b6 01       	movw	r22, r12
    12a6:	90 e0       	ldi	r25, 0x00	; 0
    12a8:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <fputc>
    12ac:	21 10       	cpse	r2, r1
    12ae:	2a 94       	dec	r2
    12b0:	21 e0       	ldi	r18, 0x01	; 1
    12b2:	82 1a       	sub	r8, r18
    12b4:	91 08       	sbc	r9, r1
    12b6:	81 14       	cp	r8, r1
    12b8:	91 04       	cpc	r9, r1
    12ba:	71 f7       	brne	.-36     	; 0x1298 <vfprintf+0x1a4>
    12bc:	e8 c0       	rjmp	.+464    	; 0x148e <vfprintf+0x39a>
    12be:	84 36       	cpi	r24, 0x64	; 100
    12c0:	11 f0       	breq	.+4      	; 0x12c6 <vfprintf+0x1d2>
    12c2:	89 36       	cpi	r24, 0x69	; 105
    12c4:	41 f5       	brne	.+80     	; 0x1316 <vfprintf+0x222>
    12c6:	f8 01       	movw	r30, r16
    12c8:	37 fe       	sbrs	r3, 7
    12ca:	07 c0       	rjmp	.+14     	; 0x12da <vfprintf+0x1e6>
    12cc:	60 81       	ld	r22, Z
    12ce:	71 81       	ldd	r23, Z+1	; 0x01
    12d0:	82 81       	ldd	r24, Z+2	; 0x02
    12d2:	93 81       	ldd	r25, Z+3	; 0x03
    12d4:	0c 5f       	subi	r16, 0xFC	; 252
    12d6:	1f 4f       	sbci	r17, 0xFF	; 255
    12d8:	08 c0       	rjmp	.+16     	; 0x12ea <vfprintf+0x1f6>
    12da:	60 81       	ld	r22, Z
    12dc:	71 81       	ldd	r23, Z+1	; 0x01
    12de:	07 2e       	mov	r0, r23
    12e0:	00 0c       	add	r0, r0
    12e2:	88 0b       	sbc	r24, r24
    12e4:	99 0b       	sbc	r25, r25
    12e6:	0e 5f       	subi	r16, 0xFE	; 254
    12e8:	1f 4f       	sbci	r17, 0xFF	; 255
    12ea:	f3 2d       	mov	r31, r3
    12ec:	ff 76       	andi	r31, 0x6F	; 111
    12ee:	3f 2e       	mov	r3, r31
    12f0:	97 ff       	sbrs	r25, 7
    12f2:	09 c0       	rjmp	.+18     	; 0x1306 <vfprintf+0x212>
    12f4:	90 95       	com	r25
    12f6:	80 95       	com	r24
    12f8:	70 95       	com	r23
    12fa:	61 95       	neg	r22
    12fc:	7f 4f       	sbci	r23, 0xFF	; 255
    12fe:	8f 4f       	sbci	r24, 0xFF	; 255
    1300:	9f 4f       	sbci	r25, 0xFF	; 255
    1302:	f0 68       	ori	r31, 0x80	; 128
    1304:	3f 2e       	mov	r3, r31
    1306:	2a e0       	ldi	r18, 0x0A	; 10
    1308:	30 e0       	ldi	r19, 0x00	; 0
    130a:	a3 01       	movw	r20, r6
    130c:	0e 94 ad 0a 	call	0x155a	; 0x155a <__ultoa_invert>
    1310:	88 2e       	mov	r8, r24
    1312:	86 18       	sub	r8, r6
    1314:	45 c0       	rjmp	.+138    	; 0x13a0 <vfprintf+0x2ac>
    1316:	85 37       	cpi	r24, 0x75	; 117
    1318:	31 f4       	brne	.+12     	; 0x1326 <vfprintf+0x232>
    131a:	23 2d       	mov	r18, r3
    131c:	2f 7e       	andi	r18, 0xEF	; 239
    131e:	b2 2e       	mov	r11, r18
    1320:	2a e0       	ldi	r18, 0x0A	; 10
    1322:	30 e0       	ldi	r19, 0x00	; 0
    1324:	25 c0       	rjmp	.+74     	; 0x1370 <vfprintf+0x27c>
    1326:	93 2d       	mov	r25, r3
    1328:	99 7f       	andi	r25, 0xF9	; 249
    132a:	b9 2e       	mov	r11, r25
    132c:	8f 36       	cpi	r24, 0x6F	; 111
    132e:	c1 f0       	breq	.+48     	; 0x1360 <vfprintf+0x26c>
    1330:	18 f4       	brcc	.+6      	; 0x1338 <vfprintf+0x244>
    1332:	88 35       	cpi	r24, 0x58	; 88
    1334:	79 f0       	breq	.+30     	; 0x1354 <vfprintf+0x260>
    1336:	b5 c0       	rjmp	.+362    	; 0x14a2 <vfprintf+0x3ae>
    1338:	80 37       	cpi	r24, 0x70	; 112
    133a:	19 f0       	breq	.+6      	; 0x1342 <vfprintf+0x24e>
    133c:	88 37       	cpi	r24, 0x78	; 120
    133e:	21 f0       	breq	.+8      	; 0x1348 <vfprintf+0x254>
    1340:	b0 c0       	rjmp	.+352    	; 0x14a2 <vfprintf+0x3ae>
    1342:	e9 2f       	mov	r30, r25
    1344:	e0 61       	ori	r30, 0x10	; 16
    1346:	be 2e       	mov	r11, r30
    1348:	b4 fe       	sbrs	r11, 4
    134a:	0d c0       	rjmp	.+26     	; 0x1366 <vfprintf+0x272>
    134c:	fb 2d       	mov	r31, r11
    134e:	f4 60       	ori	r31, 0x04	; 4
    1350:	bf 2e       	mov	r11, r31
    1352:	09 c0       	rjmp	.+18     	; 0x1366 <vfprintf+0x272>
    1354:	34 fe       	sbrs	r3, 4
    1356:	0a c0       	rjmp	.+20     	; 0x136c <vfprintf+0x278>
    1358:	29 2f       	mov	r18, r25
    135a:	26 60       	ori	r18, 0x06	; 6
    135c:	b2 2e       	mov	r11, r18
    135e:	06 c0       	rjmp	.+12     	; 0x136c <vfprintf+0x278>
    1360:	28 e0       	ldi	r18, 0x08	; 8
    1362:	30 e0       	ldi	r19, 0x00	; 0
    1364:	05 c0       	rjmp	.+10     	; 0x1370 <vfprintf+0x27c>
    1366:	20 e1       	ldi	r18, 0x10	; 16
    1368:	30 e0       	ldi	r19, 0x00	; 0
    136a:	02 c0       	rjmp	.+4      	; 0x1370 <vfprintf+0x27c>
    136c:	20 e1       	ldi	r18, 0x10	; 16
    136e:	32 e0       	ldi	r19, 0x02	; 2
    1370:	f8 01       	movw	r30, r16
    1372:	b7 fe       	sbrs	r11, 7
    1374:	07 c0       	rjmp	.+14     	; 0x1384 <vfprintf+0x290>
    1376:	60 81       	ld	r22, Z
    1378:	71 81       	ldd	r23, Z+1	; 0x01
    137a:	82 81       	ldd	r24, Z+2	; 0x02
    137c:	93 81       	ldd	r25, Z+3	; 0x03
    137e:	0c 5f       	subi	r16, 0xFC	; 252
    1380:	1f 4f       	sbci	r17, 0xFF	; 255
    1382:	06 c0       	rjmp	.+12     	; 0x1390 <vfprintf+0x29c>
    1384:	60 81       	ld	r22, Z
    1386:	71 81       	ldd	r23, Z+1	; 0x01
    1388:	80 e0       	ldi	r24, 0x00	; 0
    138a:	90 e0       	ldi	r25, 0x00	; 0
    138c:	0e 5f       	subi	r16, 0xFE	; 254
    138e:	1f 4f       	sbci	r17, 0xFF	; 255
    1390:	a3 01       	movw	r20, r6
    1392:	0e 94 ad 0a 	call	0x155a	; 0x155a <__ultoa_invert>
    1396:	88 2e       	mov	r8, r24
    1398:	86 18       	sub	r8, r6
    139a:	fb 2d       	mov	r31, r11
    139c:	ff 77       	andi	r31, 0x7F	; 127
    139e:	3f 2e       	mov	r3, r31
    13a0:	36 fe       	sbrs	r3, 6
    13a2:	0d c0       	rjmp	.+26     	; 0x13be <vfprintf+0x2ca>
    13a4:	23 2d       	mov	r18, r3
    13a6:	2e 7f       	andi	r18, 0xFE	; 254
    13a8:	a2 2e       	mov	r10, r18
    13aa:	89 14       	cp	r8, r9
    13ac:	58 f4       	brcc	.+22     	; 0x13c4 <vfprintf+0x2d0>
    13ae:	34 fe       	sbrs	r3, 4
    13b0:	0b c0       	rjmp	.+22     	; 0x13c8 <vfprintf+0x2d4>
    13b2:	32 fc       	sbrc	r3, 2
    13b4:	09 c0       	rjmp	.+18     	; 0x13c8 <vfprintf+0x2d4>
    13b6:	83 2d       	mov	r24, r3
    13b8:	8e 7e       	andi	r24, 0xEE	; 238
    13ba:	a8 2e       	mov	r10, r24
    13bc:	05 c0       	rjmp	.+10     	; 0x13c8 <vfprintf+0x2d4>
    13be:	b8 2c       	mov	r11, r8
    13c0:	a3 2c       	mov	r10, r3
    13c2:	03 c0       	rjmp	.+6      	; 0x13ca <vfprintf+0x2d6>
    13c4:	b8 2c       	mov	r11, r8
    13c6:	01 c0       	rjmp	.+2      	; 0x13ca <vfprintf+0x2d6>
    13c8:	b9 2c       	mov	r11, r9
    13ca:	a4 fe       	sbrs	r10, 4
    13cc:	0f c0       	rjmp	.+30     	; 0x13ec <vfprintf+0x2f8>
    13ce:	fe 01       	movw	r30, r28
    13d0:	e8 0d       	add	r30, r8
    13d2:	f1 1d       	adc	r31, r1
    13d4:	80 81       	ld	r24, Z
    13d6:	80 33       	cpi	r24, 0x30	; 48
    13d8:	21 f4       	brne	.+8      	; 0x13e2 <vfprintf+0x2ee>
    13da:	9a 2d       	mov	r25, r10
    13dc:	99 7e       	andi	r25, 0xE9	; 233
    13de:	a9 2e       	mov	r10, r25
    13e0:	09 c0       	rjmp	.+18     	; 0x13f4 <vfprintf+0x300>
    13e2:	a2 fe       	sbrs	r10, 2
    13e4:	06 c0       	rjmp	.+12     	; 0x13f2 <vfprintf+0x2fe>
    13e6:	b3 94       	inc	r11
    13e8:	b3 94       	inc	r11
    13ea:	04 c0       	rjmp	.+8      	; 0x13f4 <vfprintf+0x300>
    13ec:	8a 2d       	mov	r24, r10
    13ee:	86 78       	andi	r24, 0x86	; 134
    13f0:	09 f0       	breq	.+2      	; 0x13f4 <vfprintf+0x300>
    13f2:	b3 94       	inc	r11
    13f4:	a3 fc       	sbrc	r10, 3
    13f6:	11 c0       	rjmp	.+34     	; 0x141a <vfprintf+0x326>
    13f8:	a0 fe       	sbrs	r10, 0
    13fa:	06 c0       	rjmp	.+12     	; 0x1408 <vfprintf+0x314>
    13fc:	b2 14       	cp	r11, r2
    13fe:	88 f4       	brcc	.+34     	; 0x1422 <vfprintf+0x32e>
    1400:	28 0c       	add	r2, r8
    1402:	92 2c       	mov	r9, r2
    1404:	9b 18       	sub	r9, r11
    1406:	0e c0       	rjmp	.+28     	; 0x1424 <vfprintf+0x330>
    1408:	b2 14       	cp	r11, r2
    140a:	60 f4       	brcc	.+24     	; 0x1424 <vfprintf+0x330>
    140c:	b6 01       	movw	r22, r12
    140e:	80 e2       	ldi	r24, 0x20	; 32
    1410:	90 e0       	ldi	r25, 0x00	; 0
    1412:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <fputc>
    1416:	b3 94       	inc	r11
    1418:	f7 cf       	rjmp	.-18     	; 0x1408 <vfprintf+0x314>
    141a:	b2 14       	cp	r11, r2
    141c:	18 f4       	brcc	.+6      	; 0x1424 <vfprintf+0x330>
    141e:	2b 18       	sub	r2, r11
    1420:	02 c0       	rjmp	.+4      	; 0x1426 <vfprintf+0x332>
    1422:	98 2c       	mov	r9, r8
    1424:	21 2c       	mov	r2, r1
    1426:	a4 fe       	sbrs	r10, 4
    1428:	10 c0       	rjmp	.+32     	; 0x144a <vfprintf+0x356>
    142a:	b6 01       	movw	r22, r12
    142c:	80 e3       	ldi	r24, 0x30	; 48
    142e:	90 e0       	ldi	r25, 0x00	; 0
    1430:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <fputc>
    1434:	a2 fe       	sbrs	r10, 2
    1436:	17 c0       	rjmp	.+46     	; 0x1466 <vfprintf+0x372>
    1438:	a1 fc       	sbrc	r10, 1
    143a:	03 c0       	rjmp	.+6      	; 0x1442 <vfprintf+0x34e>
    143c:	88 e7       	ldi	r24, 0x78	; 120
    143e:	90 e0       	ldi	r25, 0x00	; 0
    1440:	02 c0       	rjmp	.+4      	; 0x1446 <vfprintf+0x352>
    1442:	88 e5       	ldi	r24, 0x58	; 88
    1444:	90 e0       	ldi	r25, 0x00	; 0
    1446:	b6 01       	movw	r22, r12
    1448:	0c c0       	rjmp	.+24     	; 0x1462 <vfprintf+0x36e>
    144a:	8a 2d       	mov	r24, r10
    144c:	86 78       	andi	r24, 0x86	; 134
    144e:	59 f0       	breq	.+22     	; 0x1466 <vfprintf+0x372>
    1450:	a1 fe       	sbrs	r10, 1
    1452:	02 c0       	rjmp	.+4      	; 0x1458 <vfprintf+0x364>
    1454:	8b e2       	ldi	r24, 0x2B	; 43
    1456:	01 c0       	rjmp	.+2      	; 0x145a <vfprintf+0x366>
    1458:	80 e2       	ldi	r24, 0x20	; 32
    145a:	a7 fc       	sbrc	r10, 7
    145c:	8d e2       	ldi	r24, 0x2D	; 45
    145e:	b6 01       	movw	r22, r12
    1460:	90 e0       	ldi	r25, 0x00	; 0
    1462:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <fputc>
    1466:	89 14       	cp	r8, r9
    1468:	38 f4       	brcc	.+14     	; 0x1478 <vfprintf+0x384>
    146a:	b6 01       	movw	r22, r12
    146c:	80 e3       	ldi	r24, 0x30	; 48
    146e:	90 e0       	ldi	r25, 0x00	; 0
    1470:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <fputc>
    1474:	9a 94       	dec	r9
    1476:	f7 cf       	rjmp	.-18     	; 0x1466 <vfprintf+0x372>
    1478:	8a 94       	dec	r8
    147a:	f3 01       	movw	r30, r6
    147c:	e8 0d       	add	r30, r8
    147e:	f1 1d       	adc	r31, r1
    1480:	80 81       	ld	r24, Z
    1482:	b6 01       	movw	r22, r12
    1484:	90 e0       	ldi	r25, 0x00	; 0
    1486:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <fputc>
    148a:	81 10       	cpse	r8, r1
    148c:	f5 cf       	rjmp	.-22     	; 0x1478 <vfprintf+0x384>
    148e:	22 20       	and	r2, r2
    1490:	09 f4       	brne	.+2      	; 0x1494 <vfprintf+0x3a0>
    1492:	42 ce       	rjmp	.-892    	; 0x1118 <vfprintf+0x24>
    1494:	b6 01       	movw	r22, r12
    1496:	80 e2       	ldi	r24, 0x20	; 32
    1498:	90 e0       	ldi	r25, 0x00	; 0
    149a:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <fputc>
    149e:	2a 94       	dec	r2
    14a0:	f6 cf       	rjmp	.-20     	; 0x148e <vfprintf+0x39a>
    14a2:	f6 01       	movw	r30, r12
    14a4:	86 81       	ldd	r24, Z+6	; 0x06
    14a6:	97 81       	ldd	r25, Z+7	; 0x07
    14a8:	02 c0       	rjmp	.+4      	; 0x14ae <vfprintf+0x3ba>
    14aa:	8f ef       	ldi	r24, 0xFF	; 255
    14ac:	9f ef       	ldi	r25, 0xFF	; 255
    14ae:	2b 96       	adiw	r28, 0x0b	; 11
    14b0:	e2 e1       	ldi	r30, 0x12	; 18
    14b2:	0c 94 27 0b 	jmp	0x164e	; 0x164e <__epilogue_restores__>

000014b6 <strnlen_P>:
    14b6:	fc 01       	movw	r30, r24
    14b8:	05 90       	lpm	r0, Z+
    14ba:	61 50       	subi	r22, 0x01	; 1
    14bc:	70 40       	sbci	r23, 0x00	; 0
    14be:	01 10       	cpse	r0, r1
    14c0:	d8 f7       	brcc	.-10     	; 0x14b8 <strnlen_P+0x2>
    14c2:	80 95       	com	r24
    14c4:	90 95       	com	r25
    14c6:	8e 0f       	add	r24, r30
    14c8:	9f 1f       	adc	r25, r31
    14ca:	08 95       	ret

000014cc <strnlen>:
    14cc:	fc 01       	movw	r30, r24
    14ce:	61 50       	subi	r22, 0x01	; 1
    14d0:	70 40       	sbci	r23, 0x00	; 0
    14d2:	01 90       	ld	r0, Z+
    14d4:	01 10       	cpse	r0, r1
    14d6:	d8 f7       	brcc	.-10     	; 0x14ce <strnlen+0x2>
    14d8:	80 95       	com	r24
    14da:	90 95       	com	r25
    14dc:	8e 0f       	add	r24, r30
    14de:	9f 1f       	adc	r25, r31
    14e0:	08 95       	ret

000014e2 <fputc>:
    14e2:	0f 93       	push	r16
    14e4:	1f 93       	push	r17
    14e6:	cf 93       	push	r28
    14e8:	df 93       	push	r29
    14ea:	fb 01       	movw	r30, r22
    14ec:	23 81       	ldd	r18, Z+3	; 0x03
    14ee:	21 fd       	sbrc	r18, 1
    14f0:	03 c0       	rjmp	.+6      	; 0x14f8 <fputc+0x16>
    14f2:	8f ef       	ldi	r24, 0xFF	; 255
    14f4:	9f ef       	ldi	r25, 0xFF	; 255
    14f6:	2c c0       	rjmp	.+88     	; 0x1550 <fputc+0x6e>
    14f8:	22 ff       	sbrs	r18, 2
    14fa:	16 c0       	rjmp	.+44     	; 0x1528 <fputc+0x46>
    14fc:	46 81       	ldd	r20, Z+6	; 0x06
    14fe:	57 81       	ldd	r21, Z+7	; 0x07
    1500:	24 81       	ldd	r18, Z+4	; 0x04
    1502:	35 81       	ldd	r19, Z+5	; 0x05
    1504:	42 17       	cp	r20, r18
    1506:	53 07       	cpc	r21, r19
    1508:	44 f4       	brge	.+16     	; 0x151a <fputc+0x38>
    150a:	a0 81       	ld	r26, Z
    150c:	b1 81       	ldd	r27, Z+1	; 0x01
    150e:	9d 01       	movw	r18, r26
    1510:	2f 5f       	subi	r18, 0xFF	; 255
    1512:	3f 4f       	sbci	r19, 0xFF	; 255
    1514:	31 83       	std	Z+1, r19	; 0x01
    1516:	20 83       	st	Z, r18
    1518:	8c 93       	st	X, r24
    151a:	26 81       	ldd	r18, Z+6	; 0x06
    151c:	37 81       	ldd	r19, Z+7	; 0x07
    151e:	2f 5f       	subi	r18, 0xFF	; 255
    1520:	3f 4f       	sbci	r19, 0xFF	; 255
    1522:	37 83       	std	Z+7, r19	; 0x07
    1524:	26 83       	std	Z+6, r18	; 0x06
    1526:	14 c0       	rjmp	.+40     	; 0x1550 <fputc+0x6e>
    1528:	8b 01       	movw	r16, r22
    152a:	ec 01       	movw	r28, r24
    152c:	fb 01       	movw	r30, r22
    152e:	00 84       	ldd	r0, Z+8	; 0x08
    1530:	f1 85       	ldd	r31, Z+9	; 0x09
    1532:	e0 2d       	mov	r30, r0
    1534:	09 95       	icall
    1536:	89 2b       	or	r24, r25
    1538:	e1 f6       	brne	.-72     	; 0x14f2 <fputc+0x10>
    153a:	d8 01       	movw	r26, r16
    153c:	16 96       	adiw	r26, 0x06	; 6
    153e:	8d 91       	ld	r24, X+
    1540:	9c 91       	ld	r25, X
    1542:	17 97       	sbiw	r26, 0x07	; 7
    1544:	01 96       	adiw	r24, 0x01	; 1
    1546:	17 96       	adiw	r26, 0x07	; 7
    1548:	9c 93       	st	X, r25
    154a:	8e 93       	st	-X, r24
    154c:	16 97       	sbiw	r26, 0x06	; 6
    154e:	ce 01       	movw	r24, r28
    1550:	df 91       	pop	r29
    1552:	cf 91       	pop	r28
    1554:	1f 91       	pop	r17
    1556:	0f 91       	pop	r16
    1558:	08 95       	ret

0000155a <__ultoa_invert>:
    155a:	fa 01       	movw	r30, r20
    155c:	aa 27       	eor	r26, r26
    155e:	28 30       	cpi	r18, 0x08	; 8
    1560:	51 f1       	breq	.+84     	; 0x15b6 <__ultoa_invert+0x5c>
    1562:	20 31       	cpi	r18, 0x10	; 16
    1564:	81 f1       	breq	.+96     	; 0x15c6 <__ultoa_invert+0x6c>
    1566:	e8 94       	clt
    1568:	6f 93       	push	r22
    156a:	6e 7f       	andi	r22, 0xFE	; 254
    156c:	6e 5f       	subi	r22, 0xFE	; 254
    156e:	7f 4f       	sbci	r23, 0xFF	; 255
    1570:	8f 4f       	sbci	r24, 0xFF	; 255
    1572:	9f 4f       	sbci	r25, 0xFF	; 255
    1574:	af 4f       	sbci	r26, 0xFF	; 255
    1576:	b1 e0       	ldi	r27, 0x01	; 1
    1578:	3e d0       	rcall	.+124    	; 0x15f6 <__ultoa_invert+0x9c>
    157a:	b4 e0       	ldi	r27, 0x04	; 4
    157c:	3c d0       	rcall	.+120    	; 0x15f6 <__ultoa_invert+0x9c>
    157e:	67 0f       	add	r22, r23
    1580:	78 1f       	adc	r23, r24
    1582:	89 1f       	adc	r24, r25
    1584:	9a 1f       	adc	r25, r26
    1586:	a1 1d       	adc	r26, r1
    1588:	68 0f       	add	r22, r24
    158a:	79 1f       	adc	r23, r25
    158c:	8a 1f       	adc	r24, r26
    158e:	91 1d       	adc	r25, r1
    1590:	a1 1d       	adc	r26, r1
    1592:	6a 0f       	add	r22, r26
    1594:	71 1d       	adc	r23, r1
    1596:	81 1d       	adc	r24, r1
    1598:	91 1d       	adc	r25, r1
    159a:	a1 1d       	adc	r26, r1
    159c:	20 d0       	rcall	.+64     	; 0x15de <__ultoa_invert+0x84>
    159e:	09 f4       	brne	.+2      	; 0x15a2 <__ultoa_invert+0x48>
    15a0:	68 94       	set
    15a2:	3f 91       	pop	r19
    15a4:	2a e0       	ldi	r18, 0x0A	; 10
    15a6:	26 9f       	mul	r18, r22
    15a8:	11 24       	eor	r1, r1
    15aa:	30 19       	sub	r19, r0
    15ac:	30 5d       	subi	r19, 0xD0	; 208
    15ae:	31 93       	st	Z+, r19
    15b0:	de f6       	brtc	.-74     	; 0x1568 <__ultoa_invert+0xe>
    15b2:	cf 01       	movw	r24, r30
    15b4:	08 95       	ret
    15b6:	46 2f       	mov	r20, r22
    15b8:	47 70       	andi	r20, 0x07	; 7
    15ba:	40 5d       	subi	r20, 0xD0	; 208
    15bc:	41 93       	st	Z+, r20
    15be:	b3 e0       	ldi	r27, 0x03	; 3
    15c0:	0f d0       	rcall	.+30     	; 0x15e0 <__ultoa_invert+0x86>
    15c2:	c9 f7       	brne	.-14     	; 0x15b6 <__ultoa_invert+0x5c>
    15c4:	f6 cf       	rjmp	.-20     	; 0x15b2 <__ultoa_invert+0x58>
    15c6:	46 2f       	mov	r20, r22
    15c8:	4f 70       	andi	r20, 0x0F	; 15
    15ca:	40 5d       	subi	r20, 0xD0	; 208
    15cc:	4a 33       	cpi	r20, 0x3A	; 58
    15ce:	18 f0       	brcs	.+6      	; 0x15d6 <__ultoa_invert+0x7c>
    15d0:	49 5d       	subi	r20, 0xD9	; 217
    15d2:	31 fd       	sbrc	r19, 1
    15d4:	40 52       	subi	r20, 0x20	; 32
    15d6:	41 93       	st	Z+, r20
    15d8:	02 d0       	rcall	.+4      	; 0x15de <__ultoa_invert+0x84>
    15da:	a9 f7       	brne	.-22     	; 0x15c6 <__ultoa_invert+0x6c>
    15dc:	ea cf       	rjmp	.-44     	; 0x15b2 <__ultoa_invert+0x58>
    15de:	b4 e0       	ldi	r27, 0x04	; 4
    15e0:	a6 95       	lsr	r26
    15e2:	97 95       	ror	r25
    15e4:	87 95       	ror	r24
    15e6:	77 95       	ror	r23
    15e8:	67 95       	ror	r22
    15ea:	ba 95       	dec	r27
    15ec:	c9 f7       	brne	.-14     	; 0x15e0 <__ultoa_invert+0x86>
    15ee:	00 97       	sbiw	r24, 0x00	; 0
    15f0:	61 05       	cpc	r22, r1
    15f2:	71 05       	cpc	r23, r1
    15f4:	08 95       	ret
    15f6:	9b 01       	movw	r18, r22
    15f8:	ac 01       	movw	r20, r24
    15fa:	0a 2e       	mov	r0, r26
    15fc:	06 94       	lsr	r0
    15fe:	57 95       	ror	r21
    1600:	47 95       	ror	r20
    1602:	37 95       	ror	r19
    1604:	27 95       	ror	r18
    1606:	ba 95       	dec	r27
    1608:	c9 f7       	brne	.-14     	; 0x15fc <__ultoa_invert+0xa2>
    160a:	62 0f       	add	r22, r18
    160c:	73 1f       	adc	r23, r19
    160e:	84 1f       	adc	r24, r20
    1610:	95 1f       	adc	r25, r21
    1612:	a0 1d       	adc	r26, r0
    1614:	08 95       	ret

00001616 <__prologue_saves__>:
    1616:	2f 92       	push	r2
    1618:	3f 92       	push	r3
    161a:	4f 92       	push	r4
    161c:	5f 92       	push	r5
    161e:	6f 92       	push	r6
    1620:	7f 92       	push	r7
    1622:	8f 92       	push	r8
    1624:	9f 92       	push	r9
    1626:	af 92       	push	r10
    1628:	bf 92       	push	r11
    162a:	cf 92       	push	r12
    162c:	df 92       	push	r13
    162e:	ef 92       	push	r14
    1630:	ff 92       	push	r15
    1632:	0f 93       	push	r16
    1634:	1f 93       	push	r17
    1636:	cf 93       	push	r28
    1638:	df 93       	push	r29
    163a:	cd b7       	in	r28, 0x3d	; 61
    163c:	de b7       	in	r29, 0x3e	; 62
    163e:	ca 1b       	sub	r28, r26
    1640:	db 0b       	sbc	r29, r27
    1642:	0f b6       	in	r0, 0x3f	; 63
    1644:	f8 94       	cli
    1646:	de bf       	out	0x3e, r29	; 62
    1648:	0f be       	out	0x3f, r0	; 63
    164a:	cd bf       	out	0x3d, r28	; 61
    164c:	09 94       	ijmp

0000164e <__epilogue_restores__>:
    164e:	2a 88       	ldd	r2, Y+18	; 0x12
    1650:	39 88       	ldd	r3, Y+17	; 0x11
    1652:	48 88       	ldd	r4, Y+16	; 0x10
    1654:	5f 84       	ldd	r5, Y+15	; 0x0f
    1656:	6e 84       	ldd	r6, Y+14	; 0x0e
    1658:	7d 84       	ldd	r7, Y+13	; 0x0d
    165a:	8c 84       	ldd	r8, Y+12	; 0x0c
    165c:	9b 84       	ldd	r9, Y+11	; 0x0b
    165e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1660:	b9 84       	ldd	r11, Y+9	; 0x09
    1662:	c8 84       	ldd	r12, Y+8	; 0x08
    1664:	df 80       	ldd	r13, Y+7	; 0x07
    1666:	ee 80       	ldd	r14, Y+6	; 0x06
    1668:	fd 80       	ldd	r15, Y+5	; 0x05
    166a:	0c 81       	ldd	r16, Y+4	; 0x04
    166c:	1b 81       	ldd	r17, Y+3	; 0x03
    166e:	aa 81       	ldd	r26, Y+2	; 0x02
    1670:	b9 81       	ldd	r27, Y+1	; 0x01
    1672:	ce 0f       	add	r28, r30
    1674:	d1 1d       	adc	r29, r1
    1676:	0f b6       	in	r0, 0x3f	; 63
    1678:	f8 94       	cli
    167a:	de bf       	out	0x3e, r29	; 62
    167c:	0f be       	out	0x3f, r0	; 63
    167e:	cd bf       	out	0x3d, r28	; 61
    1680:	ed 01       	movw	r28, r26
    1682:	08 95       	ret

00001684 <_exit>:
    1684:	f8 94       	cli

00001686 <__stop_program>:
    1686:	ff cf       	rjmp	.-2      	; 0x1686 <__stop_program>
