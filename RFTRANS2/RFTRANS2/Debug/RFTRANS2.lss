
RFTRANS2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  00001008  0000109c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001008  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001a  0080010a  0080010a  000010a6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000010a6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000010d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002e8  00000000  00000000  00001118  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000059cc  00000000  00000000  00001400  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f92  00000000  00000000  00006dcc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001a8c  00000000  00000000  00007d5e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000a44  00000000  00000000  000097ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000013a1  00000000  00000000  0000a230  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003eae  00000000  00000000  0000b5d1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002d8  00000000  00000000  0000f47f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 35 00 	jmp	0x6a	; 0x6a <__ctors_end>
       4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
       8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
       c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      38:	0c 94 db 00 	jmp	0x1b6	; 0x1b6 <__vector_14>
      3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
      64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

00000068 <__ctors_start>:
      68:	22 01       	movw	r4, r4

0000006a <__ctors_end>:
      6a:	11 24       	eor	r1, r1
      6c:	1f be       	out	0x3f, r1	; 63
      6e:	cf ef       	ldi	r28, 0xFF	; 255
      70:	d8 e0       	ldi	r29, 0x08	; 8
      72:	de bf       	out	0x3e, r29	; 62
      74:	cd bf       	out	0x3d, r28	; 61

00000076 <__do_copy_data>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a0 e0       	ldi	r26, 0x00	; 0
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	e8 e0       	ldi	r30, 0x08	; 8
      7e:	f0 e1       	ldi	r31, 0x10	; 16
      80:	02 c0       	rjmp	.+4      	; 0x86 <__do_copy_data+0x10>
      82:	05 90       	lpm	r0, Z+
      84:	0d 92       	st	X+, r0
      86:	aa 30       	cpi	r26, 0x0A	; 10
      88:	b1 07       	cpc	r27, r17
      8a:	d9 f7       	brne	.-10     	; 0x82 <__do_copy_data+0xc>

0000008c <__do_clear_bss>:
      8c:	21 e0       	ldi	r18, 0x01	; 1
      8e:	aa e0       	ldi	r26, 0x0A	; 10
      90:	b1 e0       	ldi	r27, 0x01	; 1
      92:	01 c0       	rjmp	.+2      	; 0x96 <.do_clear_bss_start>

00000094 <.do_clear_bss_loop>:
      94:	1d 92       	st	X+, r1

00000096 <.do_clear_bss_start>:
      96:	a4 32       	cpi	r26, 0x24	; 36
      98:	b2 07       	cpc	r27, r18
      9a:	e1 f7       	brne	.-8      	; 0x94 <.do_clear_bss_loop>

0000009c <__do_global_ctors>:
      9c:	10 e0       	ldi	r17, 0x00	; 0
      9e:	c5 e3       	ldi	r28, 0x35	; 53
      a0:	d0 e0       	ldi	r29, 0x00	; 0
      a2:	04 c0       	rjmp	.+8      	; 0xac <__do_global_ctors+0x10>
      a4:	21 97       	sbiw	r28, 0x01	; 1
      a6:	fe 01       	movw	r30, r28
      a8:	0e 94 fc 07 	call	0xff8	; 0xff8 <__tablejump2__>
      ac:	c4 33       	cpi	r28, 0x34	; 52
      ae:	d1 07       	cpc	r29, r17
      b0:	c9 f7       	brne	.-14     	; 0xa4 <__do_global_ctors+0x8>
      b2:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <main>
      b6:	0c 94 02 08 	jmp	0x1004	; 0x1004 <_exit>

000000ba <__bad_interrupt>:
      ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <UART_Init>:
	 // turn on CTC mode
	 TCCR0A |= (1 << WGM01);
	 // Set CS01 and CS00 bits for 64 prescaler
	 TCCR0B |= (1 << CS01) | (1 << CS00);
	 // enable timer compare interrupt
	 TIMSK0 |= (1 << OCIE0A);
      be:	e1 ec       	ldi	r30, 0xC1	; 193
      c0:	f0 e0       	ldi	r31, 0x00	; 0
      c2:	10 82       	st	Z, r1
      c4:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
      c8:	a2 ec       	ldi	r26, 0xC2	; 194
      ca:	b0 e0       	ldi	r27, 0x00	; 0
      cc:	8c 91       	ld	r24, X
      ce:	8e 60       	ori	r24, 0x0E	; 14
      d0:	8c 93       	st	X, r24
      d2:	83 e3       	ldi	r24, 0x33	; 51
      d4:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
      d8:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
      dc:	80 81       	ld	r24, Z
      de:	88 61       	ori	r24, 0x18	; 24
      e0:	80 83       	st	Z, r24
      e2:	08 95       	ret

000000e4 <Set_pin>:
      e4:	61 30       	cpi	r22, 0x01	; 1
      e6:	71 05       	cpc	r23, r1
      e8:	f1 f4       	brne	.+60     	; 0x126 <Set_pin+0x42>
      ea:	88 30       	cpi	r24, 0x08	; 8
      ec:	91 05       	cpc	r25, r1
      ee:	70 f0       	brcs	.+28     	; 0x10c <Set_pin+0x28>
      f0:	44 b1       	in	r20, 0x04	; 4
      f2:	08 97       	sbiw	r24, 0x08	; 8
      f4:	21 e0       	ldi	r18, 0x01	; 1
      f6:	30 e0       	ldi	r19, 0x00	; 0
      f8:	b9 01       	movw	r22, r18
      fa:	02 c0       	rjmp	.+4      	; 0x100 <Set_pin+0x1c>
      fc:	66 0f       	add	r22, r22
      fe:	77 1f       	adc	r23, r23
     100:	8a 95       	dec	r24
     102:	e2 f7       	brpl	.-8      	; 0xfc <Set_pin+0x18>
     104:	cb 01       	movw	r24, r22
     106:	84 2b       	or	r24, r20
     108:	84 b9       	out	0x04, r24	; 4
     10a:	08 95       	ret
     10c:	4a b1       	in	r20, 0x0a	; 10
     10e:	21 e0       	ldi	r18, 0x01	; 1
     110:	30 e0       	ldi	r19, 0x00	; 0
     112:	b9 01       	movw	r22, r18
     114:	02 c0       	rjmp	.+4      	; 0x11a <Set_pin+0x36>
     116:	66 0f       	add	r22, r22
     118:	77 1f       	adc	r23, r23
     11a:	8a 95       	dec	r24
     11c:	e2 f7       	brpl	.-8      	; 0x116 <Set_pin+0x32>
     11e:	cb 01       	movw	r24, r22
     120:	84 2b       	or	r24, r20
     122:	8a b9       	out	0x0a, r24	; 10
     124:	08 95       	ret
     126:	08 97       	sbiw	r24, 0x08	; 8
     128:	18 f0       	brcs	.+6      	; 0x130 <Set_pin+0x4c>
     12a:	84 b1       	in	r24, 0x04	; 4
     12c:	84 b9       	out	0x04, r24	; 4
     12e:	08 95       	ret
     130:	8a b1       	in	r24, 0x0a	; 10
     132:	8a b9       	out	0x0a, r24	; 10
     134:	08 95       	ret

00000136 <Write_Digital>:
     136:	66 23       	and	r22, r22
     138:	f1 f0       	breq	.+60     	; 0x176 <Write_Digital+0x40>
     13a:	88 30       	cpi	r24, 0x08	; 8
     13c:	91 05       	cpc	r25, r1
     13e:	70 f0       	brcs	.+28     	; 0x15c <Write_Digital+0x26>
     140:	45 b1       	in	r20, 0x05	; 5
     142:	08 97       	sbiw	r24, 0x08	; 8
     144:	21 e0       	ldi	r18, 0x01	; 1
     146:	30 e0       	ldi	r19, 0x00	; 0
     148:	b9 01       	movw	r22, r18
     14a:	02 c0       	rjmp	.+4      	; 0x150 <Write_Digital+0x1a>
     14c:	66 0f       	add	r22, r22
     14e:	77 1f       	adc	r23, r23
     150:	8a 95       	dec	r24
     152:	e2 f7       	brpl	.-8      	; 0x14c <Write_Digital+0x16>
     154:	cb 01       	movw	r24, r22
     156:	84 2b       	or	r24, r20
     158:	85 b9       	out	0x05, r24	; 5
     15a:	08 95       	ret
     15c:	4b b1       	in	r20, 0x0b	; 11
     15e:	21 e0       	ldi	r18, 0x01	; 1
     160:	30 e0       	ldi	r19, 0x00	; 0
     162:	b9 01       	movw	r22, r18
     164:	02 c0       	rjmp	.+4      	; 0x16a <Write_Digital+0x34>
     166:	66 0f       	add	r22, r22
     168:	77 1f       	adc	r23, r23
     16a:	8a 95       	dec	r24
     16c:	e2 f7       	brpl	.-8      	; 0x166 <Write_Digital+0x30>
     16e:	cb 01       	movw	r24, r22
     170:	84 2b       	or	r24, r20
     172:	8b b9       	out	0x0b, r24	; 11
     174:	08 95       	ret
     176:	88 30       	cpi	r24, 0x08	; 8
     178:	91 05       	cpc	r25, r1
     17a:	78 f0       	brcs	.+30     	; 0x19a <Write_Digital+0x64>
     17c:	45 b1       	in	r20, 0x05	; 5
     17e:	08 97       	sbiw	r24, 0x08	; 8
     180:	21 e0       	ldi	r18, 0x01	; 1
     182:	30 e0       	ldi	r19, 0x00	; 0
     184:	b9 01       	movw	r22, r18
     186:	02 c0       	rjmp	.+4      	; 0x18c <Write_Digital+0x56>
     188:	66 0f       	add	r22, r22
     18a:	77 1f       	adc	r23, r23
     18c:	8a 95       	dec	r24
     18e:	e2 f7       	brpl	.-8      	; 0x188 <Write_Digital+0x52>
     190:	cb 01       	movw	r24, r22
     192:	80 95       	com	r24
     194:	84 23       	and	r24, r20
     196:	85 b9       	out	0x05, r24	; 5
     198:	08 95       	ret
     19a:	4b b1       	in	r20, 0x0b	; 11
     19c:	21 e0       	ldi	r18, 0x01	; 1
     19e:	30 e0       	ldi	r19, 0x00	; 0
     1a0:	b9 01       	movw	r22, r18
     1a2:	02 c0       	rjmp	.+4      	; 0x1a8 <Write_Digital+0x72>
     1a4:	66 0f       	add	r22, r22
     1a6:	77 1f       	adc	r23, r23
     1a8:	8a 95       	dec	r24
     1aa:	e2 f7       	brpl	.-8      	; 0x1a4 <Write_Digital+0x6e>
     1ac:	cb 01       	movw	r24, r22
     1ae:	80 95       	com	r24
     1b0:	84 23       	and	r24, r20
     1b2:	8b b9       	out	0x0b, r24	; 11
     1b4:	08 95       	ret

000001b6 <__vector_14>:
}
// ISR for timer 0
ISR(TIMER0_COMPA_vect)
{
     1b6:	1f 92       	push	r1
     1b8:	0f 92       	push	r0
     1ba:	0f b6       	in	r0, 0x3f	; 63
     1bc:	0f 92       	push	r0
     1be:	11 24       	eor	r1, r1
     1c0:	8f 93       	push	r24
     1c2:	9f 93       	push	r25
	cnt++;
     1c4:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
     1c8:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
     1cc:	01 96       	adiw	r24, 0x01	; 1
     1ce:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__data_end+0x1>
     1d2:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
}
     1d6:	9f 91       	pop	r25
     1d8:	8f 91       	pop	r24
     1da:	0f 90       	pop	r0
     1dc:	0f be       	out	0x3f, r0	; 63
     1de:	0f 90       	pop	r0
     1e0:	1f 90       	pop	r1
     1e2:	18 95       	reti

000001e4 <main>:
unsigned char p=0;// variable for power level
char data[10] = {"EYSIP2018"};
int main(void)
{ 
	unsigned char status1;//to read a NRF24L01 particular register using SPI
	UART_Init(9600);	 
     1e4:	60 e8       	ldi	r22, 0x80	; 128
     1e6:	75 e2       	ldi	r23, 0x25	; 37
     1e8:	80 e0       	ldi	r24, 0x00	; 0
     1ea:	90 e0       	ldi	r25, 0x00	; 0
     1ec:	0e 94 5f 00 	call	0xbe	; 0xbe <UART_Init>
	radio.begin();	 
     1f0:	8c e0       	ldi	r24, 0x0C	; 12
     1f2:	91 e0       	ldi	r25, 0x01	; 1
     1f4:	0e 94 37 05 	call	0xa6e	; 0xa6e <_ZN4RF245beginEv>
	radio.setDataRate(RF24_250KBPS);
     1f8:	62 e0       	ldi	r22, 0x02	; 2
     1fa:	8c e0       	ldi	r24, 0x0C	; 12
     1fc:	91 e0       	ldi	r25, 0x01	; 1
     1fe:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <_ZN4RF2411setDataRateE15rf24_datarate_e>
	radio.openWritingPipe(pipes[2]);// transmitter address for pipe 2
     202:	03 ee       	ldi	r16, 0xE3	; 227
     204:	10 ef       	ldi	r17, 0xF0	; 240
     206:	20 ef       	ldi	r18, 0xF0	; 240
     208:	30 ef       	ldi	r19, 0xF0	; 240
     20a:	40 ef       	ldi	r20, 0xF0	; 240
     20c:	50 e0       	ldi	r21, 0x00	; 0
     20e:	60 e0       	ldi	r22, 0x00	; 0
     210:	70 e0       	ldi	r23, 0x00	; 0
     212:	8c e0       	ldi	r24, 0x0C	; 12
     214:	91 e0       	ldi	r25, 0x01	; 1
     216:	0e 94 a0 04 	call	0x940	; 0x940 <_ZN4RF2415openWritingPipeEy>
	//radio.setRetries(8,15);
	radio.stopListening();//make radio  transmitter
     21a:	8c e0       	ldi	r24, 0x0C	; 12
     21c:	91 e0       	ldi	r25, 0x01	; 1
     21e:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <_ZN4RF2413stopListeningEv>
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
     222:	c8 ec       	ldi	r28, 0xC8	; 200
     224:	d0 e0       	ldi	r29, 0x00	; 0
	while (1)
	{
	 // code for transmitter
		 radio.write(data, sizeof(data));
     226:	4a e0       	ldi	r20, 0x0A	; 10
     228:	60 e0       	ldi	r22, 0x00	; 0
     22a:	71 e0       	ldi	r23, 0x01	; 1
     22c:	8c e0       	ldi	r24, 0x0C	; 12
     22e:	91 e0       	ldi	r25, 0x01	; 1
     230:	0e 94 9c 04 	call	0x938	; 0x938 <_ZN4RF245writeEPKvh>
     234:	8f ef       	ldi	r24, 0xFF	; 255
     236:	9f ef       	ldi	r25, 0xFF	; 255
     238:	fe 01       	movw	r30, r28
     23a:	31 97       	sbiw	r30, 0x01	; 1
     23c:	f1 f7       	brne	.-4      	; 0x23a <main+0x56>
     23e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     240:	91 f3       	breq	.-28     	; 0x226 <main+0x42>
     242:	fa cf       	rjmp	.-12     	; 0x238 <main+0x54>

00000244 <_GLOBAL__sub_I_radio>:
 * Created: 19-06-2018 13:08:29
 * Author : sachin mahadevjadhav
 */ 
#include <avr/io.h>
#include "RF24.h"
RF24 radio(9, 10); // CE, CSN object for nRF24L01+
     244:	4a e0       	ldi	r20, 0x0A	; 10
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	69 e0       	ldi	r22, 0x09	; 9
     24a:	70 e0       	ldi	r23, 0x00	; 0
     24c:	8c e0       	ldi	r24, 0x0C	; 12
     24e:	91 e0       	ldi	r25, 0x01	; 1
     250:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <_ZN4RF24C1Ejj>
     254:	08 95       	ret

00000256 <_ZN4RF243csnEb>:

uint8_t RF24::getPALevel(void)
{

  return (read_register(RF_SETUP) & (_BV(RF_PWR_LOW) | _BV(RF_PWR_HIGH))) >> 1 ;
}
     256:	4f 92       	push	r4
     258:	5f 92       	push	r5
     25a:	6f 92       	push	r6
     25c:	7f 92       	push	r7
     25e:	8f 92       	push	r8
     260:	9f 92       	push	r9
     262:	af 92       	push	r10
     264:	bf 92       	push	r11
     266:	cf 92       	push	r12
     268:	df 92       	push	r13
     26a:	ef 92       	push	r14
     26c:	ff 92       	push	r15
     26e:	1f 93       	push	r17
     270:	cf 93       	push	r28
     272:	df 93       	push	r29
     274:	ec 01       	movw	r28, r24
     276:	8a 81       	ldd	r24, Y+2	; 0x02
     278:	9b 81       	ldd	r25, Y+3	; 0x03
     27a:	0e 94 9b 00 	call	0x136	; 0x136 <Write_Digital>
     27e:	6c 89       	ldd	r22, Y+20	; 0x14
     280:	7d 89       	ldd	r23, Y+21	; 0x15
     282:	8e 89       	ldd	r24, Y+22	; 0x16
     284:	9f 89       	ldd	r25, Y+23	; 0x17
     286:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <__floatunsisf>
     28a:	6b 01       	movw	r12, r22
     28c:	7c 01       	movw	r14, r24
     28e:	2b ea       	ldi	r18, 0xAB	; 171
     290:	3a ea       	ldi	r19, 0xAA	; 170
     292:	4a e2       	ldi	r20, 0x2A	; 42
     294:	50 e4       	ldi	r21, 0x40	; 64
     296:	0e 94 8f 07 	call	0xf1e	; 0xf1e <__mulsf3>
     29a:	4b 01       	movw	r8, r22
     29c:	5c 01       	movw	r10, r24
     29e:	20 e0       	ldi	r18, 0x00	; 0
     2a0:	30 e0       	ldi	r19, 0x00	; 0
     2a2:	40 e8       	ldi	r20, 0x80	; 128
     2a4:	5f e3       	ldi	r21, 0x3F	; 63
     2a6:	0e 94 32 06 	call	0xc64	; 0xc64 <__cmpsf2>
     2aa:	88 23       	and	r24, r24
     2ac:	0c f4       	brge	.+2      	; 0x2b0 <_ZN4RF243csnEb+0x5a>
     2ae:	6e c0       	rjmp	.+220    	; 0x38c <_ZN4RF243csnEb+0x136>
     2b0:	a7 01       	movw	r20, r14
     2b2:	96 01       	movw	r18, r12
     2b4:	c7 01       	movw	r24, r14
     2b6:	b6 01       	movw	r22, r12
     2b8:	0e 94 c6 05 	call	0xb8c	; 0xb8c <__addsf3>
     2bc:	2b 01       	movw	r4, r22
     2be:	3c 01       	movw	r6, r24
     2c0:	20 e0       	ldi	r18, 0x00	; 0
     2c2:	3f ef       	ldi	r19, 0xFF	; 255
     2c4:	4f e7       	ldi	r20, 0x7F	; 127
     2c6:	57 e4       	ldi	r21, 0x47	; 71
     2c8:	0e 94 8a 07 	call	0xf14	; 0xf14 <__gesf2>
     2cc:	18 16       	cp	r1, r24
     2ce:	0c f0       	brlt	.+2      	; 0x2d2 <_ZN4RF243csnEb+0x7c>
     2d0:	45 c0       	rjmp	.+138    	; 0x35c <_ZN4RF243csnEb+0x106>
     2d2:	20 e0       	ldi	r18, 0x00	; 0
     2d4:	30 e0       	ldi	r19, 0x00	; 0
     2d6:	4a e7       	ldi	r20, 0x7A	; 122
     2d8:	54 e4       	ldi	r21, 0x44	; 68
     2da:	c7 01       	movw	r24, r14
     2dc:	b6 01       	movw	r22, r12
     2de:	0e 94 37 06 	call	0xc6e	; 0xc6e <__divsf3>
     2e2:	4b 01       	movw	r8, r22
     2e4:	5c 01       	movw	r10, r24
     2e6:	20 e0       	ldi	r18, 0x00	; 0
     2e8:	30 e0       	ldi	r19, 0x00	; 0
     2ea:	4a ef       	ldi	r20, 0xFA	; 250
     2ec:	54 e4       	ldi	r21, 0x44	; 68
     2ee:	0e 94 8f 07 	call	0xf1e	; 0xf1e <__mulsf3>
     2f2:	6b 01       	movw	r12, r22
     2f4:	7c 01       	movw	r14, r24
     2f6:	20 e0       	ldi	r18, 0x00	; 0
     2f8:	30 e0       	ldi	r19, 0x00	; 0
     2fa:	40 e8       	ldi	r20, 0x80	; 128
     2fc:	5f e3       	ldi	r21, 0x3F	; 63
     2fe:	0e 94 32 06 	call	0xc64	; 0xc64 <__cmpsf2>
     302:	88 23       	and	r24, r24
     304:	2c f1       	brlt	.+74     	; 0x350 <_ZN4RF243csnEb+0xfa>
     306:	20 e0       	ldi	r18, 0x00	; 0
     308:	3f ef       	ldi	r19, 0xFF	; 255
     30a:	4f e7       	ldi	r20, 0x7F	; 127
     30c:	57 e4       	ldi	r21, 0x47	; 71
     30e:	c7 01       	movw	r24, r14
     310:	b6 01       	movw	r22, r12
     312:	0e 94 8a 07 	call	0xf14	; 0xf14 <__gesf2>
     316:	18 16       	cp	r1, r24
     318:	b4 f4       	brge	.+44     	; 0x346 <_ZN4RF243csnEb+0xf0>
     31a:	20 e0       	ldi	r18, 0x00	; 0
     31c:	30 e0       	ldi	r19, 0x00	; 0
     31e:	40 e2       	ldi	r20, 0x20	; 32
     320:	51 e4       	ldi	r21, 0x41	; 65
     322:	c5 01       	movw	r24, r10
     324:	b4 01       	movw	r22, r8
     326:	0e 94 8f 07 	call	0xf1e	; 0xf1e <__mulsf3>
     32a:	0e 94 a9 06 	call	0xd52	; 0xd52 <__fixunssfsi>
     32e:	61 15       	cp	r22, r1
     330:	71 05       	cpc	r23, r1
     332:	69 f1       	breq	.+90     	; 0x38e <_ZN4RF243csnEb+0x138>
     334:	28 ec       	ldi	r18, 0xC8	; 200
     336:	30 e0       	ldi	r19, 0x00	; 0
     338:	c9 01       	movw	r24, r18
     33a:	01 97       	sbiw	r24, 0x01	; 1
     33c:	f1 f7       	brne	.-4      	; 0x33a <_ZN4RF243csnEb+0xe4>
     33e:	61 50       	subi	r22, 0x01	; 1
     340:	71 09       	sbc	r23, r1
     342:	d1 f7       	brne	.-12     	; 0x338 <_ZN4RF243csnEb+0xe2>
     344:	24 c0       	rjmp	.+72     	; 0x38e <_ZN4RF243csnEb+0x138>
     346:	c7 01       	movw	r24, r14
     348:	b6 01       	movw	r22, r12
     34a:	0e 94 a9 06 	call	0xd52	; 0xd52 <__fixunssfsi>
     34e:	02 c0       	rjmp	.+4      	; 0x354 <_ZN4RF243csnEb+0xfe>
     350:	61 e0       	ldi	r22, 0x01	; 1
     352:	70 e0       	ldi	r23, 0x00	; 0
     354:	cb 01       	movw	r24, r22
     356:	01 97       	sbiw	r24, 0x01	; 1
     358:	f1 f7       	brne	.-4      	; 0x356 <_ZN4RF243csnEb+0x100>
     35a:	19 c0       	rjmp	.+50     	; 0x38e <_ZN4RF243csnEb+0x138>
     35c:	20 e0       	ldi	r18, 0x00	; 0
     35e:	30 e0       	ldi	r19, 0x00	; 0
     360:	4f e7       	ldi	r20, 0x7F	; 127
     362:	53 e4       	ldi	r21, 0x43	; 67
     364:	c5 01       	movw	r24, r10
     366:	b4 01       	movw	r22, r8
     368:	0e 94 8a 07 	call	0xf14	; 0xf14 <__gesf2>
     36c:	18 16       	cp	r1, r24
     36e:	44 f4       	brge	.+16     	; 0x380 <_ZN4RF243csnEb+0x12a>
     370:	c3 01       	movw	r24, r6
     372:	b2 01       	movw	r22, r4
     374:	0e 94 a9 06 	call	0xd52	; 0xd52 <__fixunssfsi>
     378:	cb 01       	movw	r24, r22
     37a:	01 97       	sbiw	r24, 0x01	; 1
     37c:	f1 f7       	brne	.-4      	; 0x37a <_ZN4RF243csnEb+0x124>
     37e:	0a c0       	rjmp	.+20     	; 0x394 <_ZN4RF243csnEb+0x13e>
     380:	c5 01       	movw	r24, r10
     382:	b4 01       	movw	r22, r8
     384:	0e 94 a9 06 	call	0xd52	; 0xd52 <__fixunssfsi>
     388:	16 2f       	mov	r17, r22
     38a:	01 c0       	rjmp	.+2      	; 0x38e <_ZN4RF243csnEb+0x138>
     38c:	11 e0       	ldi	r17, 0x01	; 1
     38e:	61 2f       	mov	r22, r17
     390:	6a 95       	dec	r22
     392:	f1 f7       	brne	.-4      	; 0x390 <_ZN4RF243csnEb+0x13a>
     394:	df 91       	pop	r29
     396:	cf 91       	pop	r28
     398:	1f 91       	pop	r17
     39a:	ff 90       	pop	r15
     39c:	ef 90       	pop	r14
     39e:	df 90       	pop	r13
     3a0:	cf 90       	pop	r12
     3a2:	bf 90       	pop	r11
     3a4:	af 90       	pop	r10
     3a6:	9f 90       	pop	r9
     3a8:	8f 90       	pop	r8
     3aa:	7f 90       	pop	r7
     3ac:	6f 90       	pop	r6
     3ae:	5f 90       	pop	r5
     3b0:	4f 90       	pop	r4
     3b2:	08 95       	ret

000003b4 <_ZN4RF242ceEb>:
     3b4:	fc 01       	movw	r30, r24
     3b6:	80 81       	ld	r24, Z
     3b8:	91 81       	ldd	r25, Z+1	; 0x01
     3ba:	22 81       	ldd	r18, Z+2	; 0x02
     3bc:	33 81       	ldd	r19, Z+3	; 0x03
     3be:	82 17       	cp	r24, r18
     3c0:	93 07       	cpc	r25, r19
     3c2:	11 f0       	breq	.+4      	; 0x3c8 <_ZN4RF242ceEb+0x14>
     3c4:	0e 94 9b 00 	call	0x136	; 0x136 <Write_Digital>
     3c8:	84 e0       	ldi	r24, 0x04	; 4
     3ca:	91 e0       	ldi	r25, 0x01	; 1
     3cc:	01 97       	sbiw	r24, 0x01	; 1
     3ce:	f1 f7       	brne	.-4      	; 0x3cc <_ZN4RF242ceEb+0x18>
     3d0:	08 95       	ret

000003d2 <_ZN4RF2413read_registerEh>:
     3d2:	0f 93       	push	r16
     3d4:	1f 93       	push	r17
     3d6:	cf 93       	push	r28
     3d8:	8c 01       	movw	r16, r24
     3da:	c6 2f       	mov	r28, r22
     3dc:	80 e5       	ldi	r24, 0x50	; 80
     3de:	8c bd       	out	0x2c, r24	; 44
     3e0:	1d bc       	out	0x2d, r1	; 45
     3e2:	60 e0       	ldi	r22, 0x00	; 0
     3e4:	c8 01       	movw	r24, r16
     3e6:	0e 94 2b 01 	call	0x256	; 0x256 <_ZN4RF243csnEb>
     3ea:	cf 71       	andi	r28, 0x1F	; 31
     3ec:	ce bd       	out	0x2e, r28	; 46
     3ee:	00 00       	nop
     3f0:	0d b4       	in	r0, 0x2d	; 45
     3f2:	07 fe       	sbrs	r0, 7
     3f4:	fd cf       	rjmp	.-6      	; 0x3f0 <_ZN4RF2413read_registerEh+0x1e>
     3f6:	8e b5       	in	r24, 0x2e	; 46
     3f8:	8f ef       	ldi	r24, 0xFF	; 255
     3fa:	8e bd       	out	0x2e, r24	; 46
     3fc:	00 00       	nop
     3fe:	0d b4       	in	r0, 0x2d	; 45
     400:	07 fe       	sbrs	r0, 7
     402:	fd cf       	rjmp	.-6      	; 0x3fe <_ZN4RF2413read_registerEh+0x2c>
     404:	ce b5       	in	r28, 0x2e	; 46
     406:	61 e0       	ldi	r22, 0x01	; 1
     408:	c8 01       	movw	r24, r16
     40a:	0e 94 2b 01 	call	0x256	; 0x256 <_ZN4RF243csnEb>
     40e:	8c 2f       	mov	r24, r28
     410:	cf 91       	pop	r28
     412:	1f 91       	pop	r17
     414:	0f 91       	pop	r16
     416:	08 95       	ret

00000418 <_ZN4RF2414write_registerEhPKhh>:
     418:	ef 92       	push	r14
     41a:	ff 92       	push	r15
     41c:	0f 93       	push	r16
     41e:	1f 93       	push	r17
     420:	cf 93       	push	r28
     422:	df 93       	push	r29
     424:	8c 01       	movw	r16, r24
     426:	c6 2f       	mov	r28, r22
     428:	e4 2e       	mov	r14, r20
     42a:	f5 2e       	mov	r15, r21
     42c:	d2 2f       	mov	r29, r18
     42e:	80 e5       	ldi	r24, 0x50	; 80
     430:	8c bd       	out	0x2c, r24	; 44
     432:	1d bc       	out	0x2d, r1	; 45
     434:	60 e0       	ldi	r22, 0x00	; 0
     436:	c8 01       	movw	r24, r16
     438:	0e 94 2b 01 	call	0x256	; 0x256 <_ZN4RF243csnEb>
     43c:	cf 71       	andi	r28, 0x1F	; 31
     43e:	c0 62       	ori	r28, 0x20	; 32
     440:	ce bd       	out	0x2e, r28	; 46
     442:	00 00       	nop
     444:	0d b4       	in	r0, 0x2d	; 45
     446:	07 fe       	sbrs	r0, 7
     448:	fd cf       	rjmp	.-6      	; 0x444 <_ZN4RF2414write_registerEhPKhh+0x2c>
     44a:	ce b5       	in	r28, 0x2e	; 46
     44c:	8f ef       	ldi	r24, 0xFF	; 255
     44e:	8d 0f       	add	r24, r29
     450:	dd 23       	and	r29, r29
     452:	59 f0       	breq	.+22     	; 0x46a <_ZN4RF2414write_registerEhPKhh+0x52>
     454:	ee 2d       	mov	r30, r14
     456:	ff 2d       	mov	r31, r15
     458:	91 91       	ld	r25, Z+
     45a:	9e bd       	out	0x2e, r25	; 46
     45c:	00 00       	nop
     45e:	0d b4       	in	r0, 0x2d	; 45
     460:	07 fe       	sbrs	r0, 7
     462:	fd cf       	rjmp	.-6      	; 0x45e <_ZN4RF2414write_registerEhPKhh+0x46>
     464:	9e b5       	in	r25, 0x2e	; 46
     466:	81 50       	subi	r24, 0x01	; 1
     468:	b8 f7       	brcc	.-18     	; 0x458 <_ZN4RF2414write_registerEhPKhh+0x40>
     46a:	61 e0       	ldi	r22, 0x01	; 1
     46c:	c8 01       	movw	r24, r16
     46e:	0e 94 2b 01 	call	0x256	; 0x256 <_ZN4RF243csnEb>
     472:	8c 2f       	mov	r24, r28
     474:	df 91       	pop	r29
     476:	cf 91       	pop	r28
     478:	1f 91       	pop	r17
     47a:	0f 91       	pop	r16
     47c:	ff 90       	pop	r15
     47e:	ef 90       	pop	r14
     480:	08 95       	ret

00000482 <_ZN4RF2414write_registerEhh>:
     482:	0f 93       	push	r16
     484:	1f 93       	push	r17
     486:	cf 93       	push	r28
     488:	df 93       	push	r29
     48a:	8c 01       	movw	r16, r24
     48c:	c6 2f       	mov	r28, r22
     48e:	d4 2f       	mov	r29, r20
     490:	80 e5       	ldi	r24, 0x50	; 80
     492:	8c bd       	out	0x2c, r24	; 44
     494:	1d bc       	out	0x2d, r1	; 45
     496:	60 e0       	ldi	r22, 0x00	; 0
     498:	c8 01       	movw	r24, r16
     49a:	0e 94 2b 01 	call	0x256	; 0x256 <_ZN4RF243csnEb>
     49e:	cf 71       	andi	r28, 0x1F	; 31
     4a0:	c0 62       	ori	r28, 0x20	; 32
     4a2:	ce bd       	out	0x2e, r28	; 46
     4a4:	00 00       	nop
     4a6:	0d b4       	in	r0, 0x2d	; 45
     4a8:	07 fe       	sbrs	r0, 7
     4aa:	fd cf       	rjmp	.-6      	; 0x4a6 <_ZN4RF2414write_registerEhh+0x24>
     4ac:	ce b5       	in	r28, 0x2e	; 46
     4ae:	de bd       	out	0x2e, r29	; 46
     4b0:	00 00       	nop
     4b2:	0d b4       	in	r0, 0x2d	; 45
     4b4:	07 fe       	sbrs	r0, 7
     4b6:	fd cf       	rjmp	.-6      	; 0x4b2 <_ZN4RF2414write_registerEhh+0x30>
     4b8:	8e b5       	in	r24, 0x2e	; 46
     4ba:	61 e0       	ldi	r22, 0x01	; 1
     4bc:	c8 01       	movw	r24, r16
     4be:	0e 94 2b 01 	call	0x256	; 0x256 <_ZN4RF243csnEb>
     4c2:	8c 2f       	mov	r24, r28
     4c4:	df 91       	pop	r29
     4c6:	cf 91       	pop	r28
     4c8:	1f 91       	pop	r17
     4ca:	0f 91       	pop	r16
     4cc:	08 95       	ret

000004ce <_ZN4RF2413write_payloadEPKvhh>:
     4ce:	df 92       	push	r13
     4d0:	ef 92       	push	r14
     4d2:	ff 92       	push	r15
     4d4:	0f 93       	push	r16
     4d6:	1f 93       	push	r17
     4d8:	cf 93       	push	r28
     4da:	df 93       	push	r29
     4dc:	ec 01       	movw	r28, r24
     4de:	d6 2e       	mov	r13, r22
     4e0:	e7 2e       	mov	r14, r23
     4e2:	f2 2e       	mov	r15, r18
     4e4:	8f 81       	ldd	r24, Y+7	; 0x07
     4e6:	08 2f       	mov	r16, r24
     4e8:	48 17       	cp	r20, r24
     4ea:	08 f4       	brcc	.+2      	; 0x4ee <_ZN4RF2413write_payloadEPKvhh+0x20>
     4ec:	04 2f       	mov	r16, r20
     4ee:	98 85       	ldd	r25, Y+8	; 0x08
     4f0:	91 11       	cpse	r25, r1
     4f2:	03 c0       	rjmp	.+6      	; 0x4fa <_ZN4RF2413write_payloadEPKvhh+0x2c>
     4f4:	18 2f       	mov	r17, r24
     4f6:	10 1b       	sub	r17, r16
     4f8:	01 c0       	rjmp	.+2      	; 0x4fc <_ZN4RF2413write_payloadEPKvhh+0x2e>
     4fa:	10 e0       	ldi	r17, 0x00	; 0
     4fc:	80 e5       	ldi	r24, 0x50	; 80
     4fe:	8c bd       	out	0x2c, r24	; 44
     500:	1d bc       	out	0x2d, r1	; 45
     502:	60 e0       	ldi	r22, 0x00	; 0
     504:	ce 01       	movw	r24, r28
     506:	0e 94 2b 01 	call	0x256	; 0x256 <_ZN4RF243csnEb>
     50a:	fe bc       	out	0x2e, r15	; 46
     50c:	00 00       	nop
     50e:	0d b4       	in	r0, 0x2d	; 45
     510:	07 fe       	sbrs	r0, 7
     512:	fd cf       	rjmp	.-6      	; 0x50e <_ZN4RF2413write_payloadEPKvhh+0x40>
     514:	fe b4       	in	r15, 0x2e	; 46
     516:	8f ef       	ldi	r24, 0xFF	; 255
     518:	80 0f       	add	r24, r16
     51a:	01 11       	cpse	r16, r1
     51c:	05 c0       	rjmp	.+10     	; 0x528 <_ZN4RF2413write_payloadEPKvhh+0x5a>
     51e:	8f ef       	ldi	r24, 0xFF	; 255
     520:	81 0f       	add	r24, r17
     522:	11 11       	cpse	r17, r1
     524:	0d c0       	rjmp	.+26     	; 0x540 <_ZN4RF2413write_payloadEPKvhh+0x72>
     526:	14 c0       	rjmp	.+40     	; 0x550 <_ZN4RF2413write_payloadEPKvhh+0x82>
     528:	ed 2d       	mov	r30, r13
     52a:	fe 2d       	mov	r31, r14
     52c:	91 91       	ld	r25, Z+
     52e:	9e bd       	out	0x2e, r25	; 46
     530:	00 00       	nop
     532:	0d b4       	in	r0, 0x2d	; 45
     534:	07 fe       	sbrs	r0, 7
     536:	fd cf       	rjmp	.-6      	; 0x532 <_ZN4RF2413write_payloadEPKvhh+0x64>
     538:	9e b5       	in	r25, 0x2e	; 46
     53a:	81 50       	subi	r24, 0x01	; 1
     53c:	b8 f7       	brcc	.-18     	; 0x52c <_ZN4RF2413write_payloadEPKvhh+0x5e>
     53e:	ef cf       	rjmp	.-34     	; 0x51e <_ZN4RF2413write_payloadEPKvhh+0x50>
     540:	1e bc       	out	0x2e, r1	; 46
     542:	00 00       	nop
     544:	0d b4       	in	r0, 0x2d	; 45
     546:	07 fe       	sbrs	r0, 7
     548:	fd cf       	rjmp	.-6      	; 0x544 <_ZN4RF2413write_payloadEPKvhh+0x76>
     54a:	9e b5       	in	r25, 0x2e	; 46
     54c:	81 50       	subi	r24, 0x01	; 1
     54e:	c0 f7       	brcc	.-16     	; 0x540 <_ZN4RF2413write_payloadEPKvhh+0x72>
     550:	61 e0       	ldi	r22, 0x01	; 1
     552:	ce 01       	movw	r24, r28
     554:	0e 94 2b 01 	call	0x256	; 0x256 <_ZN4RF243csnEb>
     558:	8f 2d       	mov	r24, r15
     55a:	df 91       	pop	r29
     55c:	cf 91       	pop	r28
     55e:	1f 91       	pop	r17
     560:	0f 91       	pop	r16
     562:	ff 90       	pop	r15
     564:	ef 90       	pop	r14
     566:	df 90       	pop	r13
     568:	08 95       	ret

0000056a <_ZN4RF248spiTransEh>:
     56a:	1f 93       	push	r17
     56c:	cf 93       	push	r28
     56e:	df 93       	push	r29
     570:	ec 01       	movw	r28, r24
     572:	16 2f       	mov	r17, r22
     574:	80 e5       	ldi	r24, 0x50	; 80
     576:	8c bd       	out	0x2c, r24	; 44
     578:	1d bc       	out	0x2d, r1	; 45
     57a:	60 e0       	ldi	r22, 0x00	; 0
     57c:	ce 01       	movw	r24, r28
     57e:	0e 94 2b 01 	call	0x256	; 0x256 <_ZN4RF243csnEb>
     582:	1e bd       	out	0x2e, r17	; 46
     584:	00 00       	nop
     586:	0d b4       	in	r0, 0x2d	; 45
     588:	07 fe       	sbrs	r0, 7
     58a:	fd cf       	rjmp	.-6      	; 0x586 <_ZN4RF248spiTransEh+0x1c>
     58c:	1e b5       	in	r17, 0x2e	; 46
     58e:	61 e0       	ldi	r22, 0x01	; 1
     590:	ce 01       	movw	r24, r28
     592:	0e 94 2b 01 	call	0x256	; 0x256 <_ZN4RF243csnEb>
     596:	81 2f       	mov	r24, r17
     598:	df 91       	pop	r29
     59a:	cf 91       	pop	r28
     59c:	1f 91       	pop	r17
     59e:	08 95       	ret

000005a0 <_ZN4RF248flush_rxEv>:
     5a0:	62 ee       	ldi	r22, 0xE2	; 226
     5a2:	0e 94 b5 02 	call	0x56a	; 0x56a <_ZN4RF248spiTransEh>
     5a6:	08 95       	ret

000005a8 <_ZN4RF248flush_txEv>:
     5a8:	61 ee       	ldi	r22, 0xE1	; 225
     5aa:	0e 94 b5 02 	call	0x56a	; 0x56a <_ZN4RF248spiTransEh>
     5ae:	08 95       	ret

000005b0 <_ZN4RF2410get_statusEv>:
     5b0:	6f ef       	ldi	r22, 0xFF	; 255
     5b2:	0e 94 b5 02 	call	0x56a	; 0x56a <_ZN4RF248spiTransEh>
     5b6:	08 95       	ret

000005b8 <_ZN4RF24C1Ejj>:
     5b8:	fc 01       	movw	r30, r24
     5ba:	71 83       	std	Z+1, r23	; 0x01
     5bc:	60 83       	st	Z, r22
     5be:	53 83       	std	Z+3, r21	; 0x03
     5c0:	42 83       	std	Z+2, r20	; 0x02
     5c2:	16 82       	std	Z+6, r1	; 0x06
     5c4:	80 e2       	ldi	r24, 0x20	; 32
     5c6:	87 83       	std	Z+7, r24	; 0x07
     5c8:	10 86       	std	Z+8, r1	; 0x08
     5ca:	85 e0       	ldi	r24, 0x05	; 5
     5cc:	86 87       	std	Z+14, r24	; 0x0e
     5ce:	85 e0       	ldi	r24, 0x05	; 5
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	a0 e0       	ldi	r26, 0x00	; 0
     5d4:	b0 e0       	ldi	r27, 0x00	; 0
     5d6:	84 8b       	std	Z+20, r24	; 0x14
     5d8:	95 8b       	std	Z+21, r25	; 0x15
     5da:	a6 8b       	std	Z+22, r26	; 0x16
     5dc:	b7 8b       	std	Z+23, r27	; 0x17
     5de:	11 86       	std	Z+9, r1	; 0x09
     5e0:	08 95       	ret

000005e2 <_ZN4RF2410setChannelEh>:
     5e2:	6d 37       	cpi	r22, 0x7D	; 125
     5e4:	10 f4       	brcc	.+4      	; 0x5ea <_ZN4RF2410setChannelEh+0x8>
     5e6:	46 2f       	mov	r20, r22
     5e8:	01 c0       	rjmp	.+2      	; 0x5ec <_ZN4RF2410setChannelEh+0xa>
     5ea:	4d e7       	ldi	r20, 0x7D	; 125
     5ec:	65 e0       	ldi	r22, 0x05	; 5
     5ee:	0e 94 41 02 	call	0x482	; 0x482 <_ZN4RF2414write_registerEhh>
     5f2:	08 95       	ret

000005f4 <_ZN4RF2413stopListeningEv>:
     5f4:	4f 92       	push	r4
     5f6:	5f 92       	push	r5
     5f8:	6f 92       	push	r6
     5fa:	7f 92       	push	r7
     5fc:	8f 92       	push	r8
     5fe:	9f 92       	push	r9
     600:	af 92       	push	r10
     602:	bf 92       	push	r11
     604:	cf 92       	push	r12
     606:	df 92       	push	r13
     608:	ef 92       	push	r14
     60a:	ff 92       	push	r15
     60c:	0f 93       	push	r16
     60e:	1f 93       	push	r17
     610:	cf 93       	push	r28
     612:	df 93       	push	r29
     614:	ec 01       	movw	r28, r24
     616:	60 e0       	ldi	r22, 0x00	; 0
     618:	0e 94 da 01 	call	0x3b4	; 0x3b4 <_ZN4RF242ceEb>
     61c:	68 89       	ldd	r22, Y+16	; 0x10
     61e:	79 89       	ldd	r23, Y+17	; 0x11
     620:	8a 89       	ldd	r24, Y+18	; 0x12
     622:	9b 89       	ldd	r25, Y+19	; 0x13
     624:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <__floatunsisf>
     628:	6b 01       	movw	r12, r22
     62a:	7c 01       	movw	r14, r24
     62c:	2b ea       	ldi	r18, 0xAB	; 171
     62e:	3a ea       	ldi	r19, 0xAA	; 170
     630:	4a e2       	ldi	r20, 0x2A	; 42
     632:	50 e4       	ldi	r21, 0x40	; 64
     634:	0e 94 8f 07 	call	0xf1e	; 0xf1e <__mulsf3>
     638:	4b 01       	movw	r8, r22
     63a:	5c 01       	movw	r10, r24
     63c:	20 e0       	ldi	r18, 0x00	; 0
     63e:	30 e0       	ldi	r19, 0x00	; 0
     640:	40 e8       	ldi	r20, 0x80	; 128
     642:	5f e3       	ldi	r21, 0x3F	; 63
     644:	0e 94 32 06 	call	0xc64	; 0xc64 <__cmpsf2>
     648:	88 23       	and	r24, r24
     64a:	0c f4       	brge	.+2      	; 0x64e <_ZN4RF2413stopListeningEv+0x5a>
     64c:	6e c0       	rjmp	.+220    	; 0x72a <_ZN4RF2413stopListeningEv+0x136>
     64e:	a7 01       	movw	r20, r14
     650:	96 01       	movw	r18, r12
     652:	c7 01       	movw	r24, r14
     654:	b6 01       	movw	r22, r12
     656:	0e 94 c6 05 	call	0xb8c	; 0xb8c <__addsf3>
     65a:	2b 01       	movw	r4, r22
     65c:	3c 01       	movw	r6, r24
     65e:	20 e0       	ldi	r18, 0x00	; 0
     660:	3f ef       	ldi	r19, 0xFF	; 255
     662:	4f e7       	ldi	r20, 0x7F	; 127
     664:	57 e4       	ldi	r21, 0x47	; 71
     666:	0e 94 8a 07 	call	0xf14	; 0xf14 <__gesf2>
     66a:	18 16       	cp	r1, r24
     66c:	0c f0       	brlt	.+2      	; 0x670 <_ZN4RF2413stopListeningEv+0x7c>
     66e:	45 c0       	rjmp	.+138    	; 0x6fa <_ZN4RF2413stopListeningEv+0x106>
     670:	20 e0       	ldi	r18, 0x00	; 0
     672:	30 e0       	ldi	r19, 0x00	; 0
     674:	4a e7       	ldi	r20, 0x7A	; 122
     676:	54 e4       	ldi	r21, 0x44	; 68
     678:	c7 01       	movw	r24, r14
     67a:	b6 01       	movw	r22, r12
     67c:	0e 94 37 06 	call	0xc6e	; 0xc6e <__divsf3>
     680:	4b 01       	movw	r8, r22
     682:	5c 01       	movw	r10, r24
     684:	20 e0       	ldi	r18, 0x00	; 0
     686:	30 e0       	ldi	r19, 0x00	; 0
     688:	4a ef       	ldi	r20, 0xFA	; 250
     68a:	54 e4       	ldi	r21, 0x44	; 68
     68c:	0e 94 8f 07 	call	0xf1e	; 0xf1e <__mulsf3>
     690:	6b 01       	movw	r12, r22
     692:	7c 01       	movw	r14, r24
     694:	20 e0       	ldi	r18, 0x00	; 0
     696:	30 e0       	ldi	r19, 0x00	; 0
     698:	40 e8       	ldi	r20, 0x80	; 128
     69a:	5f e3       	ldi	r21, 0x3F	; 63
     69c:	0e 94 32 06 	call	0xc64	; 0xc64 <__cmpsf2>
     6a0:	88 23       	and	r24, r24
     6a2:	2c f1       	brlt	.+74     	; 0x6ee <_ZN4RF2413stopListeningEv+0xfa>
     6a4:	20 e0       	ldi	r18, 0x00	; 0
     6a6:	3f ef       	ldi	r19, 0xFF	; 255
     6a8:	4f e7       	ldi	r20, 0x7F	; 127
     6aa:	57 e4       	ldi	r21, 0x47	; 71
     6ac:	c7 01       	movw	r24, r14
     6ae:	b6 01       	movw	r22, r12
     6b0:	0e 94 8a 07 	call	0xf14	; 0xf14 <__gesf2>
     6b4:	18 16       	cp	r1, r24
     6b6:	b4 f4       	brge	.+44     	; 0x6e4 <_ZN4RF2413stopListeningEv+0xf0>
     6b8:	20 e0       	ldi	r18, 0x00	; 0
     6ba:	30 e0       	ldi	r19, 0x00	; 0
     6bc:	40 e2       	ldi	r20, 0x20	; 32
     6be:	51 e4       	ldi	r21, 0x41	; 65
     6c0:	c5 01       	movw	r24, r10
     6c2:	b4 01       	movw	r22, r8
     6c4:	0e 94 8f 07 	call	0xf1e	; 0xf1e <__mulsf3>
     6c8:	0e 94 a9 06 	call	0xd52	; 0xd52 <__fixunssfsi>
     6cc:	61 15       	cp	r22, r1
     6ce:	71 05       	cpc	r23, r1
     6d0:	69 f1       	breq	.+90     	; 0x72c <_ZN4RF2413stopListeningEv+0x138>
     6d2:	28 ec       	ldi	r18, 0xC8	; 200
     6d4:	30 e0       	ldi	r19, 0x00	; 0
     6d6:	c9 01       	movw	r24, r18
     6d8:	01 97       	sbiw	r24, 0x01	; 1
     6da:	f1 f7       	brne	.-4      	; 0x6d8 <_ZN4RF2413stopListeningEv+0xe4>
     6dc:	61 50       	subi	r22, 0x01	; 1
     6de:	71 09       	sbc	r23, r1
     6e0:	d1 f7       	brne	.-12     	; 0x6d6 <_ZN4RF2413stopListeningEv+0xe2>
     6e2:	24 c0       	rjmp	.+72     	; 0x72c <_ZN4RF2413stopListeningEv+0x138>
     6e4:	c7 01       	movw	r24, r14
     6e6:	b6 01       	movw	r22, r12
     6e8:	0e 94 a9 06 	call	0xd52	; 0xd52 <__fixunssfsi>
     6ec:	02 c0       	rjmp	.+4      	; 0x6f2 <_ZN4RF2413stopListeningEv+0xfe>
     6ee:	61 e0       	ldi	r22, 0x01	; 1
     6f0:	70 e0       	ldi	r23, 0x00	; 0
     6f2:	cb 01       	movw	r24, r22
     6f4:	01 97       	sbiw	r24, 0x01	; 1
     6f6:	f1 f7       	brne	.-4      	; 0x6f4 <_ZN4RF2413stopListeningEv+0x100>
     6f8:	19 c0       	rjmp	.+50     	; 0x72c <_ZN4RF2413stopListeningEv+0x138>
     6fa:	20 e0       	ldi	r18, 0x00	; 0
     6fc:	30 e0       	ldi	r19, 0x00	; 0
     6fe:	4f e7       	ldi	r20, 0x7F	; 127
     700:	53 e4       	ldi	r21, 0x43	; 67
     702:	c5 01       	movw	r24, r10
     704:	b4 01       	movw	r22, r8
     706:	0e 94 8a 07 	call	0xf14	; 0xf14 <__gesf2>
     70a:	18 16       	cp	r1, r24
     70c:	44 f4       	brge	.+16     	; 0x71e <_ZN4RF2413stopListeningEv+0x12a>
     70e:	c3 01       	movw	r24, r6
     710:	b2 01       	movw	r22, r4
     712:	0e 94 a9 06 	call	0xd52	; 0xd52 <__fixunssfsi>
     716:	cb 01       	movw	r24, r22
     718:	01 97       	sbiw	r24, 0x01	; 1
     71a:	f1 f7       	brne	.-4      	; 0x718 <_ZN4RF2413stopListeningEv+0x124>
     71c:	09 c0       	rjmp	.+18     	; 0x730 <_ZN4RF2413stopListeningEv+0x13c>
     71e:	c5 01       	movw	r24, r10
     720:	b4 01       	movw	r22, r8
     722:	0e 94 a9 06 	call	0xd52	; 0xd52 <__fixunssfsi>
     726:	16 2f       	mov	r17, r22
     728:	01 c0       	rjmp	.+2      	; 0x72c <_ZN4RF2413stopListeningEv+0x138>
     72a:	11 e0       	ldi	r17, 0x01	; 1
     72c:	1a 95       	dec	r17
     72e:	f1 f7       	brne	.-4      	; 0x72c <_ZN4RF2413stopListeningEv+0x138>
     730:	6d e1       	ldi	r22, 0x1D	; 29
     732:	ce 01       	movw	r24, r28
     734:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <_ZN4RF2413read_registerEh>
     738:	81 ff       	sbrs	r24, 1
     73a:	8d c0       	rjmp	.+282    	; 0x856 <_ZN4RF2413stopListeningEv+0x262>
     73c:	68 89       	ldd	r22, Y+16	; 0x10
     73e:	79 89       	ldd	r23, Y+17	; 0x11
     740:	8a 89       	ldd	r24, Y+18	; 0x12
     742:	9b 89       	ldd	r25, Y+19	; 0x13
     744:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <__floatunsisf>
     748:	6b 01       	movw	r12, r22
     74a:	7c 01       	movw	r14, r24
     74c:	2b ea       	ldi	r18, 0xAB	; 171
     74e:	3a ea       	ldi	r19, 0xAA	; 170
     750:	4a e2       	ldi	r20, 0x2A	; 42
     752:	50 e4       	ldi	r21, 0x40	; 64
     754:	0e 94 8f 07 	call	0xf1e	; 0xf1e <__mulsf3>
     758:	4b 01       	movw	r8, r22
     75a:	5c 01       	movw	r10, r24
     75c:	20 e0       	ldi	r18, 0x00	; 0
     75e:	30 e0       	ldi	r19, 0x00	; 0
     760:	40 e8       	ldi	r20, 0x80	; 128
     762:	5f e3       	ldi	r21, 0x3F	; 63
     764:	0e 94 32 06 	call	0xc64	; 0xc64 <__cmpsf2>
     768:	88 23       	and	r24, r24
     76a:	0c f4       	brge	.+2      	; 0x76e <_ZN4RF2413stopListeningEv+0x17a>
     76c:	6e c0       	rjmp	.+220    	; 0x84a <_ZN4RF2413stopListeningEv+0x256>
     76e:	a7 01       	movw	r20, r14
     770:	96 01       	movw	r18, r12
     772:	c7 01       	movw	r24, r14
     774:	b6 01       	movw	r22, r12
     776:	0e 94 c6 05 	call	0xb8c	; 0xb8c <__addsf3>
     77a:	2b 01       	movw	r4, r22
     77c:	3c 01       	movw	r6, r24
     77e:	20 e0       	ldi	r18, 0x00	; 0
     780:	3f ef       	ldi	r19, 0xFF	; 255
     782:	4f e7       	ldi	r20, 0x7F	; 127
     784:	57 e4       	ldi	r21, 0x47	; 71
     786:	0e 94 8a 07 	call	0xf14	; 0xf14 <__gesf2>
     78a:	18 16       	cp	r1, r24
     78c:	0c f0       	brlt	.+2      	; 0x790 <_ZN4RF2413stopListeningEv+0x19c>
     78e:	45 c0       	rjmp	.+138    	; 0x81a <_ZN4RF2413stopListeningEv+0x226>
     790:	20 e0       	ldi	r18, 0x00	; 0
     792:	30 e0       	ldi	r19, 0x00	; 0
     794:	4a e7       	ldi	r20, 0x7A	; 122
     796:	54 e4       	ldi	r21, 0x44	; 68
     798:	c7 01       	movw	r24, r14
     79a:	b6 01       	movw	r22, r12
     79c:	0e 94 37 06 	call	0xc6e	; 0xc6e <__divsf3>
     7a0:	4b 01       	movw	r8, r22
     7a2:	5c 01       	movw	r10, r24
     7a4:	20 e0       	ldi	r18, 0x00	; 0
     7a6:	30 e0       	ldi	r19, 0x00	; 0
     7a8:	4a ef       	ldi	r20, 0xFA	; 250
     7aa:	54 e4       	ldi	r21, 0x44	; 68
     7ac:	0e 94 8f 07 	call	0xf1e	; 0xf1e <__mulsf3>
     7b0:	6b 01       	movw	r12, r22
     7b2:	7c 01       	movw	r14, r24
     7b4:	20 e0       	ldi	r18, 0x00	; 0
     7b6:	30 e0       	ldi	r19, 0x00	; 0
     7b8:	40 e8       	ldi	r20, 0x80	; 128
     7ba:	5f e3       	ldi	r21, 0x3F	; 63
     7bc:	0e 94 32 06 	call	0xc64	; 0xc64 <__cmpsf2>
     7c0:	88 23       	and	r24, r24
     7c2:	2c f1       	brlt	.+74     	; 0x80e <_ZN4RF2413stopListeningEv+0x21a>
     7c4:	20 e0       	ldi	r18, 0x00	; 0
     7c6:	3f ef       	ldi	r19, 0xFF	; 255
     7c8:	4f e7       	ldi	r20, 0x7F	; 127
     7ca:	57 e4       	ldi	r21, 0x47	; 71
     7cc:	c7 01       	movw	r24, r14
     7ce:	b6 01       	movw	r22, r12
     7d0:	0e 94 8a 07 	call	0xf14	; 0xf14 <__gesf2>
     7d4:	18 16       	cp	r1, r24
     7d6:	b4 f4       	brge	.+44     	; 0x804 <_ZN4RF2413stopListeningEv+0x210>
     7d8:	20 e0       	ldi	r18, 0x00	; 0
     7da:	30 e0       	ldi	r19, 0x00	; 0
     7dc:	40 e2       	ldi	r20, 0x20	; 32
     7de:	51 e4       	ldi	r21, 0x41	; 65
     7e0:	c5 01       	movw	r24, r10
     7e2:	b4 01       	movw	r22, r8
     7e4:	0e 94 8f 07 	call	0xf1e	; 0xf1e <__mulsf3>
     7e8:	0e 94 a9 06 	call	0xd52	; 0xd52 <__fixunssfsi>
     7ec:	61 15       	cp	r22, r1
     7ee:	71 05       	cpc	r23, r1
     7f0:	69 f1       	breq	.+90     	; 0x84c <_ZN4RF2413stopListeningEv+0x258>
     7f2:	28 ec       	ldi	r18, 0xC8	; 200
     7f4:	30 e0       	ldi	r19, 0x00	; 0
     7f6:	c9 01       	movw	r24, r18
     7f8:	01 97       	sbiw	r24, 0x01	; 1
     7fa:	f1 f7       	brne	.-4      	; 0x7f8 <_ZN4RF2413stopListeningEv+0x204>
     7fc:	61 50       	subi	r22, 0x01	; 1
     7fe:	71 09       	sbc	r23, r1
     800:	d1 f7       	brne	.-12     	; 0x7f6 <_ZN4RF2413stopListeningEv+0x202>
     802:	24 c0       	rjmp	.+72     	; 0x84c <_ZN4RF2413stopListeningEv+0x258>
     804:	c7 01       	movw	r24, r14
     806:	b6 01       	movw	r22, r12
     808:	0e 94 a9 06 	call	0xd52	; 0xd52 <__fixunssfsi>
     80c:	02 c0       	rjmp	.+4      	; 0x812 <_ZN4RF2413stopListeningEv+0x21e>
     80e:	61 e0       	ldi	r22, 0x01	; 1
     810:	70 e0       	ldi	r23, 0x00	; 0
     812:	cb 01       	movw	r24, r22
     814:	01 97       	sbiw	r24, 0x01	; 1
     816:	f1 f7       	brne	.-4      	; 0x814 <_ZN4RF2413stopListeningEv+0x220>
     818:	19 c0       	rjmp	.+50     	; 0x84c <_ZN4RF2413stopListeningEv+0x258>
     81a:	20 e0       	ldi	r18, 0x00	; 0
     81c:	30 e0       	ldi	r19, 0x00	; 0
     81e:	4f e7       	ldi	r20, 0x7F	; 127
     820:	53 e4       	ldi	r21, 0x43	; 67
     822:	c5 01       	movw	r24, r10
     824:	b4 01       	movw	r22, r8
     826:	0e 94 8a 07 	call	0xf14	; 0xf14 <__gesf2>
     82a:	18 16       	cp	r1, r24
     82c:	44 f4       	brge	.+16     	; 0x83e <_ZN4RF2413stopListeningEv+0x24a>
     82e:	c3 01       	movw	r24, r6
     830:	b2 01       	movw	r22, r4
     832:	0e 94 a9 06 	call	0xd52	; 0xd52 <__fixunssfsi>
     836:	cb 01       	movw	r24, r22
     838:	01 97       	sbiw	r24, 0x01	; 1
     83a:	f1 f7       	brne	.-4      	; 0x838 <_ZN4RF2413stopListeningEv+0x244>
     83c:	09 c0       	rjmp	.+18     	; 0x850 <_ZN4RF2413stopListeningEv+0x25c>
     83e:	c5 01       	movw	r24, r10
     840:	b4 01       	movw	r22, r8
     842:	0e 94 a9 06 	call	0xd52	; 0xd52 <__fixunssfsi>
     846:	06 2f       	mov	r16, r22
     848:	01 c0       	rjmp	.+2      	; 0x84c <_ZN4RF2413stopListeningEv+0x258>
     84a:	01 e0       	ldi	r16, 0x01	; 1
     84c:	0a 95       	dec	r16
     84e:	f1 f7       	brne	.-4      	; 0x84c <_ZN4RF2413stopListeningEv+0x258>
     850:	ce 01       	movw	r24, r28
     852:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <_ZN4RF248flush_txEv>
     856:	60 e0       	ldi	r22, 0x00	; 0
     858:	ce 01       	movw	r24, r28
     85a:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <_ZN4RF2413read_registerEh>
     85e:	48 2f       	mov	r20, r24
     860:	4e 7f       	andi	r20, 0xFE	; 254
     862:	60 e0       	ldi	r22, 0x00	; 0
     864:	ce 01       	movw	r24, r28
     866:	0e 94 41 02 	call	0x482	; 0x482 <_ZN4RF2414write_registerEhh>
     86a:	62 e0       	ldi	r22, 0x02	; 2
     86c:	ce 01       	movw	r24, r28
     86e:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <_ZN4RF2413read_registerEh>
     872:	48 2f       	mov	r20, r24
     874:	41 60       	ori	r20, 0x01	; 1
     876:	62 e0       	ldi	r22, 0x02	; 2
     878:	ce 01       	movw	r24, r28
     87a:	0e 94 41 02 	call	0x482	; 0x482 <_ZN4RF2414write_registerEhh>
     87e:	df 91       	pop	r29
     880:	cf 91       	pop	r28
     882:	1f 91       	pop	r17
     884:	0f 91       	pop	r16
     886:	ff 90       	pop	r15
     888:	ef 90       	pop	r14
     88a:	df 90       	pop	r13
     88c:	cf 90       	pop	r12
     88e:	bf 90       	pop	r11
     890:	af 90       	pop	r10
     892:	9f 90       	pop	r9
     894:	8f 90       	pop	r8
     896:	7f 90       	pop	r7
     898:	6f 90       	pop	r6
     89a:	5f 90       	pop	r5
     89c:	4f 90       	pop	r4
     89e:	08 95       	ret

000008a0 <_ZN4RF247powerUpEv>:
     8a0:	cf 93       	push	r28
     8a2:	df 93       	push	r29
     8a4:	ec 01       	movw	r28, r24
     8a6:	60 e0       	ldi	r22, 0x00	; 0
     8a8:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <_ZN4RF2413read_registerEh>
     8ac:	81 fd       	sbrc	r24, 1
     8ae:	0a c0       	rjmp	.+20     	; 0x8c4 <_ZN4RF247powerUpEv+0x24>
     8b0:	48 2f       	mov	r20, r24
     8b2:	42 60       	ori	r20, 0x02	; 2
     8b4:	60 e0       	ldi	r22, 0x00	; 0
     8b6:	ce 01       	movw	r24, r28
     8b8:	0e 94 41 02 	call	0x482	; 0x482 <_ZN4RF2414write_registerEhh>
     8bc:	80 e1       	ldi	r24, 0x10	; 16
     8be:	97 e2       	ldi	r25, 0x27	; 39
     8c0:	01 97       	sbiw	r24, 0x01	; 1
     8c2:	f1 f7       	brne	.-4      	; 0x8c0 <_ZN4RF247powerUpEv+0x20>
     8c4:	df 91       	pop	r29
     8c6:	cf 91       	pop	r28
     8c8:	08 95       	ret

000008ca <_ZN4RF2414startFastWriteEPKvhbb>:
     8ca:	0f 93       	push	r16
     8cc:	cf 93       	push	r28
     8ce:	df 93       	push	r29
     8d0:	ec 01       	movw	r28, r24
     8d2:	21 11       	cpse	r18, r1
     8d4:	02 c0       	rjmp	.+4      	; 0x8da <_ZN4RF2414startFastWriteEPKvhbb+0x10>
     8d6:	20 ea       	ldi	r18, 0xA0	; 160
     8d8:	01 c0       	rjmp	.+2      	; 0x8dc <_ZN4RF2414startFastWriteEPKvhbb+0x12>
     8da:	20 eb       	ldi	r18, 0xB0	; 176
     8dc:	ce 01       	movw	r24, r28
     8de:	0e 94 67 02 	call	0x4ce	; 0x4ce <_ZN4RF2413write_payloadEPKvhh>
     8e2:	00 23       	and	r16, r16
     8e4:	21 f0       	breq	.+8      	; 0x8ee <_ZN4RF2414startFastWriteEPKvhbb+0x24>
     8e6:	61 e0       	ldi	r22, 0x01	; 1
     8e8:	ce 01       	movw	r24, r28
     8ea:	0e 94 da 01 	call	0x3b4	; 0x3b4 <_ZN4RF242ceEb>
     8ee:	df 91       	pop	r29
     8f0:	cf 91       	pop	r28
     8f2:	0f 91       	pop	r16
     8f4:	08 95       	ret

000008f6 <_ZN4RF245writeEPKvhb>:
     8f6:	0f 93       	push	r16
     8f8:	cf 93       	push	r28
     8fa:	df 93       	push	r29
     8fc:	ec 01       	movw	r28, r24
     8fe:	01 e0       	ldi	r16, 0x01	; 1
     900:	0e 94 65 04 	call	0x8ca	; 0x8ca <_ZN4RF2414startFastWriteEPKvhbb>
     904:	ce 01       	movw	r24, r28
     906:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <_ZN4RF2410get_statusEv>
     90a:	80 73       	andi	r24, 0x30	; 48
     90c:	d9 f3       	breq	.-10     	; 0x904 <__stack+0x5>
     90e:	60 e0       	ldi	r22, 0x00	; 0
     910:	ce 01       	movw	r24, r28
     912:	0e 94 da 01 	call	0x3b4	; 0x3b4 <_ZN4RF242ceEb>
     916:	40 e7       	ldi	r20, 0x70	; 112
     918:	67 e0       	ldi	r22, 0x07	; 7
     91a:	ce 01       	movw	r24, r28
     91c:	0e 94 41 02 	call	0x482	; 0x482 <_ZN4RF2414write_registerEhh>
     920:	84 ff       	sbrs	r24, 4
     922:	05 c0       	rjmp	.+10     	; 0x92e <__stack+0x2f>
     924:	ce 01       	movw	r24, r28
     926:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <_ZN4RF248flush_txEv>
     92a:	80 e0       	ldi	r24, 0x00	; 0
     92c:	01 c0       	rjmp	.+2      	; 0x930 <__stack+0x31>
     92e:	81 e0       	ldi	r24, 0x01	; 1
     930:	df 91       	pop	r29
     932:	cf 91       	pop	r28
     934:	0f 91       	pop	r16
     936:	08 95       	ret

00000938 <_ZN4RF245writeEPKvh>:
     938:	20 e0       	ldi	r18, 0x00	; 0
     93a:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <_ZN4RF245writeEPKvhb>
     93e:	08 95       	ret

00000940 <_ZN4RF2415openWritingPipeEy>:
     940:	ef 92       	push	r14
     942:	ff 92       	push	r15
     944:	0f 93       	push	r16
     946:	1f 93       	push	r17
     948:	cf 93       	push	r28
     94a:	df 93       	push	r29
     94c:	cd b7       	in	r28, 0x3d	; 61
     94e:	de b7       	in	r29, 0x3e	; 62
     950:	28 97       	sbiw	r28, 0x08	; 8
     952:	0f b6       	in	r0, 0x3f	; 63
     954:	f8 94       	cli
     956:	de bf       	out	0x3e, r29	; 62
     958:	0f be       	out	0x3f, r0	; 63
     95a:	cd bf       	out	0x3d, r28	; 61
     95c:	7c 01       	movw	r14, r24
     95e:	09 83       	std	Y+1, r16	; 0x01
     960:	1a 83       	std	Y+2, r17	; 0x02
     962:	2b 83       	std	Y+3, r18	; 0x03
     964:	3c 83       	std	Y+4, r19	; 0x04
     966:	4d 83       	std	Y+5, r20	; 0x05
     968:	5e 83       	std	Y+6, r21	; 0x06
     96a:	6f 83       	std	Y+7, r22	; 0x07
     96c:	78 87       	std	Y+8, r23	; 0x08
     96e:	fc 01       	movw	r30, r24
     970:	26 85       	ldd	r18, Z+14	; 0x0e
     972:	ae 01       	movw	r20, r28
     974:	4f 5f       	subi	r20, 0xFF	; 255
     976:	5f 4f       	sbci	r21, 0xFF	; 255
     978:	6a e0       	ldi	r22, 0x0A	; 10
     97a:	0e 94 0c 02 	call	0x418	; 0x418 <_ZN4RF2414write_registerEhPKhh>
     97e:	f7 01       	movw	r30, r14
     980:	26 85       	ldd	r18, Z+14	; 0x0e
     982:	ae 01       	movw	r20, r28
     984:	4f 5f       	subi	r20, 0xFF	; 255
     986:	5f 4f       	sbci	r21, 0xFF	; 255
     988:	60 e1       	ldi	r22, 0x10	; 16
     98a:	c7 01       	movw	r24, r14
     98c:	0e 94 0c 02 	call	0x418	; 0x418 <_ZN4RF2414write_registerEhPKhh>
     990:	f7 01       	movw	r30, r14
     992:	47 81       	ldd	r20, Z+7	; 0x07
     994:	61 e1       	ldi	r22, 0x11	; 17
     996:	c7 01       	movw	r24, r14
     998:	0e 94 41 02 	call	0x482	; 0x482 <_ZN4RF2414write_registerEhh>
     99c:	28 96       	adiw	r28, 0x08	; 8
     99e:	0f b6       	in	r0, 0x3f	; 63
     9a0:	f8 94       	cli
     9a2:	de bf       	out	0x3e, r29	; 62
     9a4:	0f be       	out	0x3f, r0	; 63
     9a6:	cd bf       	out	0x3d, r28	; 61
     9a8:	df 91       	pop	r29
     9aa:	cf 91       	pop	r28
     9ac:	1f 91       	pop	r17
     9ae:	0f 91       	pop	r16
     9b0:	ff 90       	pop	r15
     9b2:	ef 90       	pop	r14
     9b4:	08 95       	ret

000009b6 <_ZN4RF2415toggle_featuresEv>:
     9b6:	1f 93       	push	r17
     9b8:	cf 93       	push	r28
     9ba:	df 93       	push	r29
     9bc:	ec 01       	movw	r28, r24
     9be:	10 e5       	ldi	r17, 0x50	; 80
     9c0:	1c bd       	out	0x2c, r17	; 44
     9c2:	1d bc       	out	0x2d, r1	; 45
     9c4:	60 e0       	ldi	r22, 0x00	; 0
     9c6:	0e 94 2b 01 	call	0x256	; 0x256 <_ZN4RF243csnEb>
     9ca:	1e bd       	out	0x2e, r17	; 46
     9cc:	00 00       	nop
     9ce:	0d b4       	in	r0, 0x2d	; 45
     9d0:	07 fe       	sbrs	r0, 7
     9d2:	fd cf       	rjmp	.-6      	; 0x9ce <_ZN4RF2415toggle_featuresEv+0x18>
     9d4:	8e b5       	in	r24, 0x2e	; 46
     9d6:	83 e7       	ldi	r24, 0x73	; 115
     9d8:	8e bd       	out	0x2e, r24	; 46
     9da:	00 00       	nop
     9dc:	0d b4       	in	r0, 0x2d	; 45
     9de:	07 fe       	sbrs	r0, 7
     9e0:	fd cf       	rjmp	.-6      	; 0x9dc <_ZN4RF2415toggle_featuresEv+0x26>
     9e2:	8e b5       	in	r24, 0x2e	; 46
     9e4:	61 e0       	ldi	r22, 0x01	; 1
     9e6:	ce 01       	movw	r24, r28
     9e8:	0e 94 2b 01 	call	0x256	; 0x256 <_ZN4RF243csnEb>
     9ec:	df 91       	pop	r29
     9ee:	cf 91       	pop	r28
     9f0:	1f 91       	pop	r17
     9f2:	08 95       	ret

000009f4 <_ZN4RF2411setDataRateE15rf24_datarate_e>:

/****************************************************************************/

bool RF24::setDataRate(rf24_datarate_e speed)
{
     9f4:	0f 93       	push	r16
     9f6:	1f 93       	push	r17
     9f8:	cf 93       	push	r28
     9fa:	df 93       	push	r29
     9fc:	ec 01       	movw	r28, r24
     9fe:	06 2f       	mov	r16, r22
  bool result = false;
  uint8_t setup = read_register(RF_SETUP) ;
     a00:	66 e0       	ldi	r22, 0x06	; 6
     a02:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <_ZN4RF2413read_registerEh>

  // HIGH and LOW '00' is 1Mbs - our default
  setup &= ~(_BV(RF_DR_LOW) | _BV(RF_DR_HIGH)) ;
     a06:	18 2f       	mov	r17, r24
     a08:	17 7d       	andi	r17, 0xD7	; 215
  #if defined(__arm__) || defined (RF24_LINUX) || defined (__ARDUINO_X86__)
    txDelay=250;
 */ //#else //16Mhz Arduino
    txDelay=85;
  //#endif
  if( speed == RF24_250KBPS )
     a0a:	02 30       	cpi	r16, 0x02	; 2
     a0c:	51 f4       	brne	.+20     	; 0xa22 <_ZN4RF2411setDataRateE15rf24_datarate_e+0x2e>
  {
    // Must set the RF_DR_LOW to 1; RF_DR_HIGH (used to be RF_DR) is already 0
    // Making it '10'.
    setup |= _BV( RF_DR_LOW ) ;
     a0e:	10 62       	ori	r17, 0x20	; 32
 /* #if defined(__arm__) || defined (RF24_LINUX) || defined (__ARDUINO_X86__)
    txDelay=450;
  #else //16Mhz Arduino*/
	txDelay=155;
     a10:	8b e9       	ldi	r24, 0x9B	; 155
     a12:	90 e0       	ldi	r25, 0x00	; 0
     a14:	a0 e0       	ldi	r26, 0x00	; 0
     a16:	b0 e0       	ldi	r27, 0x00	; 0
     a18:	88 8b       	std	Y+16, r24	; 0x10
     a1a:	99 8b       	std	Y+17, r25	; 0x11
     a1c:	aa 8b       	std	Y+18, r26	; 0x12
     a1e:	bb 8b       	std	Y+19, r27	; 0x13
     a20:	14 c0       	rjmp	.+40     	; 0xa4a <_ZN4RF2411setDataRateE15rf24_datarate_e+0x56>
  }
  else
  {
    // Set 2Mbs, RF_DR (RF_DR_HIGH) is set 1
    // Making it '01'
    if ( speed == RF24_2MBPS )
     a22:	01 30       	cpi	r16, 0x01	; 1
     a24:	49 f0       	breq	.+18     	; 0xa38 <_ZN4RF2411setDataRateE15rf24_datarate_e+0x44>
  setup &= ~(_BV(RF_DR_LOW) | _BV(RF_DR_HIGH)) ;
/*  
  #if defined(__arm__) || defined (RF24_LINUX) || defined (__ARDUINO_X86__)
    txDelay=250;
 */ //#else //16Mhz Arduino
    txDelay=85;
     a26:	85 e5       	ldi	r24, 0x55	; 85
     a28:	90 e0       	ldi	r25, 0x00	; 0
     a2a:	a0 e0       	ldi	r26, 0x00	; 0
     a2c:	b0 e0       	ldi	r27, 0x00	; 0
     a2e:	88 8b       	std	Y+16, r24	; 0x10
     a30:	99 8b       	std	Y+17, r25	; 0x11
     a32:	aa 8b       	std	Y+18, r26	; 0x12
     a34:	bb 8b       	std	Y+19, r27	; 0x13
     a36:	09 c0       	rjmp	.+18     	; 0xa4a <_ZN4RF2411setDataRateE15rf24_datarate_e+0x56>
  {
    // Set 2Mbs, RF_DR (RF_DR_HIGH) is set 1
    // Making it '01'
    if ( speed == RF24_2MBPS )
    {
      setup |= _BV(RF_DR_HIGH);
     a38:	18 60       	ori	r17, 0x08	; 8
     /* #if defined(__arm__) || defined (RF24_LINUX) || defined (__ARDUINO_X86__)
      txDelay=190;
      #else //16Mhz Arduino	*/  
	 txDelay=65;
     a3a:	81 e4       	ldi	r24, 0x41	; 65
     a3c:	90 e0       	ldi	r25, 0x00	; 0
     a3e:	a0 e0       	ldi	r26, 0x00	; 0
     a40:	b0 e0       	ldi	r27, 0x00	; 0
     a42:	88 8b       	std	Y+16, r24	; 0x10
     a44:	99 8b       	std	Y+17, r25	; 0x11
     a46:	aa 8b       	std	Y+18, r26	; 0x12
     a48:	bb 8b       	std	Y+19, r27	; 0x13
	  //#endif
    }
  }
  write_register(RF_SETUP,setup);
     a4a:	41 2f       	mov	r20, r17
     a4c:	66 e0       	ldi	r22, 0x06	; 6
     a4e:	ce 01       	movw	r24, r28
     a50:	0e 94 41 02 	call	0x482	; 0x482 <_ZN4RF2414write_registerEhh>

  // Verify our result
  if ( read_register(RF_SETUP) == setup )
     a54:	66 e0       	ldi	r22, 0x06	; 6
     a56:	ce 01       	movw	r24, r28
     a58:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <_ZN4RF2413read_registerEh>
  {
    result = true;
  }
  return result;
     a5c:	91 e0       	ldi	r25, 0x01	; 1
     a5e:	18 13       	cpse	r17, r24
     a60:	90 e0       	ldi	r25, 0x00	; 0
}
     a62:	89 2f       	mov	r24, r25
     a64:	df 91       	pop	r29
     a66:	cf 91       	pop	r28
     a68:	1f 91       	pop	r17
     a6a:	0f 91       	pop	r16
     a6c:	08 95       	ret

00000a6e <_ZN4RF245beginEv>:
}

/****************************************************************************/

bool RF24::begin(void)
{
     a6e:	1f 93       	push	r17
     a70:	cf 93       	push	r28
     a72:	df 93       	push	r29
     a74:	ec 01       	movw	r28, r24
  uint8_t setup=0;

    if (ce_pin != csn_pin) Set_pin(ce_pin,OUT);  
     a76:	88 81       	ld	r24, Y
     a78:	99 81       	ldd	r25, Y+1	; 0x01
     a7a:	2a 81       	ldd	r18, Y+2	; 0x02
     a7c:	3b 81       	ldd	r19, Y+3	; 0x03
     a7e:	82 17       	cp	r24, r18
     a80:	93 07       	cpc	r25, r19
     a82:	21 f0       	breq	.+8      	; 0xa8c <_ZN4RF245beginEv+0x1e>
     a84:	61 e0       	ldi	r22, 0x01	; 1
     a86:	70 e0       	ldi	r23, 0x00	; 0
     a88:	0e 94 72 00 	call	0xe4	; 0xe4 <Set_pin>
        Set_pin(csn_pin,OUT);
     a8c:	61 e0       	ldi	r22, 0x01	; 1
     a8e:	70 e0       	ldi	r23, 0x00	; 0
     a90:	8a 81       	ldd	r24, Y+2	; 0x02
     a92:	9b 81       	ldd	r25, Y+3	; 0x03
     a94:	0e 94 72 00 	call	0xe4	; 0xe4 <Set_pin>
    _SPI.begin();
     a98:	0e 94 ac 05 	call	0xb58	; 0xb58 <_ZN8SPIClass5beginEv>
    ce(low);
     a9c:	60 e0       	ldi	r22, 0x00	; 0
     a9e:	ce 01       	movw	r24, r28
     aa0:	0e 94 da 01 	call	0x3b4	; 0x3b4 <_ZN4RF242ceEb>
  	csn(high);
     aa4:	61 e0       	ldi	r22, 0x01	; 1
     aa6:	ce 01       	movw	r24, r28
     aa8:	0e 94 2b 01 	call	0x256	; 0x256 <_ZN4RF243csnEb>
     aac:	80 e1       	ldi	r24, 0x10	; 16
     aae:	97 e2       	ldi	r25, 0x27	; 39
     ab0:	01 97       	sbiw	r24, 0x01	; 1
     ab2:	f1 f7       	brne	.-4      	; 0xab0 <_ZN4RF245beginEv+0x42>
  // Technically we require 4.5ms + 14us as a worst case. We'll just call it 5ms for good measure.
  // WARNING: _delay_ms is based on P-variant whereby non-P *may* require different timing.
  _delay_ms( 5 ) ;

  // Reset NRF_CONFIG and enable 16-bit CRC.
  write_register( NRF_CONFIG, 0x0C ) ;
     ab4:	4c e0       	ldi	r20, 0x0C	; 12
     ab6:	60 e0       	ldi	r22, 0x00	; 0
     ab8:	ce 01       	movw	r24, r28
     aba:	0e 94 41 02 	call	0x482	; 0x482 <_ZN4RF2414write_registerEhh>
}

/****************************************************************************/
void RF24::setRetries(uint8_t delay, uint8_t count)
{
 write_register(SETUP_RETR,(delay&0xf)<<ARD | (count&0xf)<<ARC);
     abe:	4f e5       	ldi	r20, 0x5F	; 95
     ac0:	64 e0       	ldi	r22, 0x04	; 4
     ac2:	ce 01       	movw	r24, r28
     ac4:	0e 94 41 02 	call	0x482	; 0x482 <_ZN4RF2414write_registerEhh>
  // Reset value is MAX
  //setPALevel( RF24_PA_MAX ) ;

  // check for connected module and if this is a p nRF24l01 variant
  //
  if( setDataRate( RF24_250KBPS ) )
     ac8:	62 e0       	ldi	r22, 0x02	; 2
     aca:	ce 01       	movw	r24, r28
     acc:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <_ZN4RF2411setDataRateE15rf24_datarate_e>
     ad0:	88 23       	and	r24, r24
     ad2:	11 f0       	breq	.+4      	; 0xad8 <_ZN4RF245beginEv+0x6a>
  {
    p_variant = true ;
     ad4:	81 e0       	ldi	r24, 0x01	; 1
     ad6:	8e 83       	std	Y+6, r24	; 0x06
  }
  setup = read_register(RF_SETUP);
     ad8:	66 e0       	ldi	r22, 0x06	; 6
     ada:	ce 01       	movw	r24, r28
     adc:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <_ZN4RF2413read_registerEh>
     ae0:	18 2f       	mov	r17, r24
 if( setup == 0b00001110 )     // register default for nRF24L01P
     ae2:	8e 30       	cpi	r24, 0x0E	; 14
     ae4:	11 f4       	brne	.+4      	; 0xaea <_ZN4RF245beginEv+0x7c>
  {
    p_variant = true ;
     ae6:	81 e0       	ldi	r24, 0x01	; 1
     ae8:	8e 83       	std	Y+6, r24	; 0x06
  }
  
  // Then set the data rate to the slowest (and most reliable) speed supported by all
  // hardware.
  setDataRate( RF24_1MBPS ) ;
     aea:	60 e0       	ldi	r22, 0x00	; 0
     aec:	ce 01       	movw	r24, r28
     aee:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <_ZN4RF2411setDataRateE15rf24_datarate_e>

  // Initialize CRC and request 2-byte (16bit) CRC
  //setCRCLength( RF24_CRC_16 ) ;

  // Disable dynamic payloads, to match dynamic_payloads_enabled setting - Reset value is 0
  toggle_features();
     af2:	ce 01       	movw	r24, r28
     af4:	0e 94 db 04 	call	0x9b6	; 0x9b6 <_ZN4RF2415toggle_featuresEv>
  write_register(FEATURE,0 );
     af8:	40 e0       	ldi	r20, 0x00	; 0
     afa:	6d e1       	ldi	r22, 0x1D	; 29
     afc:	ce 01       	movw	r24, r28
     afe:	0e 94 41 02 	call	0x482	; 0x482 <_ZN4RF2414write_registerEhh>
  write_register(DYNPD,0);
     b02:	40 e0       	ldi	r20, 0x00	; 0
     b04:	6c e1       	ldi	r22, 0x1C	; 28
     b06:	ce 01       	movw	r24, r28
     b08:	0e 94 41 02 	call	0x482	; 0x482 <_ZN4RF2414write_registerEhh>
  dynamic_payloads_enabled = false;
     b0c:	18 86       	std	Y+8, r1	; 0x08

  // Reset current status
  // Notice reset and flush is the last thing we do
  write_register(NRF_STATUS,_BV(RX_DR) | _BV(TX_DS) | _BV(MAX_RT) );
     b0e:	40 e7       	ldi	r20, 0x70	; 112
     b10:	67 e0       	ldi	r22, 0x07	; 7
     b12:	ce 01       	movw	r24, r28
     b14:	0e 94 41 02 	call	0x482	; 0x482 <_ZN4RF2414write_registerEhh>

  // Set up default configuration.  Callers can always change it later.
  // This channel should be universally safe and not bleed over into adjacent
  // spectrum.
  setChannel(76);
     b18:	6c e4       	ldi	r22, 0x4C	; 76
     b1a:	ce 01       	movw	r24, r28
     b1c:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <_ZN4RF2410setChannelEh>

  // Flush buffers
  flush_rx();
     b20:	ce 01       	movw	r24, r28
     b22:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <_ZN4RF248flush_rxEv>
  flush_tx();
     b26:	ce 01       	movw	r24, r28
     b28:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <_ZN4RF248flush_txEv>

  powerUp(); //Power up by default when begin() is called
     b2c:	ce 01       	movw	r24, r28
     b2e:	0e 94 50 04 	call	0x8a0	; 0x8a0 <_ZN4RF247powerUpEv>

  // Enable PTX, do not write CE high so radio will remain in standby I mode ( 130us max to transition to RX or TX instead of 1500us from powerUp )
  // PTX should use only 22uA of power
  write_register(NRF_CONFIG, ( read_register(NRF_CONFIG) ) & ~_BV(PRIM_RX) );
     b32:	60 e0       	ldi	r22, 0x00	; 0
     b34:	ce 01       	movw	r24, r28
     b36:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <_ZN4RF2413read_registerEh>
     b3a:	48 2f       	mov	r20, r24
     b3c:	4e 7f       	andi	r20, 0xFE	; 254
     b3e:	60 e0       	ldi	r22, 0x00	; 0
     b40:	ce 01       	movw	r24, r28
     b42:	0e 94 41 02 	call	0x482	; 0x482 <_ZN4RF2414write_registerEhh>

  // if setup is 0 or ff then there was no response from module
  return ( setup != 0 && setup != 0xff );
     b46:	11 50       	subi	r17, 0x01	; 1
     b48:	81 e0       	ldi	r24, 0x01	; 1
     b4a:	1e 3f       	cpi	r17, 0xFE	; 254
     b4c:	08 f0       	brcs	.+2      	; 0xb50 <_ZN4RF245beginEv+0xe2>
     b4e:	80 e0       	ldi	r24, 0x00	; 0
}
     b50:	df 91       	pop	r29
     b52:	cf 91       	pop	r28
     b54:	1f 91       	pop	r17
     b56:	08 95       	ret

00000b58 <_ZN8SPIClass5beginEv>:
void SPIClass::begin()
{
 //  cli();//noInterrupts(); // Protect from a scheduler and prevent transactionBegin
 
    
    Set_pin(SS, OUT);
     b58:	61 e0       	ldi	r22, 0x01	; 1
     b5a:	70 e0       	ldi	r23, 0x00	; 0
     b5c:	8a e0       	ldi	r24, 0x0A	; 10
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	0e 94 72 00 	call	0xe4	; 0xe4 <Set_pin>

    // Warning: if the SS pin ever becomes a LOW INPUT then SPI
    // automatically switches to Slave, so the data direction of
    // the SS pin MUST be kept as OUT.
    SPCR |= _BV(MSTR);
     b64:	8c b5       	in	r24, 0x2c	; 44
     b66:	80 61       	ori	r24, 0x10	; 16
     b68:	8c bd       	out	0x2c, r24	; 44
    SPCR |= _BV(SPE);
     b6a:	8c b5       	in	r24, 0x2c	; 44
     b6c:	80 64       	ori	r24, 0x40	; 64
     b6e:	8c bd       	out	0x2c, r24	; 44
    // Set direction register for SCK and MOSI pin.
    // MISO pin automatically overrides to INPUT.
    // By doing this AFTER enabling SPI, we avoid accidentally
    // clocking in a single bit since the lines go directly
    // from "input" to SPI control.
    Set_pin(SCK, OUT);
     b70:	61 e0       	ldi	r22, 0x01	; 1
     b72:	70 e0       	ldi	r23, 0x00	; 0
     b74:	8d e0       	ldi	r24, 0x0D	; 13
     b76:	90 e0       	ldi	r25, 0x00	; 0
     b78:	0e 94 72 00 	call	0xe4	; 0xe4 <Set_pin>
    Set_pin(MOSI, OUT);
     b7c:	61 e0       	ldi	r22, 0x01	; 1
     b7e:	70 e0       	ldi	r23, 0x00	; 0
     b80:	8b e0       	ldi	r24, 0x0B	; 11
     b82:	90 e0       	ldi	r25, 0x00	; 0
     b84:	0e 94 72 00 	call	0xe4	; 0xe4 <Set_pin>
     b88:	08 95       	ret

00000b8a <__subsf3>:
     b8a:	50 58       	subi	r21, 0x80	; 128

00000b8c <__addsf3>:
     b8c:	bb 27       	eor	r27, r27
     b8e:	aa 27       	eor	r26, r26
     b90:	0e 94 dd 05 	call	0xbba	; 0xbba <__addsf3x>
     b94:	0c 94 50 07 	jmp	0xea0	; 0xea0 <__fp_round>
     b98:	0e 94 42 07 	call	0xe84	; 0xe84 <__fp_pscA>
     b9c:	38 f0       	brcs	.+14     	; 0xbac <__addsf3+0x20>
     b9e:	0e 94 49 07 	call	0xe92	; 0xe92 <__fp_pscB>
     ba2:	20 f0       	brcs	.+8      	; 0xbac <__addsf3+0x20>
     ba4:	39 f4       	brne	.+14     	; 0xbb4 <__addsf3+0x28>
     ba6:	9f 3f       	cpi	r25, 0xFF	; 255
     ba8:	19 f4       	brne	.+6      	; 0xbb0 <__addsf3+0x24>
     baa:	26 f4       	brtc	.+8      	; 0xbb4 <__addsf3+0x28>
     bac:	0c 94 3f 07 	jmp	0xe7e	; 0xe7e <__fp_nan>
     bb0:	0e f4       	brtc	.+2      	; 0xbb4 <__addsf3+0x28>
     bb2:	e0 95       	com	r30
     bb4:	e7 fb       	bst	r30, 7
     bb6:	0c 94 39 07 	jmp	0xe72	; 0xe72 <__fp_inf>

00000bba <__addsf3x>:
     bba:	e9 2f       	mov	r30, r25
     bbc:	0e 94 61 07 	call	0xec2	; 0xec2 <__fp_split3>
     bc0:	58 f3       	brcs	.-42     	; 0xb98 <__addsf3+0xc>
     bc2:	ba 17       	cp	r27, r26
     bc4:	62 07       	cpc	r22, r18
     bc6:	73 07       	cpc	r23, r19
     bc8:	84 07       	cpc	r24, r20
     bca:	95 07       	cpc	r25, r21
     bcc:	20 f0       	brcs	.+8      	; 0xbd6 <__addsf3x+0x1c>
     bce:	79 f4       	brne	.+30     	; 0xbee <__addsf3x+0x34>
     bd0:	a6 f5       	brtc	.+104    	; 0xc3a <__addsf3x+0x80>
     bd2:	0c 94 83 07 	jmp	0xf06	; 0xf06 <__fp_zero>
     bd6:	0e f4       	brtc	.+2      	; 0xbda <__addsf3x+0x20>
     bd8:	e0 95       	com	r30
     bda:	0b 2e       	mov	r0, r27
     bdc:	ba 2f       	mov	r27, r26
     bde:	a0 2d       	mov	r26, r0
     be0:	0b 01       	movw	r0, r22
     be2:	b9 01       	movw	r22, r18
     be4:	90 01       	movw	r18, r0
     be6:	0c 01       	movw	r0, r24
     be8:	ca 01       	movw	r24, r20
     bea:	a0 01       	movw	r20, r0
     bec:	11 24       	eor	r1, r1
     bee:	ff 27       	eor	r31, r31
     bf0:	59 1b       	sub	r21, r25
     bf2:	99 f0       	breq	.+38     	; 0xc1a <__addsf3x+0x60>
     bf4:	59 3f       	cpi	r21, 0xF9	; 249
     bf6:	50 f4       	brcc	.+20     	; 0xc0c <__addsf3x+0x52>
     bf8:	50 3e       	cpi	r21, 0xE0	; 224
     bfa:	68 f1       	brcs	.+90     	; 0xc56 <__addsf3x+0x9c>
     bfc:	1a 16       	cp	r1, r26
     bfe:	f0 40       	sbci	r31, 0x00	; 0
     c00:	a2 2f       	mov	r26, r18
     c02:	23 2f       	mov	r18, r19
     c04:	34 2f       	mov	r19, r20
     c06:	44 27       	eor	r20, r20
     c08:	58 5f       	subi	r21, 0xF8	; 248
     c0a:	f3 cf       	rjmp	.-26     	; 0xbf2 <__addsf3x+0x38>
     c0c:	46 95       	lsr	r20
     c0e:	37 95       	ror	r19
     c10:	27 95       	ror	r18
     c12:	a7 95       	ror	r26
     c14:	f0 40       	sbci	r31, 0x00	; 0
     c16:	53 95       	inc	r21
     c18:	c9 f7       	brne	.-14     	; 0xc0c <__addsf3x+0x52>
     c1a:	7e f4       	brtc	.+30     	; 0xc3a <__addsf3x+0x80>
     c1c:	1f 16       	cp	r1, r31
     c1e:	ba 0b       	sbc	r27, r26
     c20:	62 0b       	sbc	r22, r18
     c22:	73 0b       	sbc	r23, r19
     c24:	84 0b       	sbc	r24, r20
     c26:	ba f0       	brmi	.+46     	; 0xc56 <__addsf3x+0x9c>
     c28:	91 50       	subi	r25, 0x01	; 1
     c2a:	a1 f0       	breq	.+40     	; 0xc54 <__addsf3x+0x9a>
     c2c:	ff 0f       	add	r31, r31
     c2e:	bb 1f       	adc	r27, r27
     c30:	66 1f       	adc	r22, r22
     c32:	77 1f       	adc	r23, r23
     c34:	88 1f       	adc	r24, r24
     c36:	c2 f7       	brpl	.-16     	; 0xc28 <__addsf3x+0x6e>
     c38:	0e c0       	rjmp	.+28     	; 0xc56 <__addsf3x+0x9c>
     c3a:	ba 0f       	add	r27, r26
     c3c:	62 1f       	adc	r22, r18
     c3e:	73 1f       	adc	r23, r19
     c40:	84 1f       	adc	r24, r20
     c42:	48 f4       	brcc	.+18     	; 0xc56 <__addsf3x+0x9c>
     c44:	87 95       	ror	r24
     c46:	77 95       	ror	r23
     c48:	67 95       	ror	r22
     c4a:	b7 95       	ror	r27
     c4c:	f7 95       	ror	r31
     c4e:	9e 3f       	cpi	r25, 0xFE	; 254
     c50:	08 f0       	brcs	.+2      	; 0xc54 <__addsf3x+0x9a>
     c52:	b0 cf       	rjmp	.-160    	; 0xbb4 <__addsf3+0x28>
     c54:	93 95       	inc	r25
     c56:	88 0f       	add	r24, r24
     c58:	08 f0       	brcs	.+2      	; 0xc5c <__addsf3x+0xa2>
     c5a:	99 27       	eor	r25, r25
     c5c:	ee 0f       	add	r30, r30
     c5e:	97 95       	ror	r25
     c60:	87 95       	ror	r24
     c62:	08 95       	ret

00000c64 <__cmpsf2>:
     c64:	0e 94 15 07 	call	0xe2a	; 0xe2a <__fp_cmp>
     c68:	08 f4       	brcc	.+2      	; 0xc6c <__cmpsf2+0x8>
     c6a:	81 e0       	ldi	r24, 0x01	; 1
     c6c:	08 95       	ret

00000c6e <__divsf3>:
     c6e:	0e 94 4b 06 	call	0xc96	; 0xc96 <__divsf3x>
     c72:	0c 94 50 07 	jmp	0xea0	; 0xea0 <__fp_round>
     c76:	0e 94 49 07 	call	0xe92	; 0xe92 <__fp_pscB>
     c7a:	58 f0       	brcs	.+22     	; 0xc92 <__divsf3+0x24>
     c7c:	0e 94 42 07 	call	0xe84	; 0xe84 <__fp_pscA>
     c80:	40 f0       	brcs	.+16     	; 0xc92 <__divsf3+0x24>
     c82:	29 f4       	brne	.+10     	; 0xc8e <__divsf3+0x20>
     c84:	5f 3f       	cpi	r21, 0xFF	; 255
     c86:	29 f0       	breq	.+10     	; 0xc92 <__divsf3+0x24>
     c88:	0c 94 39 07 	jmp	0xe72	; 0xe72 <__fp_inf>
     c8c:	51 11       	cpse	r21, r1
     c8e:	0c 94 84 07 	jmp	0xf08	; 0xf08 <__fp_szero>
     c92:	0c 94 3f 07 	jmp	0xe7e	; 0xe7e <__fp_nan>

00000c96 <__divsf3x>:
     c96:	0e 94 61 07 	call	0xec2	; 0xec2 <__fp_split3>
     c9a:	68 f3       	brcs	.-38     	; 0xc76 <__divsf3+0x8>

00000c9c <__divsf3_pse>:
     c9c:	99 23       	and	r25, r25
     c9e:	b1 f3       	breq	.-20     	; 0xc8c <__divsf3+0x1e>
     ca0:	55 23       	and	r21, r21
     ca2:	91 f3       	breq	.-28     	; 0xc88 <__divsf3+0x1a>
     ca4:	95 1b       	sub	r25, r21
     ca6:	55 0b       	sbc	r21, r21
     ca8:	bb 27       	eor	r27, r27
     caa:	aa 27       	eor	r26, r26
     cac:	62 17       	cp	r22, r18
     cae:	73 07       	cpc	r23, r19
     cb0:	84 07       	cpc	r24, r20
     cb2:	38 f0       	brcs	.+14     	; 0xcc2 <__divsf3_pse+0x26>
     cb4:	9f 5f       	subi	r25, 0xFF	; 255
     cb6:	5f 4f       	sbci	r21, 0xFF	; 255
     cb8:	22 0f       	add	r18, r18
     cba:	33 1f       	adc	r19, r19
     cbc:	44 1f       	adc	r20, r20
     cbe:	aa 1f       	adc	r26, r26
     cc0:	a9 f3       	breq	.-22     	; 0xcac <__divsf3_pse+0x10>
     cc2:	35 d0       	rcall	.+106    	; 0xd2e <__divsf3_pse+0x92>
     cc4:	0e 2e       	mov	r0, r30
     cc6:	3a f0       	brmi	.+14     	; 0xcd6 <__divsf3_pse+0x3a>
     cc8:	e0 e8       	ldi	r30, 0x80	; 128
     cca:	32 d0       	rcall	.+100    	; 0xd30 <__divsf3_pse+0x94>
     ccc:	91 50       	subi	r25, 0x01	; 1
     cce:	50 40       	sbci	r21, 0x00	; 0
     cd0:	e6 95       	lsr	r30
     cd2:	00 1c       	adc	r0, r0
     cd4:	ca f7       	brpl	.-14     	; 0xcc8 <__divsf3_pse+0x2c>
     cd6:	2b d0       	rcall	.+86     	; 0xd2e <__divsf3_pse+0x92>
     cd8:	fe 2f       	mov	r31, r30
     cda:	29 d0       	rcall	.+82     	; 0xd2e <__divsf3_pse+0x92>
     cdc:	66 0f       	add	r22, r22
     cde:	77 1f       	adc	r23, r23
     ce0:	88 1f       	adc	r24, r24
     ce2:	bb 1f       	adc	r27, r27
     ce4:	26 17       	cp	r18, r22
     ce6:	37 07       	cpc	r19, r23
     ce8:	48 07       	cpc	r20, r24
     cea:	ab 07       	cpc	r26, r27
     cec:	b0 e8       	ldi	r27, 0x80	; 128
     cee:	09 f0       	breq	.+2      	; 0xcf2 <__divsf3_pse+0x56>
     cf0:	bb 0b       	sbc	r27, r27
     cf2:	80 2d       	mov	r24, r0
     cf4:	bf 01       	movw	r22, r30
     cf6:	ff 27       	eor	r31, r31
     cf8:	93 58       	subi	r25, 0x83	; 131
     cfa:	5f 4f       	sbci	r21, 0xFF	; 255
     cfc:	3a f0       	brmi	.+14     	; 0xd0c <__divsf3_pse+0x70>
     cfe:	9e 3f       	cpi	r25, 0xFE	; 254
     d00:	51 05       	cpc	r21, r1
     d02:	78 f0       	brcs	.+30     	; 0xd22 <__divsf3_pse+0x86>
     d04:	0c 94 39 07 	jmp	0xe72	; 0xe72 <__fp_inf>
     d08:	0c 94 84 07 	jmp	0xf08	; 0xf08 <__fp_szero>
     d0c:	5f 3f       	cpi	r21, 0xFF	; 255
     d0e:	e4 f3       	brlt	.-8      	; 0xd08 <__divsf3_pse+0x6c>
     d10:	98 3e       	cpi	r25, 0xE8	; 232
     d12:	d4 f3       	brlt	.-12     	; 0xd08 <__divsf3_pse+0x6c>
     d14:	86 95       	lsr	r24
     d16:	77 95       	ror	r23
     d18:	67 95       	ror	r22
     d1a:	b7 95       	ror	r27
     d1c:	f7 95       	ror	r31
     d1e:	9f 5f       	subi	r25, 0xFF	; 255
     d20:	c9 f7       	brne	.-14     	; 0xd14 <__divsf3_pse+0x78>
     d22:	88 0f       	add	r24, r24
     d24:	91 1d       	adc	r25, r1
     d26:	96 95       	lsr	r25
     d28:	87 95       	ror	r24
     d2a:	97 f9       	bld	r25, 7
     d2c:	08 95       	ret
     d2e:	e1 e0       	ldi	r30, 0x01	; 1
     d30:	66 0f       	add	r22, r22
     d32:	77 1f       	adc	r23, r23
     d34:	88 1f       	adc	r24, r24
     d36:	bb 1f       	adc	r27, r27
     d38:	62 17       	cp	r22, r18
     d3a:	73 07       	cpc	r23, r19
     d3c:	84 07       	cpc	r24, r20
     d3e:	ba 07       	cpc	r27, r26
     d40:	20 f0       	brcs	.+8      	; 0xd4a <__divsf3_pse+0xae>
     d42:	62 1b       	sub	r22, r18
     d44:	73 0b       	sbc	r23, r19
     d46:	84 0b       	sbc	r24, r20
     d48:	ba 0b       	sbc	r27, r26
     d4a:	ee 1f       	adc	r30, r30
     d4c:	88 f7       	brcc	.-30     	; 0xd30 <__divsf3_pse+0x94>
     d4e:	e0 95       	com	r30
     d50:	08 95       	ret

00000d52 <__fixunssfsi>:
     d52:	0e 94 69 07 	call	0xed2	; 0xed2 <__fp_splitA>
     d56:	88 f0       	brcs	.+34     	; 0xd7a <__fixunssfsi+0x28>
     d58:	9f 57       	subi	r25, 0x7F	; 127
     d5a:	98 f0       	brcs	.+38     	; 0xd82 <__fixunssfsi+0x30>
     d5c:	b9 2f       	mov	r27, r25
     d5e:	99 27       	eor	r25, r25
     d60:	b7 51       	subi	r27, 0x17	; 23
     d62:	b0 f0       	brcs	.+44     	; 0xd90 <__fixunssfsi+0x3e>
     d64:	e1 f0       	breq	.+56     	; 0xd9e <__fixunssfsi+0x4c>
     d66:	66 0f       	add	r22, r22
     d68:	77 1f       	adc	r23, r23
     d6a:	88 1f       	adc	r24, r24
     d6c:	99 1f       	adc	r25, r25
     d6e:	1a f0       	brmi	.+6      	; 0xd76 <__fixunssfsi+0x24>
     d70:	ba 95       	dec	r27
     d72:	c9 f7       	brne	.-14     	; 0xd66 <__fixunssfsi+0x14>
     d74:	14 c0       	rjmp	.+40     	; 0xd9e <__fixunssfsi+0x4c>
     d76:	b1 30       	cpi	r27, 0x01	; 1
     d78:	91 f0       	breq	.+36     	; 0xd9e <__fixunssfsi+0x4c>
     d7a:	0e 94 83 07 	call	0xf06	; 0xf06 <__fp_zero>
     d7e:	b1 e0       	ldi	r27, 0x01	; 1
     d80:	08 95       	ret
     d82:	0c 94 83 07 	jmp	0xf06	; 0xf06 <__fp_zero>
     d86:	67 2f       	mov	r22, r23
     d88:	78 2f       	mov	r23, r24
     d8a:	88 27       	eor	r24, r24
     d8c:	b8 5f       	subi	r27, 0xF8	; 248
     d8e:	39 f0       	breq	.+14     	; 0xd9e <__fixunssfsi+0x4c>
     d90:	b9 3f       	cpi	r27, 0xF9	; 249
     d92:	cc f3       	brlt	.-14     	; 0xd86 <__fixunssfsi+0x34>
     d94:	86 95       	lsr	r24
     d96:	77 95       	ror	r23
     d98:	67 95       	ror	r22
     d9a:	b3 95       	inc	r27
     d9c:	d9 f7       	brne	.-10     	; 0xd94 <__fixunssfsi+0x42>
     d9e:	3e f4       	brtc	.+14     	; 0xdae <__fixunssfsi+0x5c>
     da0:	90 95       	com	r25
     da2:	80 95       	com	r24
     da4:	70 95       	com	r23
     da6:	61 95       	neg	r22
     da8:	7f 4f       	sbci	r23, 0xFF	; 255
     daa:	8f 4f       	sbci	r24, 0xFF	; 255
     dac:	9f 4f       	sbci	r25, 0xFF	; 255
     dae:	08 95       	ret

00000db0 <__floatunsisf>:
     db0:	e8 94       	clt
     db2:	09 c0       	rjmp	.+18     	; 0xdc6 <__floatsisf+0x12>

00000db4 <__floatsisf>:
     db4:	97 fb       	bst	r25, 7
     db6:	3e f4       	brtc	.+14     	; 0xdc6 <__floatsisf+0x12>
     db8:	90 95       	com	r25
     dba:	80 95       	com	r24
     dbc:	70 95       	com	r23
     dbe:	61 95       	neg	r22
     dc0:	7f 4f       	sbci	r23, 0xFF	; 255
     dc2:	8f 4f       	sbci	r24, 0xFF	; 255
     dc4:	9f 4f       	sbci	r25, 0xFF	; 255
     dc6:	99 23       	and	r25, r25
     dc8:	a9 f0       	breq	.+42     	; 0xdf4 <__floatsisf+0x40>
     dca:	f9 2f       	mov	r31, r25
     dcc:	96 e9       	ldi	r25, 0x96	; 150
     dce:	bb 27       	eor	r27, r27
     dd0:	93 95       	inc	r25
     dd2:	f6 95       	lsr	r31
     dd4:	87 95       	ror	r24
     dd6:	77 95       	ror	r23
     dd8:	67 95       	ror	r22
     dda:	b7 95       	ror	r27
     ddc:	f1 11       	cpse	r31, r1
     dde:	f8 cf       	rjmp	.-16     	; 0xdd0 <__floatsisf+0x1c>
     de0:	fa f4       	brpl	.+62     	; 0xe20 <__floatsisf+0x6c>
     de2:	bb 0f       	add	r27, r27
     de4:	11 f4       	brne	.+4      	; 0xdea <__floatsisf+0x36>
     de6:	60 ff       	sbrs	r22, 0
     de8:	1b c0       	rjmp	.+54     	; 0xe20 <__floatsisf+0x6c>
     dea:	6f 5f       	subi	r22, 0xFF	; 255
     dec:	7f 4f       	sbci	r23, 0xFF	; 255
     dee:	8f 4f       	sbci	r24, 0xFF	; 255
     df0:	9f 4f       	sbci	r25, 0xFF	; 255
     df2:	16 c0       	rjmp	.+44     	; 0xe20 <__floatsisf+0x6c>
     df4:	88 23       	and	r24, r24
     df6:	11 f0       	breq	.+4      	; 0xdfc <__floatsisf+0x48>
     df8:	96 e9       	ldi	r25, 0x96	; 150
     dfa:	11 c0       	rjmp	.+34     	; 0xe1e <__floatsisf+0x6a>
     dfc:	77 23       	and	r23, r23
     dfe:	21 f0       	breq	.+8      	; 0xe08 <__floatsisf+0x54>
     e00:	9e e8       	ldi	r25, 0x8E	; 142
     e02:	87 2f       	mov	r24, r23
     e04:	76 2f       	mov	r23, r22
     e06:	05 c0       	rjmp	.+10     	; 0xe12 <__floatsisf+0x5e>
     e08:	66 23       	and	r22, r22
     e0a:	71 f0       	breq	.+28     	; 0xe28 <__floatsisf+0x74>
     e0c:	96 e8       	ldi	r25, 0x86	; 134
     e0e:	86 2f       	mov	r24, r22
     e10:	70 e0       	ldi	r23, 0x00	; 0
     e12:	60 e0       	ldi	r22, 0x00	; 0
     e14:	2a f0       	brmi	.+10     	; 0xe20 <__floatsisf+0x6c>
     e16:	9a 95       	dec	r25
     e18:	66 0f       	add	r22, r22
     e1a:	77 1f       	adc	r23, r23
     e1c:	88 1f       	adc	r24, r24
     e1e:	da f7       	brpl	.-10     	; 0xe16 <__floatsisf+0x62>
     e20:	88 0f       	add	r24, r24
     e22:	96 95       	lsr	r25
     e24:	87 95       	ror	r24
     e26:	97 f9       	bld	r25, 7
     e28:	08 95       	ret

00000e2a <__fp_cmp>:
     e2a:	99 0f       	add	r25, r25
     e2c:	00 08       	sbc	r0, r0
     e2e:	55 0f       	add	r21, r21
     e30:	aa 0b       	sbc	r26, r26
     e32:	e0 e8       	ldi	r30, 0x80	; 128
     e34:	fe ef       	ldi	r31, 0xFE	; 254
     e36:	16 16       	cp	r1, r22
     e38:	17 06       	cpc	r1, r23
     e3a:	e8 07       	cpc	r30, r24
     e3c:	f9 07       	cpc	r31, r25
     e3e:	c0 f0       	brcs	.+48     	; 0xe70 <__fp_cmp+0x46>
     e40:	12 16       	cp	r1, r18
     e42:	13 06       	cpc	r1, r19
     e44:	e4 07       	cpc	r30, r20
     e46:	f5 07       	cpc	r31, r21
     e48:	98 f0       	brcs	.+38     	; 0xe70 <__fp_cmp+0x46>
     e4a:	62 1b       	sub	r22, r18
     e4c:	73 0b       	sbc	r23, r19
     e4e:	84 0b       	sbc	r24, r20
     e50:	95 0b       	sbc	r25, r21
     e52:	39 f4       	brne	.+14     	; 0xe62 <__fp_cmp+0x38>
     e54:	0a 26       	eor	r0, r26
     e56:	61 f0       	breq	.+24     	; 0xe70 <__fp_cmp+0x46>
     e58:	23 2b       	or	r18, r19
     e5a:	24 2b       	or	r18, r20
     e5c:	25 2b       	or	r18, r21
     e5e:	21 f4       	brne	.+8      	; 0xe68 <__fp_cmp+0x3e>
     e60:	08 95       	ret
     e62:	0a 26       	eor	r0, r26
     e64:	09 f4       	brne	.+2      	; 0xe68 <__fp_cmp+0x3e>
     e66:	a1 40       	sbci	r26, 0x01	; 1
     e68:	a6 95       	lsr	r26
     e6a:	8f ef       	ldi	r24, 0xFF	; 255
     e6c:	81 1d       	adc	r24, r1
     e6e:	81 1d       	adc	r24, r1
     e70:	08 95       	ret

00000e72 <__fp_inf>:
     e72:	97 f9       	bld	r25, 7
     e74:	9f 67       	ori	r25, 0x7F	; 127
     e76:	80 e8       	ldi	r24, 0x80	; 128
     e78:	70 e0       	ldi	r23, 0x00	; 0
     e7a:	60 e0       	ldi	r22, 0x00	; 0
     e7c:	08 95       	ret

00000e7e <__fp_nan>:
     e7e:	9f ef       	ldi	r25, 0xFF	; 255
     e80:	80 ec       	ldi	r24, 0xC0	; 192
     e82:	08 95       	ret

00000e84 <__fp_pscA>:
     e84:	00 24       	eor	r0, r0
     e86:	0a 94       	dec	r0
     e88:	16 16       	cp	r1, r22
     e8a:	17 06       	cpc	r1, r23
     e8c:	18 06       	cpc	r1, r24
     e8e:	09 06       	cpc	r0, r25
     e90:	08 95       	ret

00000e92 <__fp_pscB>:
     e92:	00 24       	eor	r0, r0
     e94:	0a 94       	dec	r0
     e96:	12 16       	cp	r1, r18
     e98:	13 06       	cpc	r1, r19
     e9a:	14 06       	cpc	r1, r20
     e9c:	05 06       	cpc	r0, r21
     e9e:	08 95       	ret

00000ea0 <__fp_round>:
     ea0:	09 2e       	mov	r0, r25
     ea2:	03 94       	inc	r0
     ea4:	00 0c       	add	r0, r0
     ea6:	11 f4       	brne	.+4      	; 0xeac <__fp_round+0xc>
     ea8:	88 23       	and	r24, r24
     eaa:	52 f0       	brmi	.+20     	; 0xec0 <__fp_round+0x20>
     eac:	bb 0f       	add	r27, r27
     eae:	40 f4       	brcc	.+16     	; 0xec0 <__fp_round+0x20>
     eb0:	bf 2b       	or	r27, r31
     eb2:	11 f4       	brne	.+4      	; 0xeb8 <__fp_round+0x18>
     eb4:	60 ff       	sbrs	r22, 0
     eb6:	04 c0       	rjmp	.+8      	; 0xec0 <__fp_round+0x20>
     eb8:	6f 5f       	subi	r22, 0xFF	; 255
     eba:	7f 4f       	sbci	r23, 0xFF	; 255
     ebc:	8f 4f       	sbci	r24, 0xFF	; 255
     ebe:	9f 4f       	sbci	r25, 0xFF	; 255
     ec0:	08 95       	ret

00000ec2 <__fp_split3>:
     ec2:	57 fd       	sbrc	r21, 7
     ec4:	90 58       	subi	r25, 0x80	; 128
     ec6:	44 0f       	add	r20, r20
     ec8:	55 1f       	adc	r21, r21
     eca:	59 f0       	breq	.+22     	; 0xee2 <__fp_splitA+0x10>
     ecc:	5f 3f       	cpi	r21, 0xFF	; 255
     ece:	71 f0       	breq	.+28     	; 0xeec <__fp_splitA+0x1a>
     ed0:	47 95       	ror	r20

00000ed2 <__fp_splitA>:
     ed2:	88 0f       	add	r24, r24
     ed4:	97 fb       	bst	r25, 7
     ed6:	99 1f       	adc	r25, r25
     ed8:	61 f0       	breq	.+24     	; 0xef2 <__fp_splitA+0x20>
     eda:	9f 3f       	cpi	r25, 0xFF	; 255
     edc:	79 f0       	breq	.+30     	; 0xefc <__fp_splitA+0x2a>
     ede:	87 95       	ror	r24
     ee0:	08 95       	ret
     ee2:	12 16       	cp	r1, r18
     ee4:	13 06       	cpc	r1, r19
     ee6:	14 06       	cpc	r1, r20
     ee8:	55 1f       	adc	r21, r21
     eea:	f2 cf       	rjmp	.-28     	; 0xed0 <__fp_split3+0xe>
     eec:	46 95       	lsr	r20
     eee:	f1 df       	rcall	.-30     	; 0xed2 <__fp_splitA>
     ef0:	08 c0       	rjmp	.+16     	; 0xf02 <__fp_splitA+0x30>
     ef2:	16 16       	cp	r1, r22
     ef4:	17 06       	cpc	r1, r23
     ef6:	18 06       	cpc	r1, r24
     ef8:	99 1f       	adc	r25, r25
     efa:	f1 cf       	rjmp	.-30     	; 0xede <__fp_splitA+0xc>
     efc:	86 95       	lsr	r24
     efe:	71 05       	cpc	r23, r1
     f00:	61 05       	cpc	r22, r1
     f02:	08 94       	sec
     f04:	08 95       	ret

00000f06 <__fp_zero>:
     f06:	e8 94       	clt

00000f08 <__fp_szero>:
     f08:	bb 27       	eor	r27, r27
     f0a:	66 27       	eor	r22, r22
     f0c:	77 27       	eor	r23, r23
     f0e:	cb 01       	movw	r24, r22
     f10:	97 f9       	bld	r25, 7
     f12:	08 95       	ret

00000f14 <__gesf2>:
     f14:	0e 94 15 07 	call	0xe2a	; 0xe2a <__fp_cmp>
     f18:	08 f4       	brcc	.+2      	; 0xf1c <__gesf2+0x8>
     f1a:	8f ef       	ldi	r24, 0xFF	; 255
     f1c:	08 95       	ret

00000f1e <__mulsf3>:
     f1e:	0e 94 a2 07 	call	0xf44	; 0xf44 <__mulsf3x>
     f22:	0c 94 50 07 	jmp	0xea0	; 0xea0 <__fp_round>
     f26:	0e 94 42 07 	call	0xe84	; 0xe84 <__fp_pscA>
     f2a:	38 f0       	brcs	.+14     	; 0xf3a <__mulsf3+0x1c>
     f2c:	0e 94 49 07 	call	0xe92	; 0xe92 <__fp_pscB>
     f30:	20 f0       	brcs	.+8      	; 0xf3a <__mulsf3+0x1c>
     f32:	95 23       	and	r25, r21
     f34:	11 f0       	breq	.+4      	; 0xf3a <__mulsf3+0x1c>
     f36:	0c 94 39 07 	jmp	0xe72	; 0xe72 <__fp_inf>
     f3a:	0c 94 3f 07 	jmp	0xe7e	; 0xe7e <__fp_nan>
     f3e:	11 24       	eor	r1, r1
     f40:	0c 94 84 07 	jmp	0xf08	; 0xf08 <__fp_szero>

00000f44 <__mulsf3x>:
     f44:	0e 94 61 07 	call	0xec2	; 0xec2 <__fp_split3>
     f48:	70 f3       	brcs	.-36     	; 0xf26 <__mulsf3+0x8>

00000f4a <__mulsf3_pse>:
     f4a:	95 9f       	mul	r25, r21
     f4c:	c1 f3       	breq	.-16     	; 0xf3e <__mulsf3+0x20>
     f4e:	95 0f       	add	r25, r21
     f50:	50 e0       	ldi	r21, 0x00	; 0
     f52:	55 1f       	adc	r21, r21
     f54:	62 9f       	mul	r22, r18
     f56:	f0 01       	movw	r30, r0
     f58:	72 9f       	mul	r23, r18
     f5a:	bb 27       	eor	r27, r27
     f5c:	f0 0d       	add	r31, r0
     f5e:	b1 1d       	adc	r27, r1
     f60:	63 9f       	mul	r22, r19
     f62:	aa 27       	eor	r26, r26
     f64:	f0 0d       	add	r31, r0
     f66:	b1 1d       	adc	r27, r1
     f68:	aa 1f       	adc	r26, r26
     f6a:	64 9f       	mul	r22, r20
     f6c:	66 27       	eor	r22, r22
     f6e:	b0 0d       	add	r27, r0
     f70:	a1 1d       	adc	r26, r1
     f72:	66 1f       	adc	r22, r22
     f74:	82 9f       	mul	r24, r18
     f76:	22 27       	eor	r18, r18
     f78:	b0 0d       	add	r27, r0
     f7a:	a1 1d       	adc	r26, r1
     f7c:	62 1f       	adc	r22, r18
     f7e:	73 9f       	mul	r23, r19
     f80:	b0 0d       	add	r27, r0
     f82:	a1 1d       	adc	r26, r1
     f84:	62 1f       	adc	r22, r18
     f86:	83 9f       	mul	r24, r19
     f88:	a0 0d       	add	r26, r0
     f8a:	61 1d       	adc	r22, r1
     f8c:	22 1f       	adc	r18, r18
     f8e:	74 9f       	mul	r23, r20
     f90:	33 27       	eor	r19, r19
     f92:	a0 0d       	add	r26, r0
     f94:	61 1d       	adc	r22, r1
     f96:	23 1f       	adc	r18, r19
     f98:	84 9f       	mul	r24, r20
     f9a:	60 0d       	add	r22, r0
     f9c:	21 1d       	adc	r18, r1
     f9e:	82 2f       	mov	r24, r18
     fa0:	76 2f       	mov	r23, r22
     fa2:	6a 2f       	mov	r22, r26
     fa4:	11 24       	eor	r1, r1
     fa6:	9f 57       	subi	r25, 0x7F	; 127
     fa8:	50 40       	sbci	r21, 0x00	; 0
     faa:	9a f0       	brmi	.+38     	; 0xfd2 <__mulsf3_pse+0x88>
     fac:	f1 f0       	breq	.+60     	; 0xfea <__mulsf3_pse+0xa0>
     fae:	88 23       	and	r24, r24
     fb0:	4a f0       	brmi	.+18     	; 0xfc4 <__mulsf3_pse+0x7a>
     fb2:	ee 0f       	add	r30, r30
     fb4:	ff 1f       	adc	r31, r31
     fb6:	bb 1f       	adc	r27, r27
     fb8:	66 1f       	adc	r22, r22
     fba:	77 1f       	adc	r23, r23
     fbc:	88 1f       	adc	r24, r24
     fbe:	91 50       	subi	r25, 0x01	; 1
     fc0:	50 40       	sbci	r21, 0x00	; 0
     fc2:	a9 f7       	brne	.-22     	; 0xfae <__mulsf3_pse+0x64>
     fc4:	9e 3f       	cpi	r25, 0xFE	; 254
     fc6:	51 05       	cpc	r21, r1
     fc8:	80 f0       	brcs	.+32     	; 0xfea <__mulsf3_pse+0xa0>
     fca:	0c 94 39 07 	jmp	0xe72	; 0xe72 <__fp_inf>
     fce:	0c 94 84 07 	jmp	0xf08	; 0xf08 <__fp_szero>
     fd2:	5f 3f       	cpi	r21, 0xFF	; 255
     fd4:	e4 f3       	brlt	.-8      	; 0xfce <__mulsf3_pse+0x84>
     fd6:	98 3e       	cpi	r25, 0xE8	; 232
     fd8:	d4 f3       	brlt	.-12     	; 0xfce <__mulsf3_pse+0x84>
     fda:	86 95       	lsr	r24
     fdc:	77 95       	ror	r23
     fde:	67 95       	ror	r22
     fe0:	b7 95       	ror	r27
     fe2:	f7 95       	ror	r31
     fe4:	e7 95       	ror	r30
     fe6:	9f 5f       	subi	r25, 0xFF	; 255
     fe8:	c1 f7       	brne	.-16     	; 0xfda <__mulsf3_pse+0x90>
     fea:	fe 2b       	or	r31, r30
     fec:	88 0f       	add	r24, r24
     fee:	91 1d       	adc	r25, r1
     ff0:	96 95       	lsr	r25
     ff2:	87 95       	ror	r24
     ff4:	97 f9       	bld	r25, 7
     ff6:	08 95       	ret

00000ff8 <__tablejump2__>:
     ff8:	ee 0f       	add	r30, r30
     ffa:	ff 1f       	adc	r31, r31
     ffc:	05 90       	lpm	r0, Z+
     ffe:	f4 91       	lpm	r31, Z
    1000:	e0 2d       	mov	r30, r0
    1002:	09 94       	ijmp

00001004 <_exit>:
    1004:	f8 94       	cli

00001006 <__stop_program>:
    1006:	ff cf       	rjmp	.-2      	; 0x1006 <__stop_program>
